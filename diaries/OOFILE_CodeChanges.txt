OOFILE Code Change Diary
Note: there are separate diaries for each of the GUI interfaces
see also OOFGraph Code Change Diary and OOFRep Code Change Diary
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
VERSION 1.2 released  2nd April 1996
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
USING SMARTHEAP V3
96/04/08
FILE	oof0.hpp
- removed Smartheap includes as they should be AFTER all other includes,
  put them in top of each source file instead.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
IMPROVE REPORTS & EASE OF GRID OUTPUT - ADD LEN & OUTPUT METHODS
96/04/16
CLASS	dbField
Method	fieldEditLen
		- rename as fieldOutLen to better reflect function
		
Method	fieldMinWrapWidth
		- added to return default 0 or 1 (empty or some content)
		
Method	getChars
		- added to write on a buffer of specified size, using ostrstream


CLASS	dbChar
Method	getChars
		- added to copy straight to buffer


CLASS	dbText		
Method	getChars
		- added to copy straight to buffer
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/05/01
GUI support

CLASS	dbConnect
Method	attachTable
		- set the table number


CLASS	dbTable
- mTableNumber added

Method	tableNumber
		- added inline

Method	ctor
		- init mTableNumber(USHRT_MAX)

Method	copy ctor
		- copy mTableNumber

Method	isNewRecord
		- added simple forwarder

Method	saveRecord
		- broadcast with 2nd param of isNewRecord()

Method	isEmpty
		- added to quickly check if record loaded before checking count,
		  so will avoid call to countAll if all records


CLASS	OOF_tableBackend
Method	isNewRecord
		- added pure virtual


CLASS	OOF_ctreeTableBackend
Method	isNewRecord
		- added, calling OOF_CtreeBufferedContext->isNew()


CLASS	dbBroadcaster
Method	broadcast
		- take extra optional param skipping & use to avoid broadcasting to one 
		  receiver.


CLASS	dbSource
Method	table
		- added default that returns 0


CLASS	dbSourceTable
Method	table
		- add to return the table

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/05/02
GUI support

CLASS	OOF_ExpandableLongArray
Method	deleteCell
		- renamed to deleteItem to be more representative


CLASS	OOF_ctreeSelection
Method	deleteItem
		- added


CLASS	dbTable
Method	addOIDtoSelection
		- added forwarder with selection changed broadcast

Method	deleteRecordFromSelection
		- added forwarder with selection changed broadcast


CLASS	OOF_tableBackend
Method	addOIDtoSelection
		- added pure virtual

Method	deleteRecordFromSelection
		- added pure virtual


CLASS	OOF_ctreeTableBackend
Method	addOIDtoSelection
		- added just calling mSelection->append

Method	deleteRecordFromSelection
		- added calling new method mSelection->deleteItem



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/05/03
CHANGE dbView TO ALWAYS CLONE TABLES & USE FIELD NUMBERS, NOT dbFields

CLASS	dbSourceTable
Method	ctor
		- clone the input table

Method	copy ctor
		- added to copy the cloned table

Method	dtor
		- delete the table pointer, now we own it


***** not sure about the implications of the above, archive as variant and ignore for now, changing AM generation to work around it ****


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/05/15
SUPPORT FOR MORE GENERAL RELATIONSHIPS & HIERARCHICAL GUI TABLES

MACRO	DEFINE_REF, DEFINE_SET
- also defines a cast operator so the reference member can be used directly in lieu of the pointer. eg if we need to pass in a dbVisits* can use People.Visits.


CLASS	dbView
Func	operator<<(dbView*, dbField*)
		- added to allow us to use expressions like (new dbView(blah) << blah.field)
		


CLASS	dbRelRefBase
- added mMNlink

Method	dtor
		- added to conditionally delete mMNlink
		
Method	describe
		- allow to describe M:N relationships
		
Method	receiveMsg
		- don't update inverse's OID when it's an N relationship - it will use the 
		   table OID to search this side. Saves an unnecessary saveRecord.
		   
		- assert that it's not MN relationship - we should never be the receiver
		   
Method	relateFromRecord
		- for 1:N relationships use the inverse table's OID, not the rel field, to 
		    search our side

		- for M:N relationships ask mMNlink to relate for us 

Method	relateSelection
		- iterate over selection, doing relateRecord for each record and accumulating
		    
Method	setMNlink added taking a oofRelMN*

Method	BuildRelatedTable
		- if MN relationship, call mMNlink->BuildRelatedTable rather than cloning our 
		   prototype

Method	completeCloneOfInverse
		- don't subscribe to lhs if we are an MN relationship (the updates etc. are 
		   handled through the MN traversal)
		   
		   
		   

CLASS	OOF_RelMN
- added privately inside oofrel.cpp		    
		- conditionally call mMNlink->relateMN();
		    


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/05/18
DEBUGGING MN RELATIONSHIPS

CLASS	dbRelRefBase
Method	setMNlink 
		- dec references to the existing link, if any
		
Method	dtor
		- use OOF_RelMN::decRefs
		
Method	completeCloneOfInverse
		- make setting mTable->mRelated to point to us conditional on there not being 
		   an MN link.

Method	completeCloneOfInverse(dbTable* clonerTable)
		- added for use by MN links where the caller knows only the table on the lhs,
		   and not the dbRelRefBase to which this should refer
		   		   
		
CLASS	OOF_RelMN
Method	copy ctor
		- added to copy rhs and set rhs pointers = 0
		
Method	decRefs
		- added to dec and delete if fall to 0
		
		
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
EXTERNAL HANDLING OF SELECTIONS
96/05/19



CLASS	OOF_Selection
- added as abstract base


CLASS	OOF_ctreeSelection
- made inherit from OOF_Selection, thus exposing
Method	isEmpty, union_with, intersection_with


CLASS	dbSelection
- added simple handle class to contain pointer to abstract OOF_Selection


CLASS	dbTable
Method	currentSelection, setSelection
		- added simple forwarders

CLASS	OOF_tableBackend
Method	currentSelection, setSelection
		- added pure virtual

CLASS	OOF_ctreeTableBackend
Method	currentSelection,
		- added to create a dbSelection
		
Method	setSelection
		- added to downcast the selection inside a dbSelection and set ourself
		
		
CLASS	dbRelRefBase
Method	relateSelection
		- use a dbSelection to accumulate the relateRecord results
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX PROPAGATION FOR MN RELATIONSHIPS
96/05/27

CLASS	dbRelRefBase
Method	receiveMsg
		- remove assert that mMNlinkn==0 as now DO expect MN relationships to receive 
		   notification.
		- for case OOFmsg_ChangeContext, now call selectNone() instead of 
		   ChangeContext, on the related table


Method	completeCloneOfInverse
		- if MN link, tell the existing rel to unsubscribe, and subscribe ourself as 
		   the notifier for the related table
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG FOUND IF dbText AT ODD POSITION, NEEDING FILLER IN FRONT OF LENGTH FIELD
96/05/28
CLASS	OOF_ctreeTableBackend
Method	BuildDODA
		- check for filler before a BLOB
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG FOUND IMPORTING STREAMS INTO DB'S WITH RELATIONSHIPS
96/05/28
CLASS	dbTable
Method	insert
		- skip over relationship fields when reading from stream
		- when hit end of stream and it's a short record, check if the only fields 
		   left are relationship fields, before declaring an error
		
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX PROBLEM WITH CODEWARRIOR 'toupper' etc. DUPLICATE LINK WARNINGS
Also enables building a library with all PowerPlant and OOFILE in one go.

96/05/28
oof4.cpp
- remove the extern "C" surrounding <ctype.h>

oofctrex.hpp
- remove the extern "C" surrounding <ctcmpl.h>



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
MINOR BUGFIXES & CLEANUPS
96/06/03
CLASS	dbChar
Method	length
		- remove the separate logic for isStandalone() as that's repeated inside 
		   operator const char* and so is performed twice
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIXES IN SELECTION HANDLING, PROMPTED BY GUI BEHAVIOUR
96/06/07
CLASS	OOF_ctreeSelection
Method	DropSelection
		- reset mNextFakeNewRecOffset
		
		
CLASS	OOF_ctreeTableBackend
Method	unloadRecord
		- if isNew, delete the current item in the selection. This stops the selection 
		   continually growing with non-existent record items.
		   
Method	EnsureOurContextMatchesISAM		   
		- check mCurrLoadedRecOffset !=0 before comparing to current ISAM position.
		(fixes bug with ReRead error being passed in 0)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
MINOR CLEANUPS
96/06/08

CLASS	dbTable
- realised have mFieldCount and don't need to call the count operator on the dictionary but use mFieldCount instead
Methods	
- generateTestData
- extract
- insert
- postCloneCleanup
- relateAllDeletables

- use field() accessor instead of direct downcast of mFields[i]
Methods	
- generateTestData
- extract
- insert
- postCloneCleanup
- loadRelatedContextJoiningFromTo
- relateAllDeletables


CLASS	dbSelection
- make all virtual methods non-virtual. They are not intended to be overriden so don't need to be virtual, and g++ complained that we had a non-virtual dtor.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADD ABILITY TO ASSIGN AN OBJECT FROM ONE TABLE TO ANOTHER & CLONE RECORDS
96/06/08
CLASS	dbTable
Method	operator=
		- implement virtual method, with loop to copy field values
		
Method	cloneRecord
		- added to copy current record using operator= as above
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADD EXTRA DETECTION OF INCORRECTLY SPECIFIED RELATIONSHIPS
96/06/09

CLASS	dbRelRefBase
Method	SetCommonRelationshipFields
		- add test for join field only specified on one side of relationship

		
CLASS	dbRelationship
Method	linkMNvia		
		- add test for join field only specified on for one of the links, to the 
		   intermediate link file or far side


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
MINOR BUG FIXES
96/06/09

CLASS	dbTable
Method	insert
		- with OOF_Debug turned on, couldn't handle importing file with relationship 
		   fields at end - wrongly reported short import
		   
make methods virtual
- newRecord
- cloneRecord
- saveRecord
- deleteRecord
- insert
- extract		
	
		   
CLASS	OOF_ctreeTableBackend
Method	BuildDODA		   
		- fixed bug in bugfix to add dummy in front of BLOB - wasn't calculating len 
		   of dummy, had assumed4 which is WRONG!
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
M:N RELATIONSHIP BUG FIXES
96/06/12

CLASS	OOF_RelMN
Method	BuildRelatedTable
		- check to see if the caller of the relationship is the left or right side of
		   the MN link and instantiate l->r or r->l as appropriate. (Previously 
		   assumed that you went l->r).
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
MINOR ENHANCEMENTS TO IMPORTING (handle MS Access exports) & ALLOW NULL DATES
96/06/14,16
CLASS	dbTable
- constants kFieldSep and kRecSep moved into class (from guts of insert())

Method	import
		- added to wrap opening an ANSI file and calling insert()
		

CLASS	dbDate
Method	istream2ymd(...char;char)
		- handle short dates, setting ymd=0
		    - return false if immediately encounter end of record separator
		    - return true if end of field

Method	istream2ymd(both versions)
		- use skipRestOfField to skip a possible trailing time
		- accept null dates ymd=0 (don't add 100 to century)

Method	CheckDate
		- accept null dates ymd=0
		
Method	extract
		- don't extract if date is 0 
		
Method	ymd2Long
		- accept null dates ymd=0 (don't add 100 to century)
		
		
FUNC		skipTillDigit
		- enhance to take field & rec seps, default to those in dbDate
		

FUNC		skipRestOfField
		- adapt from skipTillDigit
			

FUNC		skipTillNumber
		- adapt from skipTillDigit, allows leading signs & optionally decimal
	
		
CLASS	dbLong
Method	insert
		- use skiptillNumber to handle empty fields (set to 0)
		
		
CLASS	dbShort
Method	insert
		- use skiptillNumber to handle empty fields (set to 0)
		
		
CLASS	dbReal
Method	insert
		- use skiptillNumber to handle empty fields (set to 0)
		
		
CLASS	dbUlong
Method	insert
		- use skiptillDigit to handle empty fields (set to 0)
		
		
CLASS	dbUshort
Method	insert
		- use skiptillDigit to handle empty fields (set to 0)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG  1996/06/??-PS 
CRASH IF JUST DECLARE DATABASE WITHOUT OPEN OR NEWCONNECTION
96/06/18
CLASS	OOF_ctreeTableBackend
Method	ctor
		- zero the (remaining) pointers mBufMapRefCount & mBlobFieldNums
		
SAMPLE	ooftst22.cpp
		- added to just declare and delete a database with a single table
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG  1996/06/??-PS 
PROBLEMS COMPILING IF NO BLANK LINES AT END OF .HPP FILES
96/06/18

Generally - ensure 2 blank lines at end of .hpp files.

Particular note - the following had the #endif on the last line, without a CR following (ie: insertion point at EOF was immediately after the #endif)
- oof2
- oofctree
- oofctrex
- oofrw
- oofhtml

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
GENERAL CLEANUP (aid compatability with dev environments)
96/06/18

Move all .inl file contents into end of .hpp files.

Simplify oof0.hpp to just #includes and defines, moving the class definitions (and inlines) to oof1.hpp.

				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
VC++ and SOLARIS COMPATABILITY
96/06/18
oof0.hpp
- add #ifndef SOLARIS around the include of io.h

oofquery.hpp
ooflist.hpp
- include oof0.hpp so bool and #defines have occurred
- add extra nested #ifdefs so we can cope with Visual C++

oofbool
- define the constants for SOLARIS

Generally
- replace #ifdef _Windows with #ifdef _MSDOS if we are just dealing with streams
   but keep the _Windows test for MessageBox and other Win API's or headers
 		
				
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ALLOW DELAYED BUILDING OR ADDING INDICES
96/06/26, 30
CLASS	OOF_ctreeTableBackend
- bool mIndicesSuppressed added

Method	ctor
		- init mIndicesSuppressed(false)
		
M<ethod	copy ctor
		- copy mIndicesSuppressed
		
Method	buildSchema
		- pulled big chunk of code out to BuildIFIL
		
Method	BuildBackendtables
		- don't add dictionary entries for index if mIndicesSuppressed
		
Method	RebuildIndexMap
		- added to add index file numbers for fields that are now indexed but haven't 
		   had an index file assigned

Method	addIndices
		- added to RebuildIndexMap then use BuildIFIL to get an IFIL for a PermIIndex

Method	suppressIndices
		- added to set mIndicesSuppressed

Method	CompleteIIDX		
		- use new mAlternateIndexName field of field buf map
		
include tests for mIndicesSuppressed not just if field indexed, in
- SearchCombineSubclauses
- loadRelatedContextJoiningFromTo
- SearchBinaryFieldToLiteral
- SearchEqualNonIndexedWildcard
- SearchTrinaryFieldToLiterals
- sortSelectionNow
		

CLASS	OOF_tableBackend
Method	addIndices
		- added pure virtual
		
Method	suppressIndices
		- added pure virtual
		
		
CLASS	dbTable
Method	addIndices
		- added simple forwarder
		
Method	suppressIndices
		- added simple forwarder
		
		
CLASS	dbField
Method	index		
		- removed assertion if called after table finished construction
		
		
CLASS	dbConnect_ctree
Method	useExclusiveAccess
		- added to force the file open settings even if using FPUTFGET library
		
		
CLASS	OOF_ctreeFieldExtra
- mAlternateIndexName added, default 0 pointer
		
		
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADDING RAM-BASED TABLES
96/06/30

CLASS	dbTable
- enum TableInRAMT added as flag

Method	dbTable(TableInRAMT...
		- added to flag that backend be constructed in RAM
		
Method	dbTable(const dbTable&, OOF_tableBackend*)
		- added to be able to clone tables with different backends


CLASS	oofTable
- added to call dbTable ctor with eTableInRAM parameter		


CLASS	dbConnect_ram
- added very lightweight connection to create an OOF_ramTableBackend


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
BIG REDESIGN OF BACKEND TO PUT ABSTRACTIONS IN PLACE FOR RAM AND dBase BACKENDS
96/07/03-04

CLASS	OOF_ramTableBackend
- added skeleton

CLASS	OOF_ctreeTableBackend
- descend from OOF_simpleRecordBackend
- moved lots of sorting, non-indexed searching methods into OOF_simpleRecordBackend


CLASS	OOF_ctreeSelection
- renamed as OOF_recordSelection


CLASS	OOF_ctreeSelectionRep
- renamed as OOF_recordSelectionRep


CLASS	OOF_ctreeBufferedContext
- renamed as OOF_recordBufferedContext


CLASS	OOF_ctreeCache
- renamed as OOF_recordCache


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADD SKELETON FOR dBase BACKEND
96/07/03
CLASS	dbConnect_dbase
- added to generate an OOF_dbaseBackend

CLASS	OOF_dbaseBackend
- added with skeletal methods, as descendent of OOF_simpleRecordBackend


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
CLEANUP & FINISHING RAM-BASED BACKEND
96/07/05

CLASS	dbClass
- renamed to OOFILE_PublicBase as dbClass is too likely to be used by users (eg: Kidmap bumped into it from AppMaker generated Class table)

 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
HELPING VC1.52 COMPATABILITY
96/07/08

Visual C++ 1.52 (wrongly) complains if we have an array 
const char**
and then delete[]

Thus, change to plain char** array and cast the use of the array in:
- OOF_simpleRecordBackend::searchSelContainsAllDelimited
- OOF_simpleRecordBackend::searchSelContainsAnyDelimited


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ENABLE OPENING MULTIPLE DATABASES 
96/07/08
CLASS	dbConnect_ctree
- sConnectionsOpened added
- mCtreeVars added
- mCtreeInstanceName added
- sActiveConnection added

Method	ctor
		- init mCtreeVars(0)
		- init mCtreeInstanceName as empty szString

Method	SetupConnection
		- comment out the call to InitCtreeGV (Windows only)
		- inc sConnectionsOpened
		- call RegisterCtree
		- init mCtreeVars by GetCtreePointer()
		- set mCtreeInstanceName to just the sConnectionsOpened (eg: "1")
		- set sActiveConnection
		
Method	openConnection
		- check if already open and warn

Method	newConnection
		- check if already open and warn

Method	close
		- call UnRegisterCtree after closing down ISAM

Method	activateConnection
		- added to call SwitchCtree (with optimisation check if already active)
		
- added inlines accessing the ctree globals through mCtreeVars
and replaced throughout dbConnect_ctree and OOF_ctreeBackend
		short uerr_cod() const;
		short sysiocod() const;
		short isam_err() const;


CLASS	OOF_ctreeFieldExtra
Method	ctor
		- removed as bugs in CW cause it to be unreliably called in arrays
		
		
CLASS	OOF_ctreeBackend
Method	BuildBackendTables
		- set mCtreeFieldMap.aidxname as no longer using OOF_ctreeFieldExtra ctor
		
- call activateConnection in
		- countAll
		- deleteRecord
		- gotoRecord
		- invert
		- loadBlob
		- next
		- saveRecord
		- search
		- searchEqual
		- searchEqual
		- searchSelection
		- sequenceNumber
		- start
		
		
		
FILE		oofctre4.cpp
- comment out the global pCTGVAR ctWNGV used in Windows automatic registration.


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
HELPING VC1.52 COMPATABILITY
96/07/09
CLASS	OOF_ctreeBackend
Method	BuildKey(all versions
		- change TEXT* to pTEXT for VC to stop complaining about far vs near ptr
		
		
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
CLEANUP REFACTORING & FINISHING RAM-BASED BACKEND
96/07/09-11

CLASS	OOF_simpleRecordBackend
Method	search
		- added version like ctree but without index optimisations, so it can be used 
		   by both RAM and dBase backends

Method	searchEqual(both versions)
		- added to simply call SearchEqualNonIndexed 

added cut-down versions
- SearchBinaryFieldToLiteral
- SearchCombineSubclauses
- SearchTrinaryFieldToLiterals	


CLASS	OOF_ctreeBackend
Method	loadRelatedContextJoiningFromTo
		- always call searchEqual
		- add case for dbText
		
Method	searchEqual(both versions)
		- include logic checking for non-indexed fields and calling 
		   SearchEqualNonIndexed (instead of applying this logic higher up)
		   
Method	SearchBinaryFieldToLiteral
		- use CanUseIndex() instead of direct data member check
		   
Method	SearchTrinaryFieldToLiterals
		- use CanUseIndex() instead of direct data member check

Method	MaybeLoadRecordFromCache		   
		- use new contains() to return index found
		
moved from OOF_ctreeBackend up to OOF_simpleRecordBackend
- more
- count
- prev
- loadRelatedContextJoiningFromTo
- searchSelection
- SearchSelectionTrinaryFieldToLiterals
- SearchSelectionBinaryFieldToLiteral
- blobPointerReferenceSize
- FieldAlignsTo
- PadFieldWidthForAlignment

made virtual
- SearchBinaryFieldToLiteral
- SearchCombineSubclauses
- SearchTrinaryFieldToLiterals


CLASS	OOF_recordCache
- mLastFound removed

Method	deleteItem
		- added to support deleting a RAM-based record

Method	contains(both versions)
		- made const
		- return index of item found, or kNotFound instead of bool
		
Method	orphanBuffer()
		- removed

Method	setItem
		- added to enable resetting a slot

Method	countOccupied
		- added to count non-zero cells

Method	firstFree
		- added to abstract getting an unused slot
								
				
CLASS	OOF_recordCacheCopier
		- renamed to OOF_recordCacheCopier as will be useful for dbase and other 
		   simple record backends (other than RAM)
		   
		   
CLASS	OOF_ExpandableLongArray
Method	countOccurrences
		- added to aid OOF_recordCache::countOccupied
		
		
CLASS	OOF_recordBufferedContext
Method	copyFrom		
		- added
		
Method	CopyBlobsFrom
		- added to copy blobs, updating ours if they exist
		
Method	copy ctor
		- add flag, default false, to CopyBlobs
		
		
MACRO	OOFILE_METHODS
- added method makeRAMtable but waiting for mailing list feedback to finalize


CLASS	dbTable
Method	extract
		- check count() before calling start()
		
		
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
DEBUGGING RAM-BASED BACKEND & MAKE OFFSETS 1-BASED
96/07/12

CLASS	OOF_recordCache
- mDeletedCells added

Method	deleteRecord
		- remove SmartHeap check (redundant as follows a delete)
		
Method	deleteAllCells
		- remove SmartHeap check (redundant as follows a delete)
		
Method	ctor(all)
		- set mDeletedCells = 0
		
Method	countOccupied
		- subtract mDeletedCells
		
Method	reuseDeletedSlot
		- added to set item and dec mDeletedCells
		
Method	deleteItem
		- inc mDeletedCells

Method	firstFree		
		- optimise using mDeletedCells
		
Method	anyDeleted
		- added as simple test of mDeletedCells
		
		
CLASS	OOF_ramBackend
- mCacheCursor added
- mCacheRefCount added

Method	ctor
		- init mCacheCursor=0
		- create mCacheRefCount and init to 1
		
Method	dtor
		- depending on mCacheRefCount, delete cache's contents

Method	copy ctor
		- assign our pointer to cache & inc mCacheRefCount		

Method	LoadRecordAtOffset
		- subtract 1 from offset, to get index in cache
		- add assertion on pointer returned from cache

Method	saveRecord
		- add 1 to index received, to get new offset

Method	gotoRecord		
		- implemented as copy of ctree version, safe to skip over deleted slots in 
		   cache for all records
		   
		
CLASS	OOF_simpleRecordBackend
Method	GotoRecordForAllUnindexed		
		- added to iterate forward
		
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
DEBUGGING REBULD
96/07/13-14
CLASS	dbConnect
Method	deleteAll
		- added
		

CLASS	dbConnect_ctree
Method	SetupConnection
		- added 5 to the number of files to enable rebuilds
		

CLASS	dbTable
Method	rebuild
		- added simple forwarder
		
		
CLASS	OOF_tableBackend
Method	rebuild
		- added pure virtual
		

CLASS	OOF_ctreeBackend
- mFilename added

Method	rebuild
		- added to call c-tree facility
		
Method	suppressIndices
		- set the IFIL index pointer to 0 & write the IFIL
		
Method	open
		- added to open using the IFIL info currently built
		
Method	openTableInConnection
		- move most of the logic to open()
		- use mFileName not local filename, so IFIL points to a persistent string, not 
		   local stack temp
		
Method	newTableInConnection
		- use mFileName not local filename
		
Method	close
		- added to close just this table (used in suppressIndices)
				
Method	copy ctor
		- copy mFilename
		

CLASS	OOF_ramBackend
Method	rebuild
		- added stub
		

CLASS	OOF_dbaseBackend
Method	rebuild
		- added stub



 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIXING RAM BACKEND SO DOESNT NEED DEFAULT CTOR
96/07/25
FILE oofile.hpp
MACRO	OOFILE_METHODS
Method	makeTableInRAM 
		- renamed to cloneEmptyInRAM
		 - use copy ctor
		 
Method	cloneInRAM
		- added using cloneEmptyinRAM then copyAllFrom
		
Method	operator=
		- added using copyRecFrom 


CLASS	dbTable
- sCloningInDifferentConnection added
Method	copy ctor
		- check sCloningInDifferentConnection and use connection to create backend
		- reset sCloning (noticed lnogstanding bug)
		
Method	operator=
		- change to non-virtual (silly boy!)
		- change param to const ref
		
Method	copyRecFrom
		- added to implement guts of operator=
		
Method	copyAllFrom
		- added to copy in field-wise iteration
		
Method	isSameTypeAs
		- added to compare tables based on field definitions

		
Method	isSameTypeAs
- added to compare fields for field classes		 
		- dbField
		- dbChar
		- dbCompoundField
		- dbFixedBinary
		- dbRelRefBase
				

CLASS	OOF_ramBackend
Method	saveRecord
		- fix bug where mCurrLoadedRecOffset was not always treated as 1-based
				


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADDING RELATED COUNT METHODS
96/07/26
MACRO	REL_REF_BODY
		- added with extra countAllRelatedIn method
		

MACRO	DECLARE_REF
		- use REL_REF_BODY
		

MACRO	DECLARE_SET
		- use REL_REF_BODY
		
CLASS	dbSelection
- all methods taking a dbTable& now take a const dbTable&

Method	ctor(OOF_Selectoin*)
		- change param to const OOF_Selectoin*
		
Method	count
		- added to forward to internal selection
		
		
CLASS	OOF_Selection
Method	count
		- added pure virtual
		
		
CLASS	OOF_recordSelection
Method	count
		- changed to virtual


CLASS	dbTable
Method	currentSelection
		- made const	
		
			
CLASS	OOF_tableBackend
Method	currentSelection
		- made const	
		
			
CLASS	OOF_simpleRecordBackend
Method	currentSelection
		- made const	
		
					

 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADDING allSelected() AND CLEANUP SEQUENCE NUMBER TYPE
96/07/26
CLASS	dbTable
Method	allSelected
		- added simple forward to backend
		
		
CLASS	OOF_tableBackend
Method	allSelected
		- added pure virtual

		
CLASS	OOF_simpleRecordBackend
Method	allSelected
		- added to test state of mSelection
		
GENERAL BACKEND CHANGE
Change type of method sequenceNumber() to return unsigned long, not plain long
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADDING RELATED SEARCHES
96/07/29
CLASS	OOF_simpleRecordBackend
Method	search
		- check for a related table on field and perform search then relationship 
		   traversal if found

Method	searchSelection
		- check for a related table on field and perform search then relationship 
		   traversal if found


CLASS	OOF_ctreeBackend
Method	search
		- check for a related table on field and perform search then relationship 
		   traversal if found


CLASS	dbQueryClause
Method	relatedTable
		- added default returning 0
		
		
CLASS	dbQuery
Method	relatedTable
		- added forwarding to mQuery
		
		
CLASS	dbQueryBinary
Method	relatedTable
		- added forwarding to mLhs
		
		
CLASS	dbQueryTrinary
Method	relatedTable
		- added forwarding to mLhs
		
		
CLASS	dbQueryField
Method	relatedTable
		- added to evaluate field's table
		
		
CLASS	dbTable
Method	lhsTableInRelationshipSpec
		- added to check if we are clone on rhs of relationship, and return the lhs
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADDING TABLE VALIDATION
96/07/31

CLASS	dbTable
- mTableValid added bool

Method	setTableValid
		- added accessor for mTableValid

Method	isTableValid
		- added accessor for mTableValid

Method	ctor(all)
		- init mTableValid(false)
		
Method	openTableInConnection
Method	createTableInConnection
		- setTableValid(true)
		- made non-inline
		
Method	validateContext
		- renamed to ensureRecordLoaded to avoid confusion

Method	ValidatePossiblyRelatedContext
		- check mTableValid - allow related table to be valid but unloaded
		
		
CLASS	dbRelRefBase
Method	receiveMsg
		- instead of selectNone, setTableValid(false) on related table
		
Method	relateSelection
		- call setTableValid(true) before using table to avoid table dumping its 
		   current selection, if we are navigating rhs to lhs

Method	BuildRelatedTable
		- setTableValid(false) after building related table
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
CHANGE dbView TO ELIMINATE ABSTRACT SOURCE
96/08/01

CLASS	dbView
- add mTable
- remove mSource
- replace all refs to source() with mTable

Method	source
		- return mTable, not mSource (kept for compatability)
		
Method	table
		- added to return mTable

General search & replace in users of dbView
- source()->table() replaced with table()


CLASS	dbSource
- removed


CLASS	dbSourceTable
- removed


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
NEW GUI MODEL 
96/08/02

CLASS	dbTable
- mGUI added 

Method	getGUI
		- added to use dbGUIFactory to make a GUI, or return mGUI
		
		
CLASS	dbGUIFactory
- added abstract base class (must exist in core OOFILE to enable compilation without any GUI stuff)


Change receiveMsg to returning a bool, and return true in classes:
- dbCloneCleanup
- dbFieldCopier
- dbRelRefBase
- dbSingleListener
- dbSorter
- OOF_recordCacheCopier



CLASS	dbBroadcaster
Method	askAllStoppingAtFirst
		- added to return true as soon as a receiver returns a false or true 
		   (depending on param) - will not necessarily broadcast to all
		   
Method	askAllReturningAny
		- added to return true if any receiver returns a false or true 
		   (depending on param) - will broadcast to all
		   
		   
const	OOFmsgT OOFmsg_AttemptLeaveRecord 
		- added
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
BUG FIX - RAM-based tables report themselves invalid
96/08/03

CLASS	dbTable
Method	ValidatePossiblyRelatedContext
		- in message if table invalid, warn that maybe they haven't done newConnection
		
		
CLASS	dbConnect
Method	MakeAllTablesValid
		- added to loop all tables, setting them valid (if not like c-tree backend 
		   which does this in openTableInConnection)
		   
		   
CLASS	dbConnect_ram
Method	openConnection
		newConnection
		- call MakeAllTablesValid
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
BUG FIX - post-clone cleanups not being called before other operations, if use user copy ctor and immediately perform related file ops
96/08/03


CLASS	dbTable
Method	copy ctor(all)
		- new table is marked INVALID
		
Method	newRecord
		- mark table as valid (it may be a related clone)
		
Method	postCloneCleanup
		- mark table as valid
		
Method	ValidatePossiblyRelatedContext
		- pull the valid check out so can perform and avoid function call in callers
		- rename to MakeTableValid
		- if non-related table invalid, try broadcasting ChangeContext to give 
		   postCloneCleanups or other attachments a chance to validate
		   
- add test isTableValid before calling MakeTableValid in
		- count
		- countAll
		- gotoRecord
		- start
		
Method	ensureRecordIsLoaded
		- test and call MakeTableValid (this is the main bugfix)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
MAKE RELATIONSHIP TRAVERSAL RETURN SUCCESS
96/08/03


CLASS	OOF_RelMN	
Method	RelateMN
		- return status (and possibly not have to call relateSelection)		
		
CLASS	dbRelRefBase
Method	relateRecord
		- return bool
		
Method	relateFromRecord
		- return bool
		
		
Method	relateSelection
		- return bool (from result of combining selections)


CLASS	dbTable
Method	ensureRecordLoaded
		- report if relateFromRecord fails		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
COPE WITH REMOVING RECEIVERS WHILE IN BROADCAST LOOP		
96/08/03

CLASS	dbBroadcaster
- mBroadcasting added
- mLostReceiversWhileBroadcasting added

Method	ctor(all)
		- set new flags false
		
Method	broadcast
		- set mBroadcasting around the broadcast loop
		- check mLostReceiversWhileBroadcasting and compact mReceivers if necessary
		
Method	removeReceiver
		- if mBroadcasting, set the receiver pointer=0 and set flag 
		   mLostReceiversWhileBroadcasting
		   
		   
CLASS	OOF_ExpandableLongArray
Method	deleteMatching
		- renamed to deleteFirstMatching
		
Method	deleteAllMatching
		- added
		
		
conxt	OOF_msgT		OOFmsg_FinishCloning
		- added


conxt	OOF_msgT		OOFmsg_RevertRecord
		- added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADD REVERTING RECORD
96/08/05
CLASS	dbTable
Method	revertRecord
		- added to broadcast OOF_ChangeContext, then call backend
		
		
CLASS	OOF_tableBackend
Method	revertRecord
		- added pure virtual
		
		
CLASS	OOF_simpleRecordBackend
Method	revertRecord
		- added using exisnig load & reset calls
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FURTHER GUI SUPPORT
96/08/05
CLASS	dbTable
Method	ctor & copy ctor's
		- init mGUI(0)
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
IMPLEMENTING CLONING VIEWS - CLONE VIEW SOURCE AND FIELDS
96/08/06


CLASS	dbView
- mCloneSource added

Method	ctor(all)
		- add cloneSource param, default true
		- set mCloneSource
		- if cloneSource, clone the input table
		
Method	copy ctor
		- set mCloneSource false
		(not sure about this - may need to clone rhs)
		
Method	dtor
		- if mCloneSource, delete mTable
		
Method	append(all)
		- if mCloneSource, use new field method fieldFromBaseTable
		   
		   
CLASS	dbField
Method	fieldFromBaseTable 
		- added to get the equivalent field in the cloned table, or related table to 
		  specified table


		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
IMPLEMENTING CLONING VIEWS - SHARED SELECTIONS
96/08/06-08


CLASS	OOF_recordSelection
- mCurrSingleRecOffset moved to new OOF_recordSelectionRep
- mState moved to new OOF_recordSelectionRep

Method	copyFrom
		- added to copy taking a second selSharingT param

Method	sorter
		- added to get mSorter from rep
		
Method	setSortOrder
		- added to set rep's mSorter
		

CLASS	OOF_recordSelectionRep
- new class added to provide sharable state
- mSorter added


CLASS	OOF_recordSelectionRep
		- renamed to OOF_recordSelRecsRep


CLASS	OOF_simpleRecordBackend
- mSorter moved to OOF_recordSelectionRep

Method	sorter
		- get mSorter from mSelection
		
Method	setSortOrder
		- pass sorter onto mSelection
		

CLASS	dbTable
- sCloningWithoutSelection renamed to sCloningSelSharing
- enum type selSharingT added for tri-state sharing, instead of bool

Method	clone
		- take selSharing as selSharingT instead of bool selectionNotCopied

Method	cloneSharingSelection
		- added


MACRO	COMMON_METHODS		
Method	cloneSharingSelection
		- added


MACRO	OOFILE_METHODS
Method	clone
		- take selSharing as selSharingT instead of bool selectionNotCopied


MACRO	ABSTRACT_BASE_METHODS
Method	clone
		- take selSharing as selSharingT instead of bool selectionNotCopied



CLASS	all backends
Method	copy ctor
Method	clone
		- take selSharing as selSharingT instead of bool selectionNotCopied
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
IMPLEMENTING CLONING VIEWS - AVOID CLONING RELATED TABLES
96/08/09
CLASS	dbTable
Method	isRelatedClone
		- added
		
		
CLASS	dbView
Method	ctor(dbRelRefBase...
		- don't clone table
		
Method	ctor(dbTable...
		- if table.isRelatedClone, don't clone
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
SUPPORT FOR NEW GUI MODEL
96/08/09-11
CLASS	dbTable
Method	start
Method	gotoRecord
		- disable optimisations that stop us going to the record if already there 
		   (fails to pick up changes)
		   

CLASS	OOF_ctreeBackend
Method	GotoRecordForAllIndexed
		- if already at record, reload it

Method	GotoRecordForAllUnindexed		
		- if already at record, reload it
				

CLASS	OOF_simpleRecordBackend
Method	GotoRecordForAllUnindexed		
		- if already at record, reload it
		
Method	sortSelectionNow(fieldNumT sortFieldNo)
		- for all recs indexed case, clear mCurrRecOffset before returning, so 
		  attempts to process record will force reload from disk
		  

CLASS	OOF_recordSelectionRep
Method	copy ctor
		- copy mCurrSingleRecOffset
		

const		OOFmsg_OOFGUIMessageBase
		OOFmsg_OOFGraphMessageBase
		OOFmsg_OOFRepMessageBase
		OOFmsgT OOFmsg_UserMessageBase
		- defined so don't need to edit oofmsg base source to add messages which are 
		   outside the core.


CLASS	dbBroadcaster
Method	askAllStoppingAtFirst
		- return the receiver found,  not just a bool indicating success

- use value() instead of item() for const access to read from receivers
		- askAllStoppingAtFirst
		- askAllReturningAny
		- broadcast
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
SUPPORT FOR NEW GUI MODEL - RELATED TABLES IN GUI AND DRILL-DOWNS
96/08/11
CLASS	dbTable
Method	baseTableOfRelationChain
		- added to recurse back to the lhs.
		
Method	getGUI
		- use baseTableOfRelationChain to get the GUI for the leftmost table.		

Method	oidOfRecord
		- added simple forwarder
		
Method	makeEmptySelection
		- added simple forwarder

Generally
- all operators that invoke combinatorials now do so, instead of calling backend
- all combinatorials (invert, union_with, intersection_with, difference_with)
   - make non-inline
   - broadcast OOFmsg_ChangeSelection after
   

CLASS	OOF_tableBackend
Method	oidOfRecord
		- added pure virtual
		
Method	makeEmptySelection
		- added pure virtual
		

CLASS	OOF_simpleRecordBackend
Method	oidOfRecord
		- added to handle all selection states, using gotoRecord for allRecs
		
Method	makeEmptySelection
		- added to create a selection based on an OOF_recordSelection


CLASS	dbSelection
Method	union_with(oidT)
		- added simple forwarder
		
Method	intersection_with(oidT)
		- added simple forwarder
		

CLASS	OOF_Selection
Method	union_with(oidT)
		- added pure virtual
		
Method	intersection_with(oidT)
		- added pure virtual
		

CLASS	OOF_recordSelection
Method	union_with(oidT)
		- added (copy one subcase of general union_with)

Method	intersection_with(oidT)
		- added (copy one subcase of general intersection_with)
		
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG - GETTING UNION OF SELECTIONS
96/08/12
CLASS	OOF_recordSelection
Method	union_with
		- when rhs is someRecs, and lhs is oneRec, was bug in the Copied flag 
		   resulting in the lhs rec being duplicated in most cases
		   
		   
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG - REFERENTIAL INTEGRITY OF 1:1 RELATIONSHIPS
96/08/15

CLASS	dbRelRefBase
Method	updateRel
		- rename to updateRelSaving
		
Method	updateRelDeleting
		- added to update lhs table if deleting rhs of relationship (needs to cater 
		   for N:1 or 1:1 cases)

Method	OID(oidT)
		- allow resetting (previous assertion) but only to zero
				   
		  
CLASS	dbTable
Method	deleteRecord
		- if mRelated (on rhs of rel) call updateRelDeleting
				  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
SUPPORT FOR NEW GUI MODEL - BUG FIXES
96/08/16
CLASS	OOF_recordSelection
Method	operator=
		- fix bug in that rep was being deleted and recreated, but should be just 
		   copied (the delete/recreate behaviour has been pushed down a level). As a 
		   result, shared selections didn't survive a search.
		   
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
DISABLE OPENING MULTIPLE DATABASES IF WRONG c-tree SETTINGS
96/08/16
CLASS	dbConnect_ctree
- sConnectionsOpened renamed as sConnectionsOpen

Method	SetupConnection
		- wrap RegisterCtree in #ifdef ctNOGLOBALS
		- warn user if try to open multiple and no ctNOGLOBALS

Method	close
		- wrap UnRegisterCtree in #ifdef ctNOGLOBALS
		- decrement sConnectionsOpen (for test in SetupConnection)

Method	activateConnection
		- wrap SwitchCtree in #ifdef ctNOGLOBALS
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
BUG FIXES & CERTIFICATION OF BETA RELEASE
96/08/17
CLASS	dbTable
Method	ensureRecordLoaded
		- bracket an if() as we had a visually indented else that was on the wrong if
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
INTEGRATE NEW 	CheckDate
96/08/17
CLASS	dbDate
Method	CheckDate
		- add code which checks properly for leap years etc. as well as 3 digit years
		- correct Tarin's code to allow null date of 0/0/0
		
Method	isLeapYear
		- add static method to check a year
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIXING DELETE
96/08/17
CLASS	dbTable
Method	deleteSelection
		- only call start() once, not for each rec
		
Method	deleteAll
		- issue a selectAll after finished deleting, so adding recs transits to 
		   allRecs state, not oneRec, someRecs
		
		
CLASS	OOF_ctreeBackend
Method	deleteRecord
		- after deleting, ensure record loaded for some or allRecs state
		
		
CLASS	OOF_ramBackend
Method	deleteRecord
		- after deleting, ensure record loaded for some or allRecs state
				
				
CLASS	OOF_recordSelectionRep
Method	item				
Method	value
		- if state is onerec, still handle index of 0, returning mCurrSingleRecOffset
	
CLASS	OOF_recordSelection
Method	deleteCurrent	
		- if go past end of selection, reset iter to 0
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG IF CHANGE SORT ORDER TO REVERSE OF CURRENT FIELD - DOESN'T RESORT
96/08/17
CLASS	dbTable
Method	setReverseSortOrder
		- call setSortOrder(..., true)
		
Method	setSortOrder(dbField&)
		- add 2nd param bool shouldReverse=false
		- pass shouldReverse to backend calls


CLASS	dbFieldSorter
Method	ctor
		- add param bool shouldReverse=false

Method	clone
		- pass mReverseSort in ctor of new sorter
		
Method	changeSortFieldTo
		- take shouldReverse param
		- test shouldReverse==mReverseSort in deciding that they have trivially reset 
		   the sort order to the same kind (THIS IS THE FIX@!!!)


		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ENHANCE INSERT TO COPE WITH TRAILING SPACES & FIELD SEPARATORS AFTER LAST FIELD
96/08/20

CLASS	dbTable
Method	insert
		- if last field followed by a field sep, loop until a record sep encountered
		
		
CLASS	dbConnect
- sTruncateTrailingSpaces added
Method	willTruncateTrailingSpaces
		- added getter
		
Method	truncateTraiilingSpaces
		- added setter, default true
				
		
CLASS	dbChar & dbText
Method	insert
		- if dbConnect:willTruncateTrailingSpaces, loops backwards through buffer & 
		   resets length, to trim the spaces
		   
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/08/28-29
LINK GENERAL RELATIONSHIPS

CLASS	dbTable
- made dbSelection::difference_with a friend so it can access our backend`

Method	appendSelection
		- added
		
CLASS	OOF_Selection
Method	difference_with(const OOF_Selection*, OOF_tableBackend* caller)
		- added pure virtual

Method	isAllRecs
		- added pure virtual
				
		
CLASS	OOF_recordSelection
Method	difference_with(const OOF_Selection*, OOF_tableBackend* caller)
		- added virtual to enable external selections to use 

Method	isAllRecs
		- added to return state of internal selection
		
		
CLASS	dbSelection
Method	isAllRecs
		- added simple forwarder
		
Method	difference_with(dbSelection)
		- added forwarder with test that rhs is not in state of all recs 
		(we can't calculate this without a rhs calling table)				
				
Method	difference_with(dbTable)
		- added forwarder 
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/08/30
MINOR CLEANUPS FOR CW10 RELEASE

CLASS	dbTable
Method	gotoRecord
		- uncomment the check to see if at record, to avoid going twice
		
Method	cloneRecord
		- totally rewrote, so copies from a selection of one rec to a new record on 
		    this table (was arse-about)		
				

CLASS	dbView
Method	copy ctor
		- clone sharing selection if rhs has mCloneSource set (can't just copy pointer 
		   as that dbView will delete!)
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/02
ADD DATABASE STATS

CLASS	dbConnect
Method	stats
		- added to loop over all dbTables
		
		
CLASS	dbTable
Method	stats
		- added to just output countAll on os
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/06
FIX RELATED SEARCHES

CLASS	OOF_simpleRecordBackend
Method	searchSelection
		- copy the current selection and perform an intersection with the results of 
		   the related search
		- if nothing found by related search, selectNone
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/07
ALLOW USE OF CODEWARRIOR RELEASE 10 bool

FILE		oofbool
- added extra #ifdef to check option(bool) for Metrowerks

		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/07
MINOR CLEANUP
CLASS	dbField
Method	isSameTypeAs
		- renamed to fieldIsSameTypeAs to match convention for other info methods
		
Method	isStandalone
		- renamed to fieldIsStandalone to match convention for other info methods
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/08
FIX BUG WITH SEQUENTIAL OPEN/CLOSE - ERROR ON SHUTDOWN

CLASS	dbConnect_ctree
Method	close
		- set mOpen = false when closing (must have accidentally deleted this line)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/11
FIX BUG WITH MULTIPLE OPEN/CLOSE - not changing active ctree database

CLASS	dbConnect_ctree
Method	activateConnection
		- add assignment of sActiveConnection
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/13
ADD CTORS AND OPERATOR= FOR oof* CLASSES

CLASS	oofChar
- added ctor and operator= taking char*


CLASS	oofText
- added ctor and operator= taking char*


CLASS	oofDate
- added ctor and operator= taking char*


CLASS	oofLong
- added ctor and operator= taking long


CLASS	oofUlong
- added ctor and operator= taking unsigned long


CLASS	oofShort
- added ctor and operator= taking short


CLASS	oofUshort
- added ctor and operator= taking unsigned short


CLASS	oofReal
- added ctor and operator= taking double


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/13-14
FIX BUG - DELETING ALL RECORDS IN RAM BACKEND CRASHES WITH ASSERTION FAILURE

CLASS	OOF_ramBackend
Method	deleteRecord	
		- when state is allRec
		    - check if countAll() falls to zero and selectNone
		    - if was at first record, call start()

CLASS	OOF_recordCache
Method	deleteRecord		
		- failed to allow for nil entries in the cache - replaced assertion by if(ctx 
		   && original assertion

Method	deleteAll
		- allow for nil entries - replace assertion by if(ctx)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/14
MINOR TWEAKS TO IMPROVE USE OF SELECTIONS

CLASS	dbTable
Method	setSelection
		- call start after setting the selection
		
CLASS	stSaveSelection
		- added to save the current selection for a table and restore on exit from 
		   this context
		
OOF_recordSelection::operator()
		- change assertion to allow calling from allRecs situation (used by ram backend)

				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/14
BUGFIX - LTextTableView DISPLAYING EXTRA CHARS AFTER DATE AND INT FIELDS
				
CLASS	dbField
Method	getChars				
		- set the outLen from the string we've built (was previously leaving at input 
		   level, typically width of cell, which ended up displaying all of previous 
		   string, overwritten at the start with our content)
		   
		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/14
ALLOW FOR NEW METROWERKS bool TYPE
FILE		oofbool.hpp
#if  __MWERKS__ > 0x0900
check the new bool option. (Have to test version number because bool option not available earlier - causes compiler error under CW9).



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/17
BUGFIXES TO PREVENT INVALID DECLARATIONS

CLASS	dbField
Method	setName
		- removed old code that assumed that nameless fields would be standalone
		
Method	ctor (all)
		- check if dbTable::sCurrentlyConstructing is nil and put up message but don't 
		   abort (so people can trap and carry on to find who called the code)
		
		
CLASS	dbConnect
Method	MakeAllTablesValid				
		- set dbTable::sCurrentlyConstructing = 0
		

CLASS	dbTable
Method	postCloneCleanup		
		- set dbTable::sCurrentlyConstructing = 0
		
Method	ctor
		- if fails test of existing dbConnect, don't abort (was aborting in raise())


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/17-18
KEYWORD INDEXING

CLASS	oofWordParser
- copied from Tarin's original
- made all methods virtual - users may want to override
- made private data members protected
- moved isValidWord into public members
- added assertions in all iterator methods to check it has parsed a string
- mWordCount removed
- made all methods non-inline as will always be invoked via pointer so no chance of inlining
- descend from OOF_mixRefCount
- use OOF_stricmp for case-insensitive comparisons


Method	ctor
		- move main logic to start(char*)
		
Method	start(char*)
		- added so we can re-parse
		
Method	count
		- removed as it doesn't make a lot of sense and may confuse clients who think 
		   it's precalculated
		   
Method	word
		- removed increment of mWordCount (only works if assume a loop with no reset)
		
		
CLASS	dbConnect
- mDefaultPrototypeParser added

Method	ctor
		- set mDefaultPrototypeParser(0)
		
Method	dtor
		- delete mDefaultPrototypeParser
		
Method	getDefaultWordParser
		- added, falling through to connection if necessary
		
Method	setDefaultWordParser
		- added
		
Method	attachTable
		- set dbTable::mConnection
		
		
CLASS	dbTable
- mDefaultPrototypeParser added
- mConnection added so word parser and (later) other settings can default to getting from our connection

Method	ctor
		- set mDefaultPrototypeParser(0)
		
Method	copy ctor(s)
		- share rhs mDefaultPrototypeParser 
		
Method	dtor
		- DefaultPrototypeParser->decRefs
		
Method	getDefaultWordParser
		- added, falling through to connection if necessary
		
Method	setDefaultWordParser
		- added

Method	setSelection
		- broadcast a ChangeSelection (taken from op=)_
		
Method	operator=(dbSelection)
		- just call setSelection

Method	setSelection(const OOF_Selection* )
		- added simple forwarder
		
		

CLASS	OOF_mixRefCount
Method	ctor
		- now take param, defaulting to 1 (was hardcoded)
		
Method	dtor
		- assert(mReferences==0)
		
Method	incRefs
		- added
		
Method	decRefs
		- added, with capability to delete this
		
		
CLASS	OOF_mixKeywordableField
- added 


CLASS	dbField
Method	words
		- added to return nil pointer

Method	fieldIsKeywordIndexed
		- added default to return false
				
		
CLASS	dbChar
- also inherit from OOF_mixKeywordableField

Method	ctors
		- include spec for OOF_mixKeywordableField

Method	words
		- added to return OOF_mixKeywordableField::wordParser()

Method	fieldIsKeywordIndexed
		- added to return true if indexWords has been called
		

CLASS	dbText
- also inherit from OOF_mixKeywordableField

Method	ctors
		- include spec for OOF_mixKeywordableField

Method	words
		- added to return OOF_mixKeywordableField::wordParser()

Method	fieldIsKeywordIndexed
		- added to return true if indexWords has been called


enum		BinaryQueryOps
- added hasWord


CLASS	OOF_tableBackend
Method	setSelection(const OOF_Selection* )
		- added pure virtual
		
		
CLASS	OOF_simpleRecordBackend
Method	copy ctor
		- copy mOverheadLeadingBytes
		
Method	numFiles
		- return mNumFiles, not 1
				
Method	numIndexes
		- return mNumIndexes, not 0

Method	SearchBinaryFieldToLiteral		
		- handle hasWord and call SearchWordNonIndexed
		
Method	SearchSelectionBinaryFieldToLiteral		
		- handle hasWord and call SearchWordNonIndexed
		- made virtual
		
Method	SearchWordNonIndexed
		- added to use word filter on field, to find word
		
Method	setSelection(const OOF_Selection* )
		- added with guts from old
		
Method	setSelection(const dbSelection&)
		- use new setSelection		
				

CLASS	OOF_ctreeBackend
- remove mNumFile, mNumIndexes & mOverheadLeadingBytes as they are parent members and shouldn't have been left at this level
- mKeywordIndex added

Method	ctor
		- init mKeywordIndex(0)
		
Method	copy ctor
		- copy mKeywordIndex and inc refs
		
Method	dtor
		- mKeywordIndex->decRefs()

Method	 SearchBinaryFieldToLiteral
		- handle hasWord and call SearchWordNonIndexed for non-indexed cases
		- call OOF_ctreeKeywordIndex::searchField for indexed fields

Method	SearchSelectionBinaryFieldToLiteral		
		- added so we can use an indexed behaviour for hasWord and (later) add 
		   heuristics to use indices when selections large portion of file

Method	BuildBackendtables
		- check if fields keyword indexed
		
Method	saveContext
		- call OOF_ctreeKeywordIndex:updateCurrentRecordWords
		
Method	deleteRecord
		- call OOF_ctreeKeywordIndex:deleteCurrentRecordWords
						
		
CLASS	OOF_ctreeKeywordIndex
- added to track list of fields, ISAM data and index numbers assigned

		
CLASS	OOF_ctreeKeywordTable
- added a dbTable for use by keywords


CLASS	OOF_ExpandableLongArray
Method	contains
		- added copy of find that doesn't return offset
		
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/18
ADD TEMPORARY WAY TO SET C-TREE FILE EXTENSIONS
CLASS	dbTable
Method	setFileExtensions
		- added simple forwarder
		
CLASS	OOF_tableBackend
Method	setFileExtensions
		- added pure virtual
		
CLASS	OOF_simpleRecordBackend
Method	setFileExtensions
		- added empty default method
		
CLASS	OOF_ctreeBackend
- mDataExt, mIndexExt added

Method	setFileExtensions
		- set the new vars
		
Method	createTableInConnection
Method	open
		- use the new extension variables in ctree calls
				
		
CLASS	OOF_UniqueWordList
- added to own a list of strings
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/19
FIX BUGS IN BLOBS

CLASS	dbBLOB
Method	LoadField
		- remove the ensureRecordIsLoaded()
		
Method	adoptBody
Method	allocFoomFor
Method	bodyAddress
		- add call to dbTable::ensureReordIsLoaded


CLASS	dbText
Method	operator+=
		- add call to dbTable::ensureReordIsLoaded

Method	setChars		
		- add call to dbTable::ensureReordIsLoaded
		- mark the backend and self as dirty

Method	operator=(const char*)
		- use setChars
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/19
ADD SIMPLE GETTERS FOR FIELDS

CLASS	dbChar
Method	value
		- added to return const char*
		

CLASS	dbText
Method	value
		- added to return const char*
		

CLASS	dbLong
Method	value
		- added to return long
		

CLASS	dbUlong
Method	value
		- added to return unsigned long
		

CLASS	dbShort
Method	value
		- added to return short
		

CLASS	dbUshort
Method	value
		- added to return unsigned short
		

CLASS	dbReal
Method	value
		- added to return double
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/19
ADD CALCULATED FIELDS

CLASS	dbChar
CLASS	dbText
CLASS	dbLong
CLASS	dbUlong
CLASS	dbShort
CLASS	dbUshort
CLASS	dbReal

Method	operator=
		- clone the rhs mCalculator

Method	calculateWith
		- added to specify the mCalculator

Method	calculator
		- added to use the mCalculator
		
Method	operator const char* (or whatever)
		- check if mCalculator exists and use it instead of database retrieval.
		
						
CLASS dbField
- mCalculator added

Method	ctors
		- init mCalculator 0
		
Method	copy ctor
		- clone rhs mCalculator
		
Method	dtors
		- delete mCalculator
		
Method	fieldIsVirtual
		- return mCalculator!=0
				

CLASS	dbTable
Method	newRecord				
		- don't always mark valid, call MakeTableValid
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/20
FIX BUG IN RELATED TABLES (OCCASIONAL WEIRDNESS - ENDLESS RECURSION)

CLASS	dbTable
Method	MakeTableValid
		- set valid flag BEFORE relateRecord() call as M:N relationships iterated over 
		   the (still invalid) table, forcing another recursion
		   
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/21
CLEANUP WARNINGS IN BETA RELEASE (g++)

CLASS	OOF_ctreeBackend
Method	deleteRecord
		- add non-fatal OOF_Debug warning if call for empty selection
		
Method	open
Method	createTableInConnection
		- explicitly cast mDataExt and mIndexExt as const char*
		
Method	CanUseIndex
		- take BinaryQueryOps and determine if can use index for keyword searches
		
Method	SearchBinaryFieldToLiteral
		- split hasWord searches into indexed and non same as others.
		
Method	SetupConnection
		- modify sprintf format from u to ul
		

CLASS	OOF_ramBackend
Method	deleteRecord
		- add non-fatal OOF_Debug warning if call for empty selection
		

CLASS	OOF_recordSelection
Method	union_with								
		- comment out unused variables numLHS & numRHS
		
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/21
CLEANUP WARNINGS IN BETA RELEASE (Visual C++ 1.52 & 4.1)

CLASS	OOF_ctreeBackend
Method	open
Method	createTableInConnection
		- explicitly cast mDataExt and mIndexExt as char*
		

CLASS	OOF_DictRep
Method	operator[]
		- move asterisk, changing const char */*name*/ to const char*  /*name*/
		
(ignore all type warnings for now - it works regardless of long/int conversion warnings for 16bit compiler)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/23
CLEANING UP CALCULATED FIELDS - CALCULATE dbDate AND PREVENT WRITES

CLASS	dbDateCalculator
- added, calculating an unsigned long


CLASS	dbReal, dbChar,  dbText, dbShort, dbUshort, dbLong, dbUlong
Method	operator=
		- don't copy the calculator - operator= is a VALUE copy, not an object copy
		

CLASS	dbDate		
Method	calculateWith
		- added to specify the mCalculator

Method	calculator
		- added to use the mCalculator
		
Method	operator const char* (or whatever)
		- check if mCalculator exists and use it instead of database retrieval.


CLASS	OOF_tableBackend
Method	getFieldWriteDest
		- take const dbField* instead of fieldNumT


CLASS	OOF_simpleRecordBackend
Method	getFieldWriteDest
		- take const dbField* instead of fieldNumT
		- check if field is virtual, and return nil pointer
		.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/26
REBUILDING INDICES SHOULD INCLUDE KEYWORDS
CLASS	OOF_ctreeBackend
Method	rebuild
		- if has keyword index, rebuild it
		- use RebuildIFileXtd instead of RebuildIFIL, so can pass in file extensions

Method	suppressIndices
		- if has keyword index, suppress it
		- use PutIFileXtd instead of PutIFIL, so can pass in file extensions


CLASS	OOF_ctreeKeywordIndex
Method	rebuild
		- call rebuild on keyword table

Method	suppressIndices
		- call suppressIndices on keyword table

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/27
STANDALONE FIELD DEBUGGING

CLASS	dbChar
Method	operator=(char)
Method	operator+=(char) 
Method	operator+=(const char*) 
		- added		

Method	setChars
		- add raise if try to assign string that's too long

Method	CompleteInit
		- put terminator at start of string (on cast mBackend)
		

CLASS	oofChar
Method	ctor(const char*, int)
		- add assertion that the string is <= initialIen

Method	operator=(char)
		- added		

CLASS	dbBLOB
Method	ctor(fieldIsStandalone)
		- add init of mStorage
		
				
CLASS	dbText
Method	operator+=(char) 
Method	operator=(char)
		- added		

Method	operator+=
		- fix bug, failing to allow for nul at end, for standalone fields
		
Method	setChars
		- don't assert(!standalone), just don't do anything if standalone
		
				
CLASS	oofText
Method	operator+=(char) 
Method	operator=(char)
		- added		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/27
CALCULATED FIELD DEBUGGING
General change
- all calc() methods take their respective field type, eg: const dbChar*

CLASS	dbDate
Method	calculator
		- return dbDateCalculator, not dbUlongCalculator
		
CLASS	dbTextCalculator
		- added with OOF_String for growable storage
		

CLASS	dbCharCalculator
Method	copy ctor
		- added to create new internal buffer
		
				
CLASS	dbText
Methods	calculateWith, calculator
		- use dbTextCalculator instead of dbCharCalculator
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/29
BLOB EXTENSIONS (mainly for dBase Memos)

CLASS	dbBLOB
- for standalones, use mBackend to contain the length used, as we don't have a table to store that length.

Method	SetLength
		- for standalones set mBackend to the length
		
Method	length
		- added to handle standalones or call fieldDataLen
		
Method	adoptBody(void*, unsigned long, unsigned long)
		- added to let us adopt a body that's only partially used (eg: dBase memo)
		
Method	append
		- added to append a known length buffer

Method	setBytes
		- added using dbBLOBstorage::setBytes
		
Method	operator=
		- added using setBytes
		
Method	operator+=
		- added using append
		
Method	extract
		- added to do hexdump, 16 bytes per line with spacing
		
Method	bodyAddress
		- check to make sure blob is loaded - this is the equivalent of the operator 
		   const char* etc. on dbChar
		   
		
		
CLASS	dbText
Method	operator+=
		- rewrite using dbBLOB::append
		
Method	length
		- added using dbBLOB::length (which includes null) so returns string length
		
Method	setChars
		- always markDirty(), not just if !standalone

Method	operator const char*
		- simplified to use new virtual length()
		- don't call LoadField
				
		
CLASS	dbBLOBstorage
Method	setChars				
		- if empty string, set length to 1 (not 0)

Method	setBytes
		- added like setChars but without including null terminator
		
		
CLASS	OOF_simpleRecordBackend
Method	fieldDataLen	
		- allow for blobs
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/30
BUGFIXES FOR VC4.2 COMPATABILITY

FILE		oofbool.hpp
- add section testing _MSC_VER and including yvals.h if 4.2


CLASS	dbUShort
Method	operator==(unsigned short)
		- added
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/09/30
BUGFIXES TO BLOBS - adoptBody not setting used length

CLASS	dbBLOB
Method	adoptBody(void*, long)
		- call other
		- made non-const
		
Method	adoptBody(void*, long, long)
		- do the adoption
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/01
SUPPORT FOR BUILDING QUERIES

CLASS	dbQuery
Method	operator&=
Method	operator|=
		- cope with a null argument - do nothing.
		
		
CLASS	stSaveSorter
- added simple stack class to save the sorter for a table, and reset it on destruction.


CLASS	OOF_String
- mLen changed from unsigned int to unsigned long

Method	ctor(const char*, unsigned long)
		- added to take arrays and make easy building from partial buffer

Method	left
Method	right
		- added to return ends of string
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/01
FIX STUPID BUG - HAD MADE BLOB READ OPS NON-CONST

CLASS	dbBLOB
Method	adoptBody (all)
		- made const
		
Method	SetLength
		- made const
		- change from storing length in mBackend to using it as a long*
		
Method	deleteStandaloneStorage
		- added to cleanup mBackend
		
Method	ctordbField::FieldIsStandaloneT
Method	copy ctor
		- create mBackend as long*
		
Method	length
		- change from storing length in mBackend to using it as a long*
								

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/04
FIX BUG WITH INDEXED NO-DUPS SEARCHES

Symptoms - didn't find record with GetRecord, although comparative searches work on index. Noticed at low level that after transformation, a key like 13 88 became 93 88 (Mac) and 13 88 would work. Re-read correspondence with Faircom - don't need TransformKey with ISAM-level operations as UNIFRMAT will do its own.

CLASS	OOF_ctreeBackend
Method	searchEqual(const dbField* schfield, const VOID* schAddress)
		- just memcpy the key, don't run it through BuildKey
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/04-06
VC 1.52 COMPATABILITY - USE .PEEK INSTEAD OF PUTBACK ON ISTREAMS

Simply replaced logic that read chars, then putback() with use of peek() in:
- dbChar::insert
- dbDate::insert
- dbDate::istream2month
- dbDate::istream2ymd
- dbField::insert
-dbUshort::insert
- dbLong::insert
- dbReal::insert
- dbShort::insert
- dbUlong::insert
- dbText::insert
- skipTillDigit
- skipRestOfField
- skipTillNumber

FUNC		skipStreamPattern
		- rewrote totally (relied on putback being able to be called multiple times)

CLASS	dbDate
Method	istream2ymd(both versions)
Method	istream2month
		- Add turn off whitespace skipping in:

Method	daynum2ymd		
		- rewrote using local unsinged longs as 16-bit compiler gave incorrect results 
		   due to short intermediate values in some expressions
		   
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/05
DEBUGGING RELEASE

CLASS	dbConnect
Method	ctor
		- added portability check:
		   assert(sizeof(unsigned long) == sizeof(void*));
		   
		   
CLASS	dbText
Method	length
		- allow for case where blob never written, length of 0 from blob should not 
		   have 1 subtracted for null terminator
		   

CLASS	OOF_ctreeKeywordIndex
Method	updateWords		   
		- test length of field, to avoid parser loop for empty fields
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/06
ADDING bool FIELD TYPES
(stored as unsigned short, and needed for dBase backend)

CLASS	dbBool
		- added like dbUshort with operator= and == (char) and (char*)
		
		
CLASS	oofBool
		- added
		
		
CLASS	dbBoolCalculator
		- added
		
		
CLASS	dbDate
Method	chars2ymd
		- rename as str2ymd for consistency of naming
		
Method	chars2Long
		- rename as str2Long
		
Method	chars2month
		- rename as str2month
		

FUNC		skipRestOfField												
		- now returns a bool indicating if hit separators
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/06
VC 1.52 COMPATABILITY - PROVIDE ALTERNATIVE OPERATORS TO RESOLVE AMBIGUITY

CLASS	dbNumericField
Method	equal
		- added copy of operator==
		
Method	notEqual
		- added copy of operator!=
		
Method	lessThan
		- added copy of operator<
		
Method	lessThanOrEqual
		- added copy of operator<=
		
Method	greaterThan
		- added copy of operator>
		
Method	greaterThanOrEqual
		- added copy of operator>=

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/07
MINOR CLEANUPS PRIOR RELEASE, WITH TESTING AGAINST VC4.2 AND CW10 WITH bool DISABLED, AS WELL AS FULL SUITE AGAINST VC1.52 AND CW10

CLASS	dbBool
Method	MakeQueryLiteral(long)
		- added to restrict to just 0 and 1
		
Method	operator dbQueryBinary
		- added so a bool can be used by itself in a query, equivalent to fld==true
		
Method	operator=(int)
Method	operator int
		- only define if has standard bool
				
Method	operator=(char)
Method	operator==(char)
		- only define if doesn't have standard bool


CLASS	oofBool
Method	operator=(int)
		- only define if has standard bool
				
Method	operator=(char)
		- only define if doesn't have standard bool
				
		
CLASS	dbConnect_ctree
Method	close
		- call activateConnection - ensures we close the correct ISAM and not just the 
		   last used!!!
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
VERSION 1.3b2 released  8th October 1996
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/08
FIX ERR 42 IMPORTING WITH MULTIPLE DB'S

CLASS	dbConnect_ctree
Method	resetLocks
		- call activateConnection to make sure in correct ctree context
		- always unlock, don't check readLocked state
		- made non-const
		- wrap all body in if (mOpen)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/12
SUPPORT NEW REPORT-WRITER

CLASS	oofChar
Method	ctor(const char* initialString, long fieldWidth)
		- default fieldWidth to strlen(initialString) not 80 chars
		
		
CLASS	OOF_ExpandableLongArray
Method	more
		- made const
		

CLASS	OOF_String
Method	shorten
		- added to drop trailing chars
		
Method	operator[]
		- added to return the selected char or null
		
Method	lastChar
		- added to return the last char or null								
				
Method	operator+=
		- added to append string or char

Method	convertNumber
		- added 3 variants to convert integers or doubles, with optional printf masks
		
Method	ctor
		- added variant taking two OOF_String refs
		
Function	operator+(const OOF_String&, const char*)
		operator+(const OOF_String&, const OOF_String&)
		- added to help Brad build expressions
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/17
MERGE DATE FORMATTED OUTPUT FILTERS (and fix minor date bugs found in process)

CLASS	dbNumericField
- mFormatMask added
Method	formatMask
		- added accessors
		
Method	get_token
		- added

Method	parseMask
		- added
		- change interface from TOKEN r[MAXTOKENS] to TOKEN*
		

CLASS	dbDate
- added
	enum { NUMDATETOKENS = 38 };
	static TOKENTYPE tokenMap[NUMDATETOKENS];

Methods	void ddth,  ymd2Stream(const char* mask, ...
		- added
		
Method	month2chars
		- rename as month2str in line with new naming practice
		- fix bad constant names (missing 'e') eACT& eDEA 

Method	extract
		- if has a format mask, use the new variant of ymd2stream

Method	operator-(dbDate)
		- completely rewrite, to return long, not dbDate as it represents
		  the days between the two dates
		  
Method	operator+(dbDate)
		- deleted as this is an absurb operation		  	

Methods	operator-=, operator+=
		- use long params, not int, in case of 16-bit int problems
		
		
FILE		oof4.hpp
- added block of enums to top of file ('gross c stuff')


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/17
SIMPLIFY CHAR CALCULATORS
(realised don't need to mimic dbChar in having a fixed length buffer)

CLASS	dbCharCalculator
- remove mBuffer & mMaxLength

Method	copy ctor, ctor removed

Method	dtor
		- don't delete mBuffer
		
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/17
FINISH DATE FORMATTED OUTPUT - DAY NAMES

CLASS	dbDate
Method	ymd2stream(const char*, ...)
		- add all the eDDD, eDDDD, eDAY and eDAYNAME variant cases
		
Method	ymd2dayname
		- added
		
Method	ymd2dow
		- added to return integer
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/17
FIX BUG - 1:1 RELATIONSHIPS LEFT PREVIOUS SELECTION ON RHS IF NO RELATED RECORD

CLASS	dbRelRefBase
Method	relateFromRecord
		- if no OID for pointer relationships, selectNone (was just returning false)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/17
FIX BUG - REWRITING SHORTER VALUE INTO NoDups INDEXED dbChar CAUSED SEARCH TO FAIL (due to garbage after terminating null)

CLASS	dbChar
Method	setChars
		- write terminating nulls until hit another null 


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d2 release	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/21
FIX BUG - BUS ERROR IN PutDODA WITH TABLE ENDING IN TWO CALCULATED FIELDS (dbText then dbBool)

CLASS	OOF_ctreeBackend
Method	BuildBackendtables
		- move the alignment and blob logic that adds a leading DODA entry INSIDE the 
		   else condition of if field.isVirtual(). Was previously before that test, 
		   therefore always executed and sometimes creating phantom DODA entries 
		   before virtual fields. (May also have caused extra alignment entries if a 
		   compound index which needed alignment preceded a field which didn't).
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/21
FIX BUG IN IMPORTING DATA WITH CALCULATED FIELDS - FAILING TO IMPORT MOST RECORDS

CLASS	dbTable
Method	insert
		- don't skip field if relationshipField, use fieldIsVirtual so all compound 
		   index and calculated fields are skipped (note that bug only activated if 
		   virtual fields were intermingled with the rest)
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/23
FIX BUG ADDING KEYWORDED DATA - UNNECESSARY ATTEMPT TO DELETE EXISTING KEYWORDS 
CLASS	OOF_ctreeBackend
Method	SaveContext
		- pass new state to updateWordsx
		
		
CLASS	OOF_ctreeKeywordIndex
Method	updateWords		
		- added isNew param
		- don't try to delete old words if isNew param set
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d3 release	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/24
FIX BEHAVIOUR OF SELECTING A SPECIFIC OID IN RELATED TABLES

CLASS	OOF_simpleRecordBackend
Method	selectJustRecordPointer
		- don't call unloadRecord but call start() after changing the selection, so we 
		   get just the chosen record regardless of whether we are a related table or 
		   not. Previous behaviour marked the table as invalid and the logic for 
		   making a table valid resulted in related tables ending up with their full 
		   related selection again. It is a rare case, but assume that someone who 
		   wants to force a related table to a certain selection knows what they are
		   doing!
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/25
FIX SEARCHING RELATED RECORDS

CLASS	dbTable
Method	search
		searchSelection
		searchSelAny...
		searchSelAll....
		- check if table valid and make valid before searching. This fixes obscure bug 
		   when have a related table that's invalid - it gets validated part-way 
		   through the first loop to check the field in a non-indexed search.
		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/10/31
ASSORTED DEBUGGING
CLASS	dbConnect
Method	raise
		- change from abort() to exit(0) so don't get console window popping up.
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/02
FIX FAILURE FOR SORTING SPECIFICATION TO APPLY TO RELATED TABLES

CLASS	OOF_simpleRecordBackend
Method	copy ctor
		- always clone rhs.sorter()
		
		
CLASS	dbRelRefBase
Method	relateFromRecord
		- add a conditional mTable->broadcast(OOFmsg_ChangeSelection)
		   (so callers can suppress if they do the broadcast)
		
Method	relateRecord
		- add a conditional mTable->broadcast(OOFmsg_ChangeSelection)
		   (so callers can suppress if they do the broadcast)
		- pass false to relateFromRecord
		
Method	relateSelection
		- add a mTable->broadcast(OOFmsg_ChangeSelection)
		- pass false to relateRecord

Methods	CountAllRelatedIn, countAllRelated
		- pass false to relateRecord
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/02
FIX FAILURE TO FORCE LOADS - MOVE RESPONSIBILITY INTO BACKEND
(bug noticed as failure to have parent record loaded when search parent then interate related records)

CLASS	OOF_simpleRecordBackend
Method	setBlobLength, getFieldReadFrom, getFieldWriteDest
		- Added calls to ensureRecordLoaded


CLASS	OOF_simpleRecordBackend
Method	currentOID
		- return 0 if selection is empty othersise ensureRecordLoaded
		
Removed calls to ensureRecordLoaded
- dbBLOB::adoptBody
- dbBLOB::allocRoomFor
- dbField::currentbinaryContents
- dbBLOB::SetLength
- dbBool::operator=
- dbBool::operator bool
- dbChar::operator+=
- dbChar::operator const char*
- dbChar::operator[]
- dbChar::setChars
- dbDate::operator unsigned long
- dbEditHelper::LoadData
- dbDate::setDate
- dbField::binaryContents
- dbFixedBinary::setByte
- dbFixedBinary::setValue
- dbLong::operator=
- dbLong::operator long
- dbReal::operator=
- dbReal::operator double
- dbShort::operator=
- dbShort::operator short
- dbText::operator const char*
- dbUlong::operator=
- dbUlong::operator unsigned long
- dbUshort::operator=
- dbUshort::operator unsigned short
- dbWin3RGB::operator=


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/02
ADD INDIVIDUAL FIELD DIRTY STATUS IN BACKEND & IMPROVE KEYWORD UPDATES

CLASS	OOF_dirtyFieldMap 
		- added


CLASS	OOF_recordBufferedContext
- mDirtyMap added

Method	copy ctor
		- copy mDirtyMap
		

CLASS	OOF_simpleRecordBackend
Method	getFieldWriteDest
		- mark mDirtyMap (guarantee user DOES write to field)
		
Method	SaveContext
		- pass mDirtyMap to updateWords	
		- call mDirtyMap.reset() at end	


CLASS	OOF_dbaseBackend
CLASS	OOF_ramBackend
CLASS	OOF_ctreeBackend
Method	BuildBackendtables
		- init mDirtyMap

CLASS	OOF_ctreeBackend
Method	SaveBlob
		- mark mDirtyMap (if BLOB was dirty)
		
Method	search(const dbQueryClause*
		- check mIndicesSuppressed before looking for index to match pair of fields
		

CLASS	OOF_ctreeKeywordIndex
Method	updateWords
		- use map to decide if words should be updated for given field,
		  rather than updating all fields
		  
Method	deleteWords
		- added version to take field number param and search on combined field no & 		
		   OID 
		
		
CLASS	OOF_ctreeKeywordTable
- remove index on OID
- add compound index on OID & FieldNo

				  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d4 release	

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/04
FIX OCCASIONAL GARBAGE APPEARING IN REPORTS OF TEXT FIELDS
CLASS	dbText
Method	CopyAsChars
		- append null to block copied (was straight memcpy)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/04
FIX BUG ASSIGNING NULL STRING TO dbText

CLASS	dbBLOBstorage
Method	setChars
		- set a length of 0 instead of 1. It is legal for a dbText to have no body, 
		   but if it had a body of 1 it should have a null put in that body (wasn't). 
		   It is optimal to store no body rather than just a null string.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/05
MAKE dbView USE CONST FIELDS

CLASS	dbView
Method	append, operator<<
		- take const refs or pointers
		
Method	field
		- return const ref
		
		
CLASS	dbViewAsTableStorage
Method	GetCellData
		- use const refs to fields in view
		

CLASS	dbViewOutlineItem
Method	GetDrawContentsSelf		
		- use const refs to fields in view


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/05
FIX BUG CAUSING EXPANSION OF OUTLINE TABLE TO CRASH - FAILING TO RELATE MN LINK

CLASS	dbRelRefBase
Method	relateSelection
		- return !isEmpty. Was returning opposite.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/10
FIX BUG CALLING dbText::append()

CLASS	dbBLOB
Method	append(void*...)
		- made virtual
		
		
CLASS	dbText
Method	append
		- added override that adds space for null		



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/12
ADDING MULTIPLE KEYWORD SEARCHES
CLASS	dbQueryClause
enum		BinaryQueryOps
		- hasAnyWord, hasAllWords, hasWordStartsWith, hasAnyWordStartsWith, 
		   hasAllWordsStartsWith added
		   
enum		QueryClauseTypes
		- multiLiteralStr added		   

Method	isWordSearch		
		- added to test op against all new query ops


CLASS	dbQueryBinary
Method	literalMultiStrClause		
		- added to test if RHS is multiLiteralStr
		

CLASS	OOF_mixKeywordableField
Methods added
	dbQueryBinary	hasAnyWordsDelimited(const char*, char delimiter);
	dbQueryBinary	hasAllWordsDelimited(const char*, char delimiter);
	dbQueryBinary	hasAnyWordsOf(const char **, unsigned long count);
	dbQueryBinary	hasAllWordsOf(const char **, unsigned long count);
	dbQueryBinary	hasWordStartsWith(const char* str) const;
	dbQueryBinary	hasAnyWordsStartsWithDelimited(const char*, char delimiter);
	dbQueryBinary	hasAllWordsStartsWithDelimited(const char*, char delimiter);
	dbQueryBinary	hasAnyWordsStartsWithOf(const char **, unsigned long count);
	dbQueryBinary	hasAllWordsStartsWithOf(const char **, unsigned long count);
		
		
CLASS	dbQueryLiteralStrArray
- added complete with ability to iterate over contents		


CLASS	dbQueryLiteralStrDelimited
- added complete with ability to iterate over contents		



CLASS	OOF_simpleRecordBackend
Method	SearchBinaryFieldToLiteral
Method	SearchSelectionBinaryFieldToLiteral
		- add case for hasWordStartWith op

Method	SearchWordNonIndexed		
		- added startsWith param, using OOF_strnicmp to just compare start of words

Method	SearchBinaryFieldToLiteral		
Method	SearchSelectionBinaryFieldToLiteral		
		- issue error message if try multi string word search
		- rearrange code to to use common return, to help debugging


CLASS	OOF_ctreeBackend
Method	CanUseIndex
		- use isWordSearch instead of comparing op to hasWord

Method	SearchBinaryFieldToLiteral
Method	SearchSelectionBinaryFieldToLiteral
		- add cases for hasWordStartWith op
		- issue error message if try multi string word search for non-indexed cases
		- handle multi word searches for indexed cases
		- rearrange code to to use common return, to help debugging
				
		
CLASS	OOF_ctreeKeywordIndex
Method	searchFieldAllWords
		- added

Method	searchFieldAllWords
		- added
				
Method	searchField		
		- add startsWith param and use startsWith search
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d5 release (just to Liam - badly needed keyword extensions)
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/13
HANDLE MACINTOSH FILE SPECS & DATABASE IN OTHER FOLDERS CORRECTLY

CLASS	dbConnect
- mDatabaseDir added

Method	ctor
		- init mDatabaseDir(0)
		
Method	dtor
		- delete mDatabaseDir
				
Method	openConnection, newConnection
		- add #ifdef'd pure virtuals taking an FSSpec

Method	gotoDatabaseDir		
		- added
		
CLASS	dbConnect_ram
Method	openConnection, newConnection
		- add #ifdef'd simple converter taking an FSSpec and extracting name 
		
		
CLASS	dbConnect_dbase
Method	openConnection, newConnection
		- add #ifdef'd simple converter taking an FSSpec and extracting name 
		 (will roll in like c-tree when final dBase backend delivered)		
		
CLASS	dbConnect_ctree
Method	openConnection, newConnection
		- add #ifdef'd version taking an FSSpec and changing directory to match 
		
Method	openConnection(const char*)
		- remove couple of leaks - delete path and connectionName
		- move half the logic out to FinishOpenConnection
		- use oofDirectory to parse the path
		
Method	newConnection(const char*)
		- remove couple of leaks - delete path and connectionName
		- move half the logic out to FinishNewConnection

Method	FinishOpenConnection, FinishNewConnection
		- added to contain common code for opens and news


FUNC		OOF_CheckPath	
		- use HSetVol instead of creating a Working Directory
					
		
CLASS	oofDirectory
- added to provide platform-neutral temp recording of a directory


CLASS	stSaveDirectory
- added to use oofDirectory to save and return to a dir


CLASS	OOF_ctreeBackend
Method	rebuild
		- use an stSaveDirectory
		- call mConnection->gotoDatabaseDir

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/17
DEBUGGING oofDirectory

CLASS	oofDirectory
- add mWorkingDirID as realised need to use working Dir ID's (Mac) for c-tree

TO DO - roll in OOF_Checkpath and OOF_SetPath logic (temporarily reverted to old method for Liam's release)

Method	ctor(path)
		- 



CLASS	OOF_ctreeBackend
Method	suppressIndices
		- use an stSaveDirectory
		- call mConnection->gotoDatabaseDir




-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/17
DEBUGGING FAILURE TO APPEND TO CLONED dbBLOB

CLASS	dbBLOB
Method	LoadField
		- set mStorage->mLoaded flag (probably had other side effects as well - if we 
		   had just loaded field, was not being marked as loaded)



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/17
DEBUGGING FAILURE TO RELOAD SAME RECORD AFTER UNLOADING

CLASS	dbTable
Method	reloadRecord
		- added
				
method	ensureRecordLoaded
		- call reloadRecord instead of start
		
		
CLASS	OOF_tableBackend
Method	reloadRecord
		- added pure virtual
		
		
CLASS	OOF_simpleRecordBackend
Method	reloadRecord
		- added testing mCurrLoadedRecOffset to determine if can reload a recent 
		   record, or just start()
		
								
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/17
ALLOW REASSIGNMENT OF RELATIONSHIPS

CLASS	dbRelRefBase
Method	updateRelDeleting
		- renamed as breakRelLink
		
Method	changeRelationshipTo
		- added to allow reassignment of relationships
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/18
INTEGRATE NEW REPORT API'S
FILES	oofTxtSz.* renamed as oofsize.*


CLASS	OOF_mixColSizable
- added


CLASS	dbView
- mixin OOF_mixColSizable


Method	makeDefaultSizer
		- added to create a oofViewFieldDefaultsColSizer
		

CLASS	dbField
Method	fieldMinWrapWidth
		- use arbitrary threshold of 20 as default above which to force wrapping
		
CLASS	dbNumericField
Method	fieldMinWrapWidth() 
		- added to handle format masks		

	
CLASS	dbView
- mHeadings added

Method	getHeading
		- added to return either an mHeading or the field's name
		
Method	setHeading
		- added to set a heading, effectively overriding the field		
		
Method	dtor
		- delete any headings 
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/19
ADD PERSISTENT RAM CONNECTIONS
CLASS	dbConnect_persistRAM
- add simple subclass of dbConnect_ram


CLASS	dbConnect_ram
- private methods made protected


file		oofile.hpp
- move all macros out to oofmacros.hpp
- add definition of TEST_CONNECT to enable reuse of samples with different dbConnect subclasses





-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/20
MINOR BUG FIXES IN EXPANDABLE ARRAYS

CLASS	OOF_ExpandableLongArray
Method	operator[]
		- if new index exceeds old mNumFree, reset it so the count() method works
		
		
CLASS	OOF_DictRep
Method	operator[]
		- if new index exceeds old mNumFree, reset it so the count() method works
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/20
ADD REPORT ADORNERS

CLASS	oofAdornerList
- added


CLASS	oofAdorner
- added abstract base


CLASS	OOF_mixAdornable
- added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/21
MINOR FIXES TO DIRECTORY PARSING

CLASS	dbConnect
Method	fileExists
		- allow for dir to not be valid path
		
		
CLASS	oofDirectory
-mValidDir added
Method	validDir
		- added to return mValidDir		

Method	createDirectory
		- pass true to ctor
		
Method	ctor(path
		- add createSubdirs flag
		- call CreateSubdirsAndWorkingDirID if flag set
		
Method	CreateSubdirsAndWorkingDirID
		- added
		
Method	CreateWorkingDirID
		- filled in skeleton, using OpenWD						

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/21
FIXES TO KEYWORD INDEXING 
main problem identified as iterating in the backend which doesn't reset blob fields (dbTable::next etc. does). In the long term this may require some redesign, the following are simple fixes.

CLASS	OOF_recordSelection
Method	append
		- add assertion that oid is non-zero
		
		
CLASS	OOF_simpleRecordBackend
Method	SortSelectionNow(const dbText*
Method	SortSelectionInverseNow(const dbText*
		- explicitly reset the field
		
		
call unloadRecord in backend loops		
CLASS	OOF_simpleRecordBackend
SearchEqualNonIndexed(const dbField* schfield, const char* schStr, bool matchEntireKey)

SearchWordNonIndexed(const dbField* schField, const char* schStr, bool startsWith)


SearchNotEqualNonIndexed(const dbField* schfield, const char* schStr, bool matchEntireKey)

SearchEqualNonIndexedWildcard(const dbField* schField, const char* schStr, bool matchEntireKey)

SearchNotEqualNonIndexedWildcard(const dbField* schfield, const char* schStr, bool matchEntireKey)

SearchBetweenNonIndexed(const dbField* schfield, const char* strFrom, const char* strTo)

SearchOutsideNonIndexed(const dbField* schfield, const char* strFrom, const char* strTo)

SearchComparativeNonIndexed(const dbField* schfield, const char* schStr, dbQueryClause::BinaryQueryOps theOp)

searchSelContainsAnyOf(const dbField* schField, const char **schStrs, unsigned long count)

searchSelContainsAllOf(const dbField* schField, const char **schStrs, unsigned long count)



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/22
FIXES TO NEW COLUMN SIZERS & HELP NEW REPORT FORMATTING

CLASS	OOF_ExpandableLongArray
Method	value
		- return mDefaultValue if index out of range, instead of reading some 			
		   uninitialised memory location
		   
Method	append
		- inc mNextFreeEntry first, instead of after setting cell, so don't get caught 
		   by auto-increment in operator[]
		   

CLASS	OOF_DictRep
Method	append
		- inc mNextFreeEntry first, instead of after setting cell, so don't get caught 
		   by auto-increment in operator[]


CLASS	oofViewFieldDefaultsColSizer
Method	CalculateDefaultWidths
		- fix proportion calculation
		
		
CLASS	dbView
Method	copy ctor
		- add init list entry for OOF_mixColSizable
		
Method	currentHeading
		- added to avoid caller having to know which field we're up to
		
		
CLASS	oofColSizer
Method	fixedWidth, fixedPercentage
		- change to const read-only operators
		
Method	setFixedWidth, setFixedPercentage
		- added 	
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/22
FIX BUGS IN CHANGING RELATIONSHIPS

CLASS 	dbRelRefBase
Method	changeRelationshipTo
		- drop in Liam's solution - looks workable
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d9 release internally & to 'rough recipients'

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/25
FIX BUGS IN PATHNAMES

Ken's original SET_PATH code which creates directories didn't cope with paths ending in a colon - it tried to create the same directory twice.

CLASS	oofDirectory
Method	ctor
		- make return filename param default=0
		
Method	CreateSubdirsAndWorkingDirID
		- terminate creating dirs if hit colon at end of dir path, as well as when hit 
		   null at end of P/CString
		   

CLASS	dbConnect_ctree
Method	newConnection(FSSpec& inMacFSSpec) 		   
		- rewritten touse oofDirectory like pathname variant
		
Method	openConnection(FSSpec& inMacFSSpec) 		   
		- rewritten touse oofDirectory like pathname variant
		
		
CLASS	dbConnect_dbase
Methods	openConnection(both), newConnection(both
		- rewritten as copies of dbConnect_ctree without the superfile option
		
		
Methods	FinishOpenConnection, FinishNewConnection
		- added to contain the setup stuff from openConnection and newConnection
						

FILE		oofdbase.cpp
- add #include "ooffiles.hpp"


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/25
FIX dBase BUG - FAILS TO OPEN FILES WITH CALCULATED FIELDS
CLASS	OOF_dbaseBackend
Method	openTableInConnection
		- skip field type comparison against dBase header if field virtual
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/25
FIX LOCKING BUG
In KIDMAP, calling  mData->P->Outcomes->count() results in an endless loop with err 42 (from CStudentInformatoin::DoPrintPSAchieved()).


Bug was due to a stupid mistake  - an if() taken out so locking modes were always being triggered. The current locking model needs significant reworking as the two-phase locking model of c-tree doesn't fit well with the auto-lock idea of OOFILE originally. The original auto-lock model did not take related tables into account.

CLASS	dbConnect_ctree
Method	resetLocks
		- uncomment the if(readLocking)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/25
FIXES RAM PERSISTENCE & DBASE - ADD CLOSING OF TABLES

FILE		oof0.hpp
- add definition of _MSBbyteOrder

CLASS	OOF_tableBackend
Method	close
		- add pure virtual
		
		
CLASS	OOF_ramBackend
Method	close
		- added empty
		
		
CLASS	dbConnect_ramp
Method	close
		- added to close all dbTables (saving their data) before closing file
		
		
CLASS	OOF_rampBackend
Method	close
		- added to write to the connection's stream
		
		
CLASS	dbConnect_dbase
Method	close
		- added to close all dbTables
		
		
CLASS	OOF_dbaseBackend
Method	close
		- added to close its dbf and dbt files
		
FUNC		byteflip (in oofdbase.cpp)
- depending on _MSBbyteOrder, define as null macro
								

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/27
ALLOW dbView TO TAKE CONSTANT CHAR EXPRESSIONS

CLASS	dbView
- mConstantCols added 

Method	append(const char*)
		- added to create an oofChar owned by the view
		
Method	operator<<(const char*)
		- added to call new append
		
Method	dtor
		- delete the mConstantCols
		
		
FUNC		dbView* operator<<(dbView*, const char*);	
		- added to allow a dbView* to be appended to						

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/27
IMPROVE COLUMN SIZING

CLASS	dbField
Method	fieldUsualWrapWidth
		- add default to return fieldMinWrapWidth
		
		
CLASS	dbChar		
Method	fieldUsualWrapWidth
		- added to return storage length - assumes dbChars shown in one row
		
		
CLASS	dbText
Method	fieldUsualWrapWidth
		- added to return constant 60, will make settable default later
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/27
UTILITIES AND FIXES

CLASS	dbConnect
Method	suspendSorting
		- send suspendSorting() to all tables
		
Method	resumeSorting
		- send resumeSorting() to all tables
		

CLASS	oofDirectory
Method	ctor(short vRefNum, long dirID) 
		- call CreateWorkingDirID
		
Method	ctor(FSSpec&)
		- call CreateWorkingDirID to try to create assuming name in spec is dir name
		   then try again without name for normal file open		
		   
		   
CLASS	dbTable
Method	copyAllFrom
		- bracket the newRecord loop with suspend and resumeSorting()		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d10 internal release 

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/28
INTEGRATING BRAD'S FIXES TO MAKE dBase COPE WITH VIRTUAL FIELDS
(particularly avoid problems if last field is virtual)


CLASS	OOF_dbaseBackend
- mLastRealField added

Method	openTableInConnection
		- set mLastRealField
		- use mLastRealField to determine when to exit loop, not numFields		
				
Method	LoadRecordAtOffset
		- use mLastRealField to determine when to exit loop, not numFields		



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/28
FIX BUG IN OPENING DATABASE WITH useSeparateFiles AND EMPTY PATH

CLASS	oofDirectory
Method	ctor(const char*)
		- cope with empty path, not trying to create subdirs
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/28
INTEGRATING LIAM'S FIXES TO changeRelationshipTo

CLASS	dbRelRefBase
Method	OID
		- remove assertion that oid==currentOID
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/29
UTILITIES FOR EASY FILE MANIPULATION

CLASS	dbConnect
Method	databaseDirectory		
		- added to get database dir
		

CLASS	oofDirectory
Method	fillInFSSpec
		- added to take a c-string filename and fill in an FSSpec with the directory 
		   details and pascal string of filename. Use with databaseDirectory() to 
		   easily refer to files in the same directory as the database for libs such
		   as Apple's MoreFiles which require an FSSpec. 
		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/29
REPLACE PASCAL STRINGS WITH C-STRINGS IN GRAPHS

CLASS	OOF_String
Method	operator==		   
		- added case-sensitive comparison
		
Method	operator!=		   
		- added using op==
		
Method	adopt(OOF_String&
		- added for faster copying
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d11 internal release 

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/29
FIX BUGS COPYING BETWEEN FIELDS

CLASS	dbBool
Method	copyValueFrom
		- was checking wrong field type - now check if boolField
		
		
CLASS	dbTable
Method	copyRecFrom
		- skip field if virtual


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/29
MORE SUPPORT - FOR OPENING AND LAUNCHING FILES

CLASS	oofDirectory
Method	ctor (volRef, DirID, path
		- added to be able to specify both styles of Mac directory and have it use the 
		   direct ID's or try the path if they are no longer valid

Method	containsFile
		- added to test if file exists in the dir, given a file name
		
Method	openFile
		- added to provide cross-platform file launching

Method	PathToDirID	
		- after creating workingDirID, reset the volRef & dirID from the workingDirID
		   in case had a pathname which moved us
		   
Method	setDirFromPath
		- factored out the ctor(const char*) so can reset the dir at any time		   
		   	
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/29
FIX BUGS ADDING LOTS OF RECORDS
(causing err 42 on Mac)
CLASS	OOF_ctreeBackend
Method	SaveContext
		- use dbConnect_ctree::enterWriteLocking/exitLocking bracketing entire routine		
		   (can't just use LockISAM because get err 112 from nested saves, eg: 
		   keyword table being saved inside SaveContext)
		   	
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/11/30
FIX BUG CREATING FILE IN CURRENT DIR

CLASS	oofDirectory
Method	CreateSubdirsAndWorkingDirID
		- cope with empty path - just use current dir
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/02
UTILITY 

CLASS	OOF_String
Method	emptyString
		- added static to return pointer to sEmptyStr
		
Method	insertChars
		- added to allow inserting or appending from buffers & Pascal strings
		
		
CLASS	oofDirectory
Method	FSSpecToPath				
		- added to take FSSpec & produce C-string path
		
Method	ctor(FSSpec&
		- use FSSpecToPath to set mPath		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/04
FIX BUG IN UPDATING MN RELATIONSHIPS - PROPAGATING LHS ID TO RHS 
(ID propagation should only occur between the lhs file and MN link file, or MN link file to rhs file, NOT directly as the direct rel is between possibly different join ID's).

CLASS	dbRelRefBase
Method	updateRelSaving
		- only copy join ID's if !mMNlink
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/06
INCLUDE JESSE JONE'S FIXES

CLASS	dbTable
Method	copy ctor
		- copy the mConnection pointers.


CLASS	OOF_ctreeBackend
Method	copy ctor
		- copy mIFIL, mDataExt & mIndexExt
		
Method	ctor
		- init mIFILE.ix(0)
		
Method	BuildIFIL				
		- check mIFIL.ix==0
		
Method	DeleteIIDX
		- added to cleanup mIFIL.ix		
		
Method	suppressIndices
		- call DeleteIIDX
		
Method	ctor
		- call DeleteIIDX
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/06
FIX "WINDOW OF VULNERABILITY" BUG IN C-TREE SEARCHES
(search== leaves different mCurrLoadedRecOffset and mSelection.oneRecOffset so if we reload() before a start() we get the wrong record).

CLASS	OOF_ctreeBackend
Method	searchEqual (both)
		- add call to CompleteLoadFromOffset for noDups search
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/06
PREVENT NESTED SORTS - SORT TRIGGERING ITSELF

CLASS	dbSorter
- mSorting added
Method	ctor
		- init mSorting(false)
		
Method	receiveMsg
		- ignore OOFmsg_UnloadRecord (was triggering sort!!!)
		- case OOFmsg_ChangeSelection, only set mNeedsToSort if !mSorting. We should 
		   not have too many cases triggering nested state changes, but avoid forcing 
		   redundant sorts if we do!
		   
		
Method	sortNow
		- set mSorting		
				
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/07
FIX PROBLEMS WITH GUI - TOO HARD FOR USER CODE TO ESTABLISH ALL NEW RECS

CLASS	dbTable
Method	ensureRecordLoaded		
		- add param bool autoCreateRelated mainly for use by dbFieldLinks

		   
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
ENHANCE KEYWORD SEARCHING TO TABLE-LEVEL SEARCHES

CLASS	OOF_ctreeKeywordIndex
Method	FinishSearch
		- added to take the common bits out of searchField and searchTable
		
Method	FinishSearchAny
		- added to take the common bits out of search...AnyWords 
		
Method	searchTableAnyWords		    
		searchTableAllWords
		searchTable
		- added as copies of field routines

enum 	QueryClauseTypes 
		- entireTable added


CLASS	OOF_simpleRecordBackend
Method	search		
		- added warning for tableWords search not allowed
		

CLASS	OOF_ctreeBackend
Method	search		
		- added case for tableWords search calling SearchTableWords
		
Method	SearchTableWords
		- added
		
CLASS	dbQueryBinaryNoField
- added to contain the op and rhs of dbQueryBinary

		
CLASS	dbQueryBinary
- descend from dbQueryBinaryNoField


CLASS	dbTable
- added keyword searches
	hasWord(const char* str)
	hasAnyWordsDelimited(const char*, char delimiter);
	hasAllWordsDelimited(const char*, char delimiter);
	hasAnyWordsOf(const char **schStrs, unsigned long count);
	hasAllWordsOf(const char **schStrs, unsigned long count);
	hasWordStartsWith(const char* str) const;
	hasAnyWordsStartsWithDelimited(const char*, char delimiter);
	hasAllWordsStartsWithDelimited(const char*, char delimiter);
	hasAnyWordsStartsWithOf(const char **schStrs, unsigned long count);
	hasAllWordsStartsWithOf(const char **schStrs, unsigned long count);



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
FIX PROBLEMS CHANGING RELATIONSHIPS 
(Thanks Liam)

CLASS	dbRelRefBase
Method	OID(oidT)
		- allow case of setting current oid to zero
		- don't mark dirty if setting oid to same value (trivial case)

Method	changeRelationshipTo
		- add assertion to guard against silly changes to same rel
		- add assertion to guard against calling on new record - won't have oids


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
FIX COUNT BUG from Jesse Jones

CLASS	OOF_recordSelection
Method	union_with, difference_with
		- move some count() calls into specific state handlers, not at top of routine

Method	Invariant
		- added, returning a bool so can be used in assert() etc.
		
Add calls to Invariant in
- ctor
- copy ctor
- dtor
- count
- operator=				
- SelectAll
- SelectNone
- SelectOne
- SelectSome
- SetItemOffset


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
GUARANTEE DATABASE STATE

Check & call MakeTableValid in more places, so if people use any front-end operations it is guaranteed to be validated.

CLASS	dbTable
- contains
- currentOID
- addOIDtoSelection
- dropRecordFromSelection
- currentSelection
- difference_with
- intersection_with
- invert
- union_with


CLASS	OOF_recordSelectionRep
Method	Count
		- replace assert(mState==empty) which is wrong (might be allRecs)
		   with assert(Invariant());
		   
Method	Invariant
		- added
		
				   

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
FIX addOIDtoSelection (allows multiple appends) from Jesse Jones

CLASS	OOF_simpleRecordBackend
Method	addOIDtoSelection
		- use contains() to check if should append
		- return bool
		
Method	contains
		- added to publicise check if oid in selection
		
		
CLASS	OOF_tableBackend
Method	contains
		- add pure virtual
		
Method	addOIDtoSelection
		- return bool
		

CLASS	dbTable
Method	contains
		- add simple forwarder								

Method	addOIDtoSelection
		- return bool
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
MINOR CHANGES from Jesse Jones

CLASS	dbBool, dbNumericField, & descendants
Method	MakeQueryLiteral(various
		- rename as makeQueryLiteral and made public to enable users to construct 
		   queries easily				

		   
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
SUPPORT FOR SERVER (Untested, thanks to Jesse & Tobias)
CLASS	OOF_ctreeBackend
CLASS	dbConnect_ctree
- sFileMode
		- add case for neither NOTFORCE or FPUTFGET
		
NOTE:	still requires user to hack their own
dbConnect_ctree::SetupConnection to supply a userID, server, and password
to InitISAMXtd, eg:

        char* userID = "blah";
        char* password = "blah2";
//      char* server = "";
// Mac server
        char* server = "FAIRCOMS@999.99.99.999";        // NT server
		
		
		
CLASS	OOF_ctreeBackend
Method	searchEqual(both)
		- fix bug spotted by Tobias, that batchReq.btotal is wrong if not found, not 
		    reliably set to zero, so test thaterr==INOT_ERR
		    
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d12 internal release & to 'rough recipients'

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/09
BUG FIXES FOR dbText SORTING

CLASS	OOF_simpleRecordBackend
Method	SubSort
		- add reset for textField case, similarly to 96/11/21
		- change a dbChar* downcast to dbText*


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/10
TEMPORARY CHANGES TO dBASE BACKEND TO ALLOW dBase IV FILES TO BE READ

enum		dbaseFormatT
		- added
		
		
CLASS	OOF_dbaseBackend
- mdbFormat added

Method	openTableInConnection
		- check for dBase IV value & set mdbFormat

Method	LoadRecordAtOffset				
		- read dBase IV memo lengths, instead of reading until terminator ctlr-z
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/11
FIXES TO PERSISTENT RAM BACKEND
CLASS	OOF_simpleRecordBackend
Method	prev
		- cope with mSelection.iter()==0 but record not loaded (ie !atFirst())

CLASS	OOF_rampBackend
Method	close
		- use fwrite, not fprintf to write num records

Method	openTableInConnection
		- use fread, not fscanf, to read num records
				

CLASS	dbConnect_ramp
CLASS	dbConnect_ram
CLASS	dbConnect_dbase
Method	MakeTableBackend
		- add demo check of 2 tables, same as ctree
		
CLASS	dbTable
- mPrototypicalInstance added

Method	ctor
		- init mPrototypicalInstance(true)
		
Method	copy ctors
		- init mPrototypicalInstance(false)
								
Method	dtor
		- check mPrototypicalInstance and call mConnection->close()
		(later remove this - expect user to close)
										
										
										
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/12
ALLOW NULL VALUES TO BE RETURNED FROM FIELDS WHEN RECORD NOT LOADED OR LOADABLE
(eg: people include related tables in reports, when the relationship may fail to find a rec. The extra checking in ensureRecordLoaded now causes this to fail, where before it would just return random data.)

CLASS	dbTable
Method	ensureRecordLoaded
		- add param bool failureAborts=true

Method	reloadRecord
		- add return type of bool
		
		
CLASS	OOF_simpleRecordBackend
Method	reloadRecord
		- add return type of bool, and fail if no mCurrLoadedOffset

Method	getFieldReadFrom		
		- pass false into ensureRecordLoaded so can fail, returning nil


Check the return from getFieldReadFrom is nil and return default value
- dbBool::operator bool
- dbChar::operator const char*
- dbDate::operator unsigned long
- dbLong::operator long
- dbReal::operator double
- dbRelRefBase::OID
- dbShort::operator short
- dbUlong::operator unsigned long
- dbUshort::operator unsigned short


CLASS	dbChar
Method	operator+=
		- change use of getFieldReadFrom to getFieldWriteDest


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/12
ADD MISSING FUNCTION

CLASS	dbDate
Method	value
		- added to return raw value (unsigned long) for easy if() checks
		
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/12
AVOID UNNECESSARY SAVES OF RELATED TABLES

CLASS	dbRelRefBase
Method	updateRelSaving
		- use copyValueIfDifferent instead of copyValueFrom for join fields
		
CLASS	dbField (and all descendants that implemented copyValueFrom)
Method	copyValueIfDifferent 
		- added similar to copyValueFrom but with value comparison before writing
				


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/13
FIX PROBLEM WITH KEYWORD SEARCHES 'StartsWith'
(Note: this leaves a problem with searches at table level due to compound indices not being reused).

CLASS	OOF_ctreeKeywordIndex
Method	searchFieldAnyWords
Method	searchField
Method	searchTableAnyWords
Method	searchTable
		- use mainIndex not Word field for startsWith searches


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/13
UTILITY
CLASS	stSuspendSort
- added to make it easy to suppress sorting within a lookup procedure


CLASS	stSaveSelectionAndSuspendSort
- combine two ops that are common in lookups


CLASS	stSaveSelection
- change member vars to protected so can undo sort on table


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/13
FIX BUGS IN TRIGGERING SORTS
CLASS	dbTable
Method	ContextChange
		- for case requireExplicit, broadcast(OOFmsg_ChangeContext);
		
		
CLASS	dbSorter
CLASS	dbFieldSorter
Method	clone
		- return 0 if mSorting		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/15
FIX CLOSING LOGIC TO COPE WITH RAM CONNECTIONS


CLASS	dbTable
Method	make dbConnect_ram a friend


CLASS	dbConnect_ram
Method	dtor
		- if still open, loop all tables and set mConnection to 0
		(this is a hack for this connection alone - all the others outlast their 	
		 tables)


CLASS	dbConnect_ramp
CLASS	dbConnect_ctree
Method	dtor
		- if still open, give error message as tables should be destroyed first


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/15
INTEGRATE KEN'S FIXES TO DBASE & RAMP BACKENDS
DBase Changes

# Rolled in Dbase4 blob support (and a couple of other of brad's changes)
  officially and made it the default for created files.

# Fixed a number of assumptions about the byte-ordering in the writing of
  the headers for new files.

# Fixed a bug in the blob reading code that bit when blobs were bigger than
  512 bytes with DBase3 memos.  The symptom was that the final chunk of the
  blob was written over the first chunk.

# Modified the DBConnect to allow for choosing memo style via a
  useDbase3Memos call

# Fixed the sharing of data between DBase backends and corrected the copy
  ctor to suit - NOTE: a number of member variables have now become
  ptr types so that sharing will work properly.

# Added Refcounted data storage so that deletions can happen properly.

# Havily modified the WriteBuffer call to make it correctly write strings

Still To Do On DBase

# Write Blobs (for both types)

# Correctly write numeric, logical and date Fields


Other Changes

CLASS	OOF_simpleRecordBackend
Method	invert
		- added
		
		
CLASS	OOF_ramBackend
Method	invert
		- removed stub		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/16
ADD EXTRA PERSISTENT RAM CONNECTION IO METHODS

CLASS	dbConnec_ramp
Method	save
		- added
		
Method	close
		- just call save 
		
Method	revert
		- reload from the disk				


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/17
FIX RAM BACKENDS TO COPE WITH CACHING DIRTY RECORDS
(stop re-using mDirtyRecordCache for storage!)


CLASS	OOF_ramBackend
- mRamRecords added

Method	ctor
		- create mRamRecords instead of leaving as 0.
		(fixes bug where if only records added are in a clone of prototypical table, 
		  the proto never gets to point to the shared cache of records)

Method	LoadRecordAtOffset
		- add call to MaybeLoadRecordFromCache
		
use mRamRecords instead of mDirtyRecordCache in
- countAll
- saveRecord
- deleteRecord
- LoadRecordAtOffset


Method	saveRecord
		- moved to SaveContext
		- copy loop from dbConnect_ctree::saveRecord, so saves entries in dirty record 
		   cache.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/23
CLEANUP FOR METROWERKS CW11 COMPILER RELEASE AND MSL LIBRARY
( gave up part-way due to differences between stream libraries)

FILE		oof0.hpp
		- add test to include sstream instead of iostream
		- add typedefs for ostrstream and istrstream
		
FILE		ooffiles.hpp
		- remove #include <OSEvents.h> & other obsolete includes
				


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/23
FIX CONFLICT WITH 'reverse' IN STL Algo.h

CLASS	reverse
		- rename as reversed
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/23
FIX BUG WITH WRITING DELETED MEMORY WHEN FINISHING RAMP BACKEND
problem was due to save being triggered by destruction of a dbTable, which of course is after the table's fields have been deleted.

CLASS	OOF_rampBackend
Method	close
		- set mBlobFieldNums to 0 to avoid routines like start, next
		   resetting the (now deleted) blobs.
		   
		   
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/24
FIX BUG WITH SINGLE SEARCHES RETURNING WRONG (PREVIOUSLY LOADED) RECORD

CLASS	OOF_simpleRecordBackend
Method	reloadRecord
		- if no current offset, call start()
		

		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/24
INTEGRATE KEN'S LATEST dBase CODE

* Added Dbase4 BLOB writing code

* Fixed writing of numbers by using the OOFILE Dictionary

* Fixed a pathalogical bug in cloned backends (*blush* - The copy
constructor wasn't
  copying *two* of the members correctly - one wasn't getting copied, the
other was
  getting the *wrong* value !)

Still to do:

* Write Dbase3 BLOB writing code

* Make the Dbase4 BLOB code cope with BLOBs that outgrow their space
  non-trivial - Need to bounce some ideas off Andy

* Honour deleted records

* Make sure that deletions work properly

* Pack the DBF file (and maybe the DBT file) (?)

		
		
	
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/28
FIX BUG WITH SINGLE SEARCHES RETURNING WRONG (PREVIOUSLY LOADED) RECORD

CLASS	OOF_simpleRecordBackend
Method	gotoBOF
		- added to set mCurrLoadedRecOffset=0 which implies we are NOT at a record,
		   whether it is loaded or not.

Method	searchEqual(both versions)
		- call gotoBOF at top

Method	search
		- call gotoBOF at top

Method	searchSelection
		- call gotoBOF at top


CLASS	OOF_ctreeBackend
Method	searchEqual(both versions)
		- call gotoBOF at top
		- Call unloadRecord before returning
		- For no dups, use GetKey instead of GetRecord & don't call
		   CompleteLoadRecordAtOffset	
		- For case of dups allowed, but only 1 rec found, don't call
		   LoadRecordAtOffset

Method	search
		- call gotoBOF at top

		
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d14 internal release

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/29
FIX BUG WITH C-TREE ASSERTION FAILURE

CLASS	OOF_ctreeBackend
Method	searchEqual (all versions)
		searchBetween (all versions)
		- when checking err after DoBatch, if err also check err!=INOT_ERR before
		    assertion that suerr!=INOT_ERR. Under some builds, it appears this DoBatch
		    fails to return the error code that is set in the system error code.		   
		    

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/30
FIX UNNECESSARY SORTS, PARTICULARLY FROM HIERARCHICAL LISTBOXES
CLASS	dbTable
Method	setSelection (both versions)
		- quick hack, suspend sorting whilst broadcasting OOF_ChangedSelection
		    

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
96/12/30
FIX BUG IF DELETE RAM BACKEND CONNECTION AFTER DELETING TABLES
CLASS	dbConnect_ram
Method	close
		- set mOpen = false (so the dtor doesn't try to call tables)
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/01
FIX BUG IN JUMPING DOWN A SELECTION 
(eg: in a scrolling list)
CLASS	OOF_ctreeBackend
Method	GotoRecordForAllIndexed
		- replace use of KeyAtPercentile with GetORDKey
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/02
ENABLE NIL PARAM TO dbView

CLASS	dbView
- mConstantCols renamed as mOwnedFields

Method	ctor (all)
		- allow nil pointer to be passed in for table, forcing mCloneSource to false
		
Method	extract
		- if nil table, iterate once
		
Method	append(dbField*)
		- if field is standalone, adopt it into mOwnedFields				
		
Method	append(dbField&)
		- if field is standalone, clone it into mOwnedFields


CLASS	dbField
Method	clone
		- added pure virtual, and added concrete to all descendants
		
				
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/03
FIX BUG IF OPEN MULTI CONNECTIONS, CLOSE ONE THEN OPEN ANOTHER

CLASS	dbConnect_ctree
- sConnectionsOpen renamed as sConnectionsOpened
Method	dtor
		- don't decrement sConnectionsOpen
						
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/04
FIX BUG IF PASS EMPTY STRING TO DIRECTORY UTILITIES
CLASS	oofDirectory
Method	containsFile
		fileExists
		- return false if string pointer null or string empty.
		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/06
KEN'S DBASE BLOB FIXES
* Fixed bug in writing large (multi-block) new BLOBs in updating the
  first free block item (only adding 1, not the actual number of blocks !)

* Added backend array to store BLOB block sizes - each clone of the backend
  has its own copy of this data

* Added code to reallocate BLOBs if they outgrow their space (NOTE: if they
  are the last BLOB in the file, then they update inplace and change the
  first free block)


		
		
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/07
MOVE IOSTREAMS OUT OF PUBLIC HEADERS SO PEOPLE CAN USE PRECOMPILED HEADERS
Generally, move the streams stuff out of oof0.hpp and into new file oofios.hpp, then include oofios.hpp in all oof*.cpp

FUNC		operator<<(ostream& os, const OOF_String& str)
		- moved from inline to avoid header using stream stuff


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/13
FIX BUG IN OOFTST21 - REVERSED SUBSORTS NOT WORKING ON CHAR FIELDS
CLASS	OOF_simpleRecordBackend
Method	SubSort
		- put sortedInsertReverse into cases for charField and textField
		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/14
FIX FAILURE TO COMPILE IN CW WITH "ARM COMPATABILITY"

- added {} bracketing of a few for loops within if/else statements mainly in oofmsg.cpp and oofdbase.cpp



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/01/29-30
ADD INTERNAL DEBUG LOG CAPABILITY
(#ifdef OOF_DEBUG_LOG_NAME)

MACRO	OOF_DEBUG_LOG
		- added to compile out or define a simple write to the log of a text string


CLASS	dbConnect
- sDebugLog added
- sDebugDir added as realised we need to force the log to open in same dir each time even if user code changes dirs between logged events

Method	debugLog
		- add static to return an ostream&
		
		
CLASS	dbTable
Method	StandardDebugLog
		StandardQueryDebugLog
		- conditionally added to write debugLog entries
		
Method	describeState
		- added

Method	addOIDtoSelection
		dropRecordFromSelection
		- made non-inline		
		
CLASS	OOF_tableBackend
Method	describeState
		- added pure virtual
		
						
CLASS	OOF_simpleRecordBackend
Method	describeState
		- added
		
		 		
CLASS	OOF_recordSelection
Method	describeState
		- added pure virtual


CLASS	dbField
Method	describe
		- change to tabbed output for use in debug log
				
		
FUNC		operator<<(ostream& os, OOF_SelectionStateDefiner::EselectionState
FUNC		operator<<(ostream& os, OOF_recordBufferedContext::ERecordState
FUNC		ostream& operator<<(ostream&, BinaryQueryOps);
FUNC		ostream& operator<<(ostream&, BinaryQueryOps);
FUNC		ostream& operator<<(ostream&, TrinaryQueryOps);
FUNC		ostream& operator<<(ostream&, QueryCombinatorialOps);
FUNC		ostream& operator<<(ostream&, QueryClauseTypes);
		- added to write the name of the enum


CLASS	dbQueryClause
Method	describe
		- added pure virtual, and implementations in all subclasses		


CLASS	dbSorter
Method	describe						
		- added to describe all segments
		
		
CLASS	dbFieldSorter
Method	describe						
		- added
		
		
- add log entries in 
dbConnect_ctree::FinishNewConnection
dbConnect_ctree::FinishOpenConnection
dbConnect_dbase::FinishNewConnection
dbConnect_dbase::FinishOpenConnection
dbConnect_ram::FinishNewConnection
dbConnect_ram::FinishOpenConnection
dbConnect_ramp::FinishNewConnection
dbConnect_ramp::FinishOpenConnection
dbSorter::sortNow
dbBrowseHelper::
- appendSelection
- selectRecNo
- refreshBrowser
dbTable::
- start
- last
- next
- close
- selectAll
- selectNone
- selectJustCurrent
- selectJustOID
- selectJustRecordPointer
- ContextChange
- saveRecord
- suspendSorting
- resumeSorting
- unSorted
- reloadRecord
- cloneRecord
- clone
- cloneSharingSelection
- cloneWithoutSelection
- gotoRecord
- newRecord
- revertRecord
- relateSelection
- unloadRecord
- setTableValid
- search
- searchSelection

user table macros		:
- clone
- cloneSharingSelection
- cloneWithoutSelection
- cloneEmptyInRAM
-cloneInRAM
		
				


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/02
DEBUGGING (RUNNING SpotLight from Onyx Technology)

CLASS	OOF_DictRep
Method	Append
		- don't inc mNextFreeEntry before setting value
		
Method	operator[]
		- add assert(mNextFreeEntry <= mNumSlots);
		- change test from (index > mNextFreeEntry) to (index >= mNextFreeEntry)

Method	value
		- add assertion to compare index against mNextFreeEntry, was only comparing
		 against upper limit of allocated chunk			
		 
		 
CLASS	OOF_ExpandableLongArray
Method	append
		- don't inc mNextFreeEntry before setting value
		
Method	operator[]
		- add assert(mNextFreeEntry <= mNumSlots);




=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/02
INTEGRATE BRAD LANG'S CHANGES

CLASS	oofDirectory
Method	path
		- added accessor
		
Method	GetCurrentLocation
		- set the path after setting the Macintosh dir and volume ID's
		
				


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/02
FIX LIAM'S BUG - CRASH IF TRY TO REBUILD FIRST OF TWO C-TREE CONNECTIONS

CLASS	OOF_ctreeBackend
Method	rebuild
		- add activateConnection() call before doing anything, was not swapping
		 database context so c-tree Plus closed wrong database




=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/04
FIX BUG IF DRAG ITEMS ACROSS TO LISTBOX IN SORTED ORDER, DISPLAYS 2ND ITEM TWICE
CLASS	dbTable
Method	setSelection
		- remove suppression of sorting (temporary hack earlier)
		
Method	setSelection(const dbSelection&
		- rewritten to just call other
		
				



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/04
FIX BUG IF TRY TO PARSE DATE THAT'S UTTER GARBAGE

CLASS	dbDate
Method	istream2ymd(istream& is, unsigned short& year, unsigned short& month,
		unsigned short& day, dateFieldOrder theOrder)
		- add && is.good() checks on loops that skip junk. Similar method had them,
		 don't know how they were missed from here!


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/05
FIX BUG SHOWING AS FAILURE TO EMPTY RELATED SELECTIONS

CLASS	OOF_recordSelectionRep
Method	DropSelection
		- when mRecsRep = 0 still reset mState


CLASS	OOF_RelMN
Method	RelateMN
		- don't make mRelToRHS->relateSelection() conditional as it needs to 
		   selectNone on the rhs if we have no intermediate related records		



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/05
FIX BUG CAUSING 'index unexpectedly empty'

Bug was assumption of file current key matching current position of OOFILE iterator (dbTable) which is wrong if another iterator (eg: browser refresh) traverses the file between your accesses.

CLASS	OOF_ctreeBackend
Method	GotoRecordForAllIndexed
		- compare file position against mCurrentOffset and use FirstKey() if no match
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/06
FIX BUGS IN COLUMN SIZING, AND ADD COLUMN SIZING TO BROWSER DISPLAYS

CLASS	oofColSizer
Method	calculateWidths
		- clear unset widths, if we have failed to allocate some cols due to fixed
		   allocations consuming all space
		 - allow slop of 4 in determining if column fits remaining space, truncating
		    fixed width to the remainder


CLASS	oofViewFieldDefaultsColSizer
Method	CalculateDefaultWidths
		- when a short field is allocated space according to min wrap, deduct it from
		   the total length used to allocate the remaining space. Without this change,
		   the remaining space is not fully apportioned over the large fields.
		   
		   
CLASS	dbField
Method	fieldMinWrapWidth		   
		- change default from 20 down to 12 to get better mix in tight places
		

CLASS	OOF_ExpandableLongArray
Method	ctor
		- if declare number of slots in advance, set their content to the default
		 value (init with crap data was causing fixedPercent cols to fail if set other
		  than the first col)
		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/08
REMOVE NEED TO DOWNCAST THE cloneXXX FUNCTIONS

GLOBAL RENAMES
clone TO cloneAnon
cloneWithoutSelection TO cloneAnonWithoutSelection
cloneSharingSelection TO cloneAnonSharingSelection

in file oofmacro.hpp
- add inlines of old names (eg: clone) calling the new anon variants and downcasting



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/08
FIX BUG - UNABLE TO SAVE NEW EMPTY RECORDS

CLASS	dbTable
Method	saveRecord
		- add isNewRecord() to isDirty() loop test
		

CLASS	OOF_ramBackend
CLASS	OOF_dbaseBackend
CLASS	OOF_ctreeBackend
Method	saveRecord
		- add isNewRecord() to isDirty() test
		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/09
FIX BUG - RECORDS WITH FIRST FIELD ACCESSED BEING BLOB FAIL TO LOAD BLOB
(length() call wasn't loading record)

CLASS	OOF_simpleRecordBackend
Method	fieldDataLen
		- call ensureRecordLoaded()



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/09
FIX BUG IN RE-EDITING BLOB FIELDS - NULL AT END OF ORIGINAL TEXT

CLASS	OOF_simpleRecordBackend
Method	fieldDataLen		
		- separate case for textField that deducts the trailing null


CLASS	dbText
Method	length
		- don't deduct 1 from length unless standalone, return just fieldDataLen now
		   that it's correct		
		   
		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/09
ADDING FROZEN HEADER ROWS TO DATABASE BROWSER

CLASS	dbView
- mSuppressHeadings added

Method	willSuppressHeadings
		suppressHeadings
		- added accessors for mSuppressHeadings
		
Method	ctor (all)
		- init mSuppressHeadings(false)
		
Method	copy ctor
		- copy mSuppressHeadings				

Method	getHeading
		- call replaceChar to replace underscores with spaces in field names
		

CLASS	OOF_String
Method	getChars
		- added copy of (fixed) dbChar method
		
Method	replaceChar 
		- added	
		
				  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/09
FIX BUG THAT COULD CAUSE OVERRUN, MAINLY IN TEXT BROWSERS
CLASS	dbChar
Method	getChars
		- if ioLen param is shorter than body, don't copy entire body
		
				  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/10
INTEGRATE RICK'S dbDateTime

CLASS	OOF_ctreeBackend
Method	MapFieldTypeToCtreeDODAType
		- mape dateTimeField to CT_INT4U
		- change dateField to CT_INT4U
		

CLASS	OOF_dbaseBackend
Method	createTableInConnection
		- map dateTime field to Chars



CLASS	OOF_simpleRecordBackend
Method	sortSelectionInverseNow(fieldNumT sortFieldNo)	
		- map dateTimeField to uLong sort
		
Method	sortSelectionNow(const dbSorter* theSorter)
		- add case for dbDateTime as copy of dbDate		
		
Method	sortSelectionNow(fieldNumT sortFieldNo)	
		- map dateTimeField to uLong sort
		
Method	SubSort		
		- add case for dbDateTime as copy of dbDate		



CLASS	dbDateTime
CLASS	oofDateTime
Method	clone
		- added


FUNC		operator<<(ostream& os, OOF_fieldTypes ft)
		- add case for dbDateTime		
				  
				  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/10
INTEGRATE RICK'S dbTime

CLASS	OOF_ctreeBackend
Method	MapFieldTypeToCtreeDODAType
		- mape timeField to CT_INT4


CLASS	OOF_simpleRecordBackend
Method	sortSelectionInverseNow(fieldNumT sortFieldNo)	
		- map timeField to uLong sort
		
Method	sortSelectionNow(const dbSorter* theSorter)
		- add case for dbDateTime as copy of dbDate		
		
Method	sortSelectionNow(fieldNumT sortFieldNo)	
		- map dateTimeField to uLong sort
		
Method	SubSort		
		- add case for dbDateTime as copy of dbDate		


CLASS	dbTime
CLASS	oofTime
Method	clone
		- added
		
		
FUNC		operator<<(ostream& os, OOF_fieldTypes ft)
		- add case for dbDateTime
		
- added hourT enum to top of oof4.hpp, was in oof4.cpp but needed in inter		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b2d15 internal release  97/02/12
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/13
IGNORING DUPLICATES

CLASS	OOF_ctreeBackend
- mIndexDictionary renamed as mCompoundIndexDict to avoid
   confusion (it does NOT list all indices)
- mUniqueFieldNums added

Method	ctor
		- init mUniqueFieldNums(0)
		
Method	BuildIFIL
		- create mUniqueFieldNums if necessary and append unique field num
		
Method	copy ctor
		- copy and maybe inc mUniqueFieldNums
		
Method	dtor
		- dec mUniqueFieldNums						

Method	SaveBlobs
		- added

Method	SaveBlob
		- return a bool indicating we actually saved
				
Method	SaveMainRecord
		- added
		
Method	SaveContext
		- move some logic out to new Save methods
		- check if can save blobs before main record or if dups require we try to save 
		   main first.				

Method	HasDirtyUniqueIndices
		- added

Method	HasUniqueIndices
		- added



CLASS	OOF_SharedArray 
- added as descendant of OOF_ExpandableLongArray & OOF_mixRefCount



CLASS	dbTable
Method	ignoreDuplicateRecords
Method	noticeDuplicateRecords
		- added simple forwarders to toggle setting
		
		
CLASS	OOF_tableBackend
Method	ignoreDuplicateRecords
Method	noticeDuplicateRecords
		- added pure virtual
		
		
CLASS	OOF_simpleRecordBackend
- mIgnoreDuplicateRecords added

Method	ctor
		- init mIgnoreDuplicateRecords(false)
		
Method	copy ctor
		- copy mIgnoreDuplicateRecords
		
Method	IgnoringDuplicateRecords
		- added for descendants to check		


CLASS	stIgnoreDuplicateRecords
- added stack class to wrap a ignoreDuplicateRecords() noticeDuplicateRecords() pair of operations


CLASS	stSaveSelection
Method	ctor(dbTable&)
		- added extra ctor as convenience if not using pointers to tables
						
Method	ignoreDuplicateRecords
Method	noticeDuplicateRecords
		- added to toggle setting
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/14
FIX BUG - dBase FILES WITHOUT MEMO FIELDS CRASH ON EXIT

CLASS	OOF_dbaseBackend
Method	ctor & copy ctor
		- init mBLOBBlocks(0) 
		  (was only set if had blobs)
		  
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/16
BE ABLE TO COMPILE MAC PROJECTS WITHOUT PRECOMPILED HEADERS & CLEANUP FILENAMES
(see also OOFGRAPH Code Change Diary & OOFrep Code Change Diary)

ADD #IFDEF'D INCLUDES

oof1.hpp
#include <Files.h>

oof1.cpp
#include <Dialogs.h>

oofctre1.cpp
#include <Events.h>

oofsize.cpp
#include <QuickdrawText.h>
		  
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/16
ROLL IN KEN'S CHANGES TO DBASE TO COPE WITH dbDateTime

CLASS	OOF_dbaseBackend
Method	createTableInConnection
		- add case for datetime field to create C14 field

Method	openTableInConnection		
		- add case for datetime field to check it matches char field
		
Method	LoadRecordAtOffset		
		- add case for datetime field to load YYYYMMDDHHMMSS

Method	WriteBuffer
		- add case for datetime field to write YYYYMMDDHHMMSS
		  
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/17
FIX BUG IN DATES CREATED IN FEB 
(only showed on 68K, PPC unitialised variable was true)

CLASS	dbDate
Method	checkDate
		- if month==feb, set return value true for days <=28
		

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/18
ABSTRACT SAVING OF RECORDS

CLASS	OOF_simpleRecordBackend
Method	saveRecord
		- added	
		
Method	unloadRecord
		- added	
		
Method	SaveContext
		- added pure virtual			
		
		
CLASS	OOF_ramBackend
Method	saveRecord
		- deleted - use parent		
		
		
CLASS	OOF_dbaseBackend
Method	saveRecord
		- deleted - use parent		
		
Method	unloadRecord
		- deleted - use parent		
		
		
CLASS	OOF_ctreeBackend
Method	saveRecord
		- simplified to activate connection then use parent
						
Method	unloadRecord
		- deleted - use parent		
		



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/18
SUPPORT GUI APPENDING/DELETING LINKED RECORDS

CLASS	dbTable
Method	appendSelection
		- broadcast OOF_AppendSelection

Method	controllingRelationship
		- added to return mRelated
		

CLASS	dbRelMaintainer
		- added listener to create MN links


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/20
COMPILE UNDER UNIX

CLASS	dbTime
Method	long2dhmsm
		- use (short) casts instead of short()
		

CLASS	oofSizer
Method	CalculateWrapping
		- move incorrect brace in switch
					
								
CLASS	OOF_recordSelectionRep
Method	Invariant
		- change nil to 0
		
		
CLASS	oofDirectory
- make all uses of mWorkingDirID and FSSpec #ifdef _Macintosh

Method	gotoDirectory
Method	GetCurrentLocation
		- remove raise for non-Mac conditions
		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/21
FINISH SUPPORT GUI APPENDING/DELETING LINKED RECORDS

CLASS	dbRelRefBase
Method	getMNlink
		- added to just return the link

Method	updateRelSaving
		- renamed to updateRelValue to make more sense
		
		
CLASS	OOF_RelMN		
Method	appendSelection
		removeSelection
		clearSelection
		- added to add/delete MN link records		


CLASS	dbSingleListener
Method	receiveMsg
		- for broadcaster closing, now default to deleting this
		
		
CLASS	dbFieldCopier		
Method	receiveMsg
		- ignore broadcaster closing, as inherited behaviour is desired
		
		
CLASS	dbSorter
Method	receiveMsg
		- swallow broadcaster closing, not deleting ourself


CLASS	dbBrowseHelper
Method	browseViewWithTable
		- check if table in view is related and if by MN relationship create a 
		   maintainer for appended selections
		   

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG IN IMPORTING TEXT FILES - IF LAST LINE IS BLANK CREATES EMPTY RECORD
97/02/23
CLASS	dbTable
Method	insert
		- move unloadRecord after end of loop so unloads last if fails
		- always init gotCompleteRecord to false each time round loop



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
ADD WARNING TO HELP USER AVOID DEFINING BAD RELATIONSHIPS
97/02/23

CLASS	dbRelationship
Method	linkMNvia
		- add test that parameters are on same file (we're saying that the MN link is
		 on a middle table, with traversal members that point to the far lhs & rhs)


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX BUG FAILING TO PROPAGATE DIRTINESS FROM RELATED RECORDS
97/02/23
CLASS	dbTable
Method	markDirty
		- added to propagate to lhs as well as set backend state.
		
change fields to call mTable rather than mBackend->markDirty()
- dbBLOB::append		
- dbBLOB::setBytes
- dbBool::operator=(bool
- dbChar::setChars
- dbDate::setDate
- dbDateTime::setDateTime
- dbFixedBinary::setByte
- dbFixedBinary::setValue
- dbLong::operator=
- dbReal::operator=
- dbRelRefBase::OID
- dbShort::operator=
- dbText::setChars
- dbTime::setTime
- dbUlong::operator=(unsigned long
- dbUshort::operator=(unsigned short



=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/27
FIX ABILITY TO DESCRIBE AN INCOMPLETELY INITIALISED RELATIONSHIP

CLASS	dbRelRefBase
Method	describe
		- check if complete before dumping details on stream
		
Macro	_MSBbyteOrder
		renamed as OOF_MUST_FLIP_TO_MS_BYTE_ORDER
		


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/27
ADDING EXCEPTION HANDLING BEGINNINGS

FILE		oof0.hpp
add macro definitions, depending on platform and settings
- OOF_EXCEPTIONS_AVAILABLE
- OOF_USING_EXCEPTIONS
- check for user setting OOF_SUPPRESS_EXCEPTIONS


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/02/28
ADDING DEFAULT CALCULATORS, UPDATE FIELDS AND DETECT CHANGE OF FIELD

CLASS	dbField
- mCalculateOnlyDefaults added

Method	ctor(all)
		- init mCalculateOnlyDefaults(true)

Method	copy ctor
		- copy mCalculateOnlyDefaults
		
Method	fieldIsVirtual
		- test mCalculateOnlyDefaults
		
Method	hasDefaultCalculator
		- added to test if calculator and mCalculateOnlyDefaults
		
Method	useCalculatorOnlyForDefaults
		- added setter for mCalculateOnlyDefaults


ALL dbField SUBCLASSES
Method	calculateWith
		- added param with default false to set mCalculateOnlyDefaults

		
CLASS	dbDateTime
Method	asStr255
Method	setStr255		
		- added copies from dbDate


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/05
NEW MODEL OF LEAVING FIELDS - ADD FIELD DIRTY CHECKS

CLASS	dbField
Method	isDirty
		- added to check backend
		
		
CLASS	OOF_tableBackend
Method	fieldIsDirty
		- add pure virtual				
		
CLASS	OOF_simpleRecordBackend
Method	fieldIsDirty
		- added		
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/05
FIX BUG IN PROPAGATING DELETES THROUGH MN RELATIONSHIPS

CLASS	OOF_RelMN
Method	ctor
		- set propagateRelatedDeletes(false) on both sides of intermediate table
		
		
CLASS	dbRelRefBase
Method	setMNlink		
		- set propagateRelatedDeletes(false) as we are pointing directly to the
		  other side of the MN relationship. We only have deletes propagate
		  through the rel's to the MN link table itself.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/05
MAKING SORTERS WHOLLY OWNED BY AND RESPONSIVE TO SELECTIONS		

CLASS	stSaveSorter
- removed, didn't work anyway


CLASS	dbSorter
- mListensTo, mSorts removed
- not a subclass of dbSingleListener any more
- mSuspended added

Method	ctor
		- remove parameters and body, just init bool flags

Method	copy ctor
		- remove parameters and body, just copy bool flags

Method	clone
		- don't pass in the removed copy ctor params
		
Method	field
		- removed
		
Method	indexNo
		- removed (unused stupid routine)		
		
Method	sortNow
		- take a backend as a parameter, replacing mSorts						

Method	receiveMsg
		- removed, replacing three cases with methods:
			- backendSavedRecord(OOF_tableBackend*)
			- backendChangedContext(OOF_tableBackend*)
			- selectionChanged()

Method	operator!=
		- added to compare sorters, including subclassed dbFieldSorters
		
Method	suspendSorting
		- change to set mSuspended flag, not call suspendListening		
		
Method	resumeSorting
		- change to set mSuspended flag, not call resumeListening		
		

CLASS	dbFieldSorter
Method	ctor, copy ctor
		- remove params that were passed up to dbSorter
		
Method	sortNow
		- take a backend as a parameter, replacing mSorts		
		- set mSorting flag around the actual sort (this was an old bug)				

Method	clone
		- don't pass in the removed copy ctor params

		
CLASS	OOF_tableBackend
Method	table
		- added to return backend's mTable

Method	field
		- added to return dbField* according to number

Method	ContextChange
		- added pure virtual
				
		
CLASS	dbTable
Method	ContextChange
		- case requireExplicit call mBackend->ContextChange		
		
		
CLASS	OOF_simpleRecordBackend
Method	ContextChange
		- added to call the sorter's backendChangedContext
		
Method	CachingContextChange
		- call ContextChange first

Method	saveRecord
		- call backendSavedRecord on the sorter

Method	sortSelectionNow(const dbSorter* theSorter)
Method	SubSort(const dbSorter *theSorter		
		- use field() rather than dbSorter::field()
		

CLASS	OOF_recordSelectionRep
Method	changedSelection
		- added inline to update sorter state

Method	Append
		- call selectionChanged() for the someRecs case

Method	CopyContents
		- compare sorters to decide if need to call selectionChanged
		
Method	operator=
		- either copy the rhs sort order or retain our own and force resort, if 
		  rhs is unsorted						

Method	SelectAll
Method	SelectSome
		- call selectionChanged()
		
		
CLASS	OOF_Segment
Method	 operator !=
		- added
				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/05
FIX CIRCULAR SAVES
(related records being saved triggered dirty state on main, which saved all related records...)

CLASS	dbRelRefBase
Method	receiveMsg
		- case OOFmsg_SaveRecord now only saves if related record is also dirty
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/05
DUPLICATE FIELD TESTING

CLASS	dbChar
Method	valueIsDuplicate
		- added to call backend
		
		
CLASS	OOF_simpleRecordBackend
Method	checkDuplicate
		- added pure virtual
		
		
CLASS	OOF_simpleRecordBackend
Method	checkDuplicate
		- added to return false as default for non-indexed backends
		
		
CLASS	OOF_ctreeBackend
Method	checkDuplicate
		- added to test indexed fields (string only at present)



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/07
COPE BETTER WITH OPTIONAL RELATIONSHIPS

CLASS	dbTable
Method	copyRecFrom
		- rewrote so can cope if compatible schemas have virtual fields 
		   (relationships or calculated fields) inserted at different locations
		 - changed semantics of optional numFields param - now represents an
		    upper limit on the number of fields copied, rather than the minor
		    optimisation it was before (for use in copy loops)  
		   
Method	copyAllFrom
		- don't precalculate and pass numFields to copyRecFrom		   
		
Method	isCopyCompatibleWith
		- rewrote similarly to copyRecFrom		
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/07
IMPROVE HANDLING OF UNIQUE AND DEFAULT CALCULATED FIELDS

CLASS	dbField
Method	usingCalculator
		- added

Change accessor functions to test usingCalculator() instead of mCalculator
- dbBool::operator bool
- dbChar::operator const char*
- dbDate::operator unsigned long
- dbDateTime::operator unsigned long
- dbLong::operator long
- dbReal::operator double
- dbShort::operator short
- dbText::operator const char*
- dbTime::operator long
- dbUlong::operator unsigned long
- dbUshort::operator unsigned short



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/07
FIX BUGS IN DBASE AND STRING DISPLAY

CLASS	OOF_dbaseBackend
Method	LoadRecordAtOffset
		- take out the logic that puts temp null after numeric fields and put
		   after all types as dateTime and date were only read if the layout
		   fortituously had no numeric values following them.



CLASS	OOF_String
- sEmptyStr renamed to sEmptyChar
   (it's only valid when returning a char&, NOT for C strings!)

Method	emptyString
		- removed
		
		
Change all uses of the above empty string to use a constant "" (was stupid idea in first place!)
- dbField::asChars
- dbField::tableName
- dbText::operator const char*
- OOF_String::operator char *
- OOF_String::operator[]		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/09
CLEANUP - remove OIDfield concept

CLASS	dbTable
Method	setOIDField
		- removed


CLASS	OOF_tableBackend
- mOIDfield removed

Method	ctor, copy ctor
		- remove refs to mOIDfield
		
Method	setOIDField
		- removed
		
		
CLASS	OOF_ctreeBackend
Method	BuildIFIL
		- removed setting mOIDfield


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/09
FINISH DEFAULT CALCULATORS
	
CLASS	dbField
Method	CalculateWith
		- added central setter (same logic in all concrete fields)
		- check if calculator already exists - can't remove with a 0 calculator
		   unless it's just used for defaults
		- tell the backend if we are using a default calculator	

Method	saveDefaultCalculatedValue
		- added to test state and maybe save a default calculated value
		
Method	CopyCalculatedValueToBuffer
		- added dummy empty version
				
		
all concrete fields
Method	calculateWith
		- return the field type (eg: dbChar&) so can chain
		   blah.calculateWith().useCalculatorOnlyForDefaults()
		- remove the body, passing the parameters to dbField::CalculateWith

Method	CopyCalculatedValueToBuffer
		- added to provide (same for each) concrete value copying
		
		
CLASS	OOF_tableBackend
- mHasDefaultCalculators added

Method	ctor
		- init mHasDefaultCalculators(false)
		
Method	copy ctor
		- copy mHasDefaultCalculators
				
Method	fieldHasDefaultCalculator
		- added setter


CLASS	OOF_ctreeBackend
Method	SaveContext
		- move the mDirtyMap.reset up to OOF_simpleRecordBackend::saveRecord
		   (applies to all backends)
		 - if mHasDefaultCalculators loop all fields to save default valu es
		 
		 

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/09
FIX BUGS IN ADDING RECORDS AND SELECTING THEM
	
CLASS	OOF_ctreeBackend
Methdod	GotoRecordForAllIndexed		 
		- check for iter() == ULONG_MAX and start from beginning
		
CLASS	OOF_simpleRecordBackend
Method	recordNumber		
		- assert if == ULONG_MAX
		
		
		 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/10
ADD ABILITY TO GET A RECORD NUMBER BY 'SEARCHING'
CLASS	dbTable
Method	gotoRecord(queryClausse)
		- added simple forwarder


CLASS	OOF_tableBackend
Method	gotoRecord(queryClausse)
		- added pure virtual


CLASS	OOF_simpleRecordBackend
Method	gotoRecord(queryClausse)
		- added blank (for now)

CLASS	OOF_ctreeBackend
Method	gotoRecord(queryClausse)
		- added search logic (NOT YET IMPLEMENTED - JUST A DUMMY)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/10
FIX SOME CONTEXT BUGS WITH COMPLEX GUIS

CLASS	OOF_simpleRecordBackend
Method	selectAll
		- set internal iterator to 0 so recordNumber calls will get a reasonable
		   value instead of ULONG_MAX

Method	recordNumber
		- if is ULONG_MAX return 0.
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/10
FIX DATE-TIME PARSING
CLASS	dbDateTime
Method	istream2ymdhms
		- also check is.good() whilst searching input for numbers


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/11
FIX SEARCHES ON EMPTY TABLES, NOTICEABLE WITH DELETING RELATED RECORDS

CLASS	OOF_simpleRecordBackend
Method	Search*NonIndexed
		- check if selection empty at top


CLASS	OOF_recordSelection
Method	append		
		- instead of assert(oid)



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/14
FIX dBase IV MEMOS TO STANDARD
(found reference "Database File Formats")
CLASS	OOF_dbaseBackend
Method	WriteNewBlob
		- write FFFF0800 at start of block - suggested experimentally by Brad at
		   Mercator and verified as a fixed "reserved" value
		   
		   
Method	createTableInConnection
		- write filename and other bytes into new DBT header block

Method	WriteBuffer
		- write memo block number as zero filled, but just plain spaces if no
		   memo for this record		
		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/14
FIX DATE TIME MASKS
CLASS	dbDateTime
Method	extract
		- remove comments disabling use of ymd etc. 2stream(format mask,...
		
		
Method	getDateTime( struct tm& unixTime )
		- simplify overloaded getDateTime expression

Method	ulong2ymdhms
		- treat 0 number as special case - returning all zeroes, rather than
		   adding to base date, which has side-effects like people with no
		   birthday being shown as age 27				
		   
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/14
ADD USER-SET BUTTONS TO oofYNC
enum		msgTypeT
- added MB_USERBUTTONS		   

CLASS	oofYNC
Method	ctor
		- added ctor to take button names
		
Method	msgBox
		- extended to cope with MB_USERBUTTONS for visibility and titles
		- default returns are Yes, No, Cancel		



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/16
FIX BUG CAUSING PAGE SETUP CRASHES IN REPORTS, AND POSSIBLE OTHER CRASHES
(cloned col sizer pointed to original dbView, so if it was deleted - bus error!)

CLASS	OOF_mixColSizable
Method	copy ctor
		- pass this in to clone()


CLASS	oofColSizer
Method	clone
		- take OOF_mixColSizable* param for new owner		

CLASS	oofViewFieldDefaultsColSizer
Method	clone
		- take OOF_mixColSizable* param for new owner & use it to invoke ctor
		   instead of copy ctor	


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/18
FIX BUG IN DATES AND TIME INTERFACES

CLASS	dbDateTime
CLASS	dbDate
Method	setStr255
		- cope with empty string -> null time
		- convert Pascal string to C string before assigning


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/20
CASUAL DEBUGGING, LEAK FIXES
CLASS	OOF_ramBackend
Method	SaveContext
		- don't test if(mRamCache) just make assertion, as ctor always creates

Method	dtor
		- delete mRamCache		
		

CLASS	dbTable
Method	isCopyCompatibleWith	
Method	copyRecFrom
		- fix endless loop failing to advance field off virtual field


CLASS	OOF_ramBackend
Method	gotoRecord
		- when going directly to record for all recs, reset the selection iter
		   (manifested as could always press Prev on report window)
		   
		   
CLASS	dbDate
- tokenMap aggregate didn't match order of other two tables - entire row of Hour and Minute enums was out of synch
- removed eEOT, eNUM, eOTHER from end of tokenMap and adjusted NUMDATETOKENS
   (get_token was using these as indices into string table, and they go off the
    end of the table)

Method	setStr255
		- fix alloc error - not allocating extra char for null at end of string


CLASS	dbDateTime
- removed eEOT, eNUM, eOTHER from end of tokenMap and adjusted NUMDATETIMETOKENS

Method	setStr255
		- fix alloc error - not allocating extra char for null at end of string



CLASS	oofDirectory
Method	delDirectory
		- added *very* coarse version (Mac specific)

Method	closeWDDirectory
		- added (Mac specific)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/23
CASUAL DEBUGGING

CLASS	OOF_recordSelection
Method	selectOneRec
		- reset mInternalIter, don't just reset the state
		   (showed up as error when delete the 2nd rec in selection of 2)
		   
		   
CLASS	dbTable
Method	gotoRecord
		- take out optimisation that skips going to record if already there
		 (doesn't get updated data - need Ken's idea of object notification)		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/28
dBase IMPLEMENTING DELETED RECORD SKIPPING AND DEBUGGING

* OOF_List::member() failed to find a member that was on the end of the list

* dBase Backend caused an assertion if start() was called on an empty
  database (ie: one with no non-deleted records)

* Fixed memory leak in dBase Backend for mScanfFilter array.

Changes:

* Added mDeletedRecords member to dBase backend - it's an OOF_List now, but
  could do with being reclassified as an OOF_AVL

* Added member function to build the above list for a newly opened file

* Modified ctors to initialise and copy the above member - It's a shared
  memory member - added dtor for member.

* Modified start() and next() to skip over deleted records

* Modified countAll() to return the number of non-deleted records

* Modified deleteRecord() to update the deleted record list as well as fix
  the selected record after deletion - largely based on RAM backend
  behaviour

* Added code to create files with Mac type and creator information for
  dBase backend - Andy will need to finish this so that it has an API




-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/29
FIX VIEW COPYING

CLASS	dbView
Method	copy ctor
		- iterate headings to rhs.mHeadings.count(), not mHeadings.count() as
		   never copied any headings
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/29
FIX DATE-TIME IMPORTS

CLASS	dbTime
Method	skipTillDigitAmPmNewline
		- removed

		   
CLASS	dbDateTime
Method	skipTillDigitAmPmNewline
		- made into standalone function skipTillDigitAmPm which takes field and
		 rec sep chars like skipTillDigit

Method	istream2ymdhms
		- pass fieldSep and recSep into skipTillDigitAmPm
				   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/29
FIX RAM-BACKEND 'prev'

CLASS	OOF_ramBackend
Method	gotoRecord
		- if no deleted records, for allRecs state, set mCacheCursor. eg: if go
		   prev/next/prev in report window, was never decrementing mCacheCursor
		   to track mSelection.iter() hence went out of bounds
				   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/29
HACK SEQUENCE NUMBER
( to enable testing dbase)

CLASS	OOF_dbaseBackend
Method	sequenceNumber
		- just return countAll, until we have a catalog file
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/03/29
FIX RAM-BACKEND saving all connection

CLASS	dbConnect_ramp
Method	save		
		- reopen tables after close


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/02
SIMPLIFY DATE-TIME CLASSES

CLASS	dbDateTime
- enum dateTimeFieldOrder	removed
- sDefaultDateTimeOrder - removed, use dbDate::sDefaultDateOrder instead
- sBaseDateTime renamed as sBaseYear to reflect it's actual function

Method	operator++, operator--
		- added based on += and -+
		
Method	operator +=, operator -=
		- work in days rather than seconds, to have same behaviour as dbDate


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/06
TEMPORARY FIX FOR SHARED SELECTIONS - DON'T ADD NEW RECORD OIDS TO SELECTION

CLASS	OOF_recordSelection
Method	appendNewRecord
		- don't actually append the number we generate
		
Method	updateCurrent
		- append the new offset, and set the iter to point at it		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
VERSION 1.3b3 released  6th April 1997
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/07
FIX dbVIEW BUGS

CLASS	dbView
Method	ctor(dbRelRefBase*)
		- check for nil param


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/07
FIX kIndexNoDups BUGS (thanks to David Gimeno Gost)

CLASS	dbField
Method	allowsDuplicates		
		- removed as has same function as fieldIndexAllowsDups
		
Method	fieldIndexAllowsDups
		fieldIsUniqueIndexed
		- rewrote test to use bit operator so works for all dups types

Method	fieldIndexIsCompressLeading
		fieldIndexIsCompressPadding
		- rewrote test which was utterly wrong - a cut-and-paste job that had
		   not been edited to compare the correct constant				


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/07
FIX BUGS IN difference_with AND ITS CALLERS

CLASS	dbTable
Method	appendSelection		   
		- check first if in an allRecs state ourself
		- rhs in allRecs state, simple case of selectAll

Method	removeSelection		
		- check first if rhs is in allRecs state
		- add check if lhs in allRecs state - simpler subcase
		

CLASS	dbSelection
Method	difference_with(const dbSelection&)
		- remove assert ( rhs != allRecs)
		
CLASS	OOF_recordSelection
Method	difference_with		
		- remove assert ( rhs != allRecs)
		NOTE: still some asserts that lhs!=allRecs as current model can't handle
		 without some iterator over database to perform an invert()



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/09
REFINE TEMPORARY FIX FOR SHARED SELECTIONS (DON'T ADD NEW RECORDS TO SELECTION)

CLASS	OOF_tableBackend
Method	tableCachesDirtyRecords
		- added inline accessor for dbTable setting
		
		
CLASS	OOF_recordSelection
Method	appendNewRecord
		- pass in flag indicating if should append
		
Method	updateCurrent
		- undo the previous changes - now update in place again		


CLASS	OOF_ctreeBackend, OOF_ramBackend, OOF_dbaseBackend
Method	SaveContext
		- check tableCachesDirtyRecords and either call append or updateCurrent

Method	newRecord
		- pass tableCachesDirtyRecords() into appendNewRecord
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/10
ALLOW LOCKING CALLS WHEN IN SINGLE-USER MODE

CLASS	dbConnect_ctree
Method	enterWriteLocking, enterReadLocking
		- remove the alert if build mode was NOTFORCE 
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/10
UNLOADING RECORDS AND ITERATION THROUGH SELECTIONS

don't call unloadRecord in
- OOF_ctreeBackend::CompleteMoveToRecForAllRecs
- OOF_ctreeBackend::next
- OOF_ramBackend::next
- OOF_dbaseBackend::next


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/11
GUI ENABLE FIND BY TYPING IN BROWSERS

CLASS	dbSorter
Method	sortFieldNo
		- return the field no of the first field in the compound expression (was
		  just returning 0)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/16-18
CLEANUP TO COMPILE WINDOWS & UNIX
(partly suppress gcc warnings)

oof0.h
- also check for WIN32 as a Windows indicator

oofios.h
- #include oof0.h to set the preprocessor directives so we seek the correct streams includes
- #include unistd instead of stdio


CLASS	oofDirectory
add Windows cases for conditional handling of directory commands in methods:
gotoDirectory, dirFromPath, currentLocation


CLASS	OOF_dbaseBackend
Method	createTableInConnection		
		- use ftell instead of fgetpos


CLASS	dbTable
Method	copyRecFrom	
		- change some int declarations to fieldNumT
		
			
CLASS	dbDate
Method	ymd2Stream
		- add default case on switch to trap invalid masks being used

Method	ymdhms2ulong
		- change some shorts to unsigned shorts

CLASS	dbReal
Method	makeQueryLiteral(double)
		- added so can search on real values, not just have them translated to
		 long ints

CLASS	dbDateTime
Method	ymd2Stream
		- add default case on switch to trap invalid masks being used

Method	copyValueIfDifferent
		- change long to unsigned long for comparison with internal value


CLASS	dbChar, oofChar
Method	ctor(various)
		- change long param to unsigned long
				
				
CLASS	OOF_ctreeBackend
Method	copy ctor
		- reorder init list to match declaration order

Method	 GotoRecordForAllIndexed
		- change newOffset from LONG to unsigned long

Method	checkDuplicate								
		- change singleRec from LONG to unsigned long


CLASS	dbConnect_ramp
Method	ReadAllTables
		- added assert on result from fseek
		
Method	openTableInConnection
		- if fail to read number of tables, report error that file is empty		
		
Method	close
		- if fail to write number of tables, report error		
		
		
FILE		oof0.h
- add generic _Unix definition


CLASS	OOF_dbaseBackend
Method	createTableInConnection		
Method	openTableInConnection
		- use local const char* instead of passing mtable->tableName() into
		   sprintf as g++ doesn't like passing an OOF_String& into a ...
		   argument, prefers native type
		   
		   
CLASS	dbQueryClause
Method	clone
		- added pure virtual, and implementations in all concrete subclasses		   
		
CLASS	dbQueryBinary, dbQueryBinaryNoField & dbQueryTrinary
Method	copy ctor
		- change to take const& rhs
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/20
DEBUGGING DISPLAY OF RELATED RECORDS

CLASS	OOF_RelMN
- added dbRelMaintainer* mMaintainer

Method	makeRelMaintainer
		- added conditional factory, depending on if already have one


CLASS	dbRelMaintainer
Method	ctor
		- take a dbRelRefBase* param instead of a dbTable*						


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/21,23
ENABLE C-TREE OPTION TO IGNORE NULL INDEX ENTRIES

ENUM	OOF_IndexOptions
- added kIndexNoNulls, kIndexNoDupsNoNulls, kIndexCompressNoDupsNoNulls, kIndexCompressPaddingNoDupsNoNulls, kIndexCompressPaddingNoDupsNoNulls

CLASS	dbField
Method	fieldIndexAllowsDups
		- removed, replace with !fieldIsUniqueIndexed()
		
Method	fieldIndexIgnoresNulls
		- added		
		

CLASS	OOF_ctreeBackend
Method	CompleteIIDX		
		- check fieldIndexIgnoresNulls and set ix.inulkey
		
Method	countAll
		- added code to check if index ignores nulls, and call NbrKeyEntries
		 instead, so we see a total of only the number of items we would iterate
		 through in the current sort order (TEMP SOLUTION - CHECK WITH LIST)
		 		 
Method	SortIndexNo
		- check if sorting suspended

		
CLASS	dbSorter
Method	sortingSuspended
		- added
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/23
FIX C-TREE BACKEND - UNIQUE INDEXES FAILING TO FIND RECORDS ON EQUALITY SEARCH

CLASS	OOF_ctreeBackend
Method	searchEqual(const dbField* schField, const VOID* schAddress)			
		- fix failure to find dup records by enabling a BuildKey call that was
		  commented out when we used GetRecord. Now we are using GetKey it
		  doesn't do its own key transform.
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/24
INTEGRATE ELEMIR'S WINDOWS DIRECTORY FIXES

CLASS	oofDirectory
Method	setDirFromPath
		- handle multiple dir levels not existing for _Windows
		
Method	CreateSubdirectories
		- added for _Windows
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/25
IMPROVE recordNumberMatching

CLASS	OOF_ctreeBackend
Method	RecordNumberOfKey
		- added
		
Method	recordNumberMatching
		- use RecordNumberOfKey
		- handle comparative cases other than startsWith
		
		
CLASS	OOF_SimpleRecordBackend
Method	recordNumberMatching
		- added assert to catch attempts to use
						
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/26
INTEGRATE ELEMIR'S MACROS FOR WINDOWS DLL COMPILATION

oof0.h
- defined OOFILE_EXPORT, depending on OOFILE_CREATE_DLL or OOFILE_USE_DLL

Applied OOFILE_EXPORT prefix to most class and function definitions

CLASS	dbQueryBinaryCombo
Method	makeCompoundSearch
		- cast a 0xFF to a char to prevent warning
		
		
FILE		00f3.cpp
- suppressed warning that 'this' is used in init list, valid use and generates a lot of warnings.

		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/26
FIX BUG IN DELETING WITH RELATED SELECTIONS AFTER ADDING RECORDS
Bug manifests as err 4 from c-tree when trying to delete record - rec no in selection is still synthetic low number, after saving parent.
- found that OOF_RecordCacheCopier, when calling AdoptBuffer was replacing "current" record in backend with another's contents, but not updating the selection iter to match!

CLASS	OOF_simpleRecordBackend
Method	AdoptBuffer
		- add test to make sure selection's current offset is same as that we
		  adopt, or change selection iter to match, with assertion if adopting
		  offset is not in selection


CLASS	OOF_ctreeBackend
Method	EnsureOurContextMatchesISAM
		- add assert to catch use of synthetic rec no';
		
		
CLASS	OOF_Selection
Method	find
		- added pure virtual	
					
		
CLASS	OOF_RecordSelection
Method	find
		- added passthru		
		
CLASS	OOF_recordSelectionRep
Method	IsMember
		- moved body to Find, uses Find with dummy param

Method	Find		
		- added

		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/26
MINOR FIX FOR SERVER SUPPORT
David Gimeno Gost pointed out that the test in oofctre4 against NOTFORCE should be against CTBOUND to decide if we are in single-user or server mode.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
VERSION 1.3b4d4  released  27th April 1997
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/27
COMPATABILITY WITH CODEWARRIOR 12

enum		QueryCombinatorialOps
		- rename and, or to oofAND, oofOR

oofbool.h
- made the#undef false and true occur regardless of bool enabled. Some of the CW12 PowerPlant files seem to define these and having false #defined as 0 causes ambiguities with our bool queries.		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/28
RESTORE UNLOADING RECORDS AND ITERATION THROUGH SELECTIONS

restore calls to unloadRecord in
- OOF_ctreeBackend::CompleteMoveToRecForAllRecs
- OOF_ctreeBackend::next
- OOF_ramBackend::next
- OOF_dbaseBackend::next


CLASS	dbRelRefBase
Method	receiveMsg
		- also call OOF_tableBackend::unloadCache
		
CLASS	OOF_tableBackend
Method	unloadCache		
		- added pure virtual		


CLASS	OOF_simpleRecordBackend
Method	unloadCache		
		- added to delete the cache (logic that used to be in unloadRecord)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/30
FIX RAM BACKEND DELETE RECORD FOR ALL RECS

CLASS	OOF_ramBackend
Method	deleteRecord
		- if just deleted last of allRecs, set mCacheCursor=0


CLASS	all concrete backends, including OOF_ramBackend
Method	SaveContext
		- if saving new record and selection state is allRecs, set selection
		 iter to ULONG_MAX

CLASS	OOF_recordCache
Method	item
		- use the value() call on mBuffers 
		   - faster as it's const
		   - does range checking - doesn't auto-expand array
		
	
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/30
IMPROVE DATE-TIME CHECKING

CLASS	dbDateTime
Method	checkTime
		- accept 0 YMD as null date



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/04/30
ADD FIELD-LEVEL VALIDATION (JUST FOR DATES) - REMOVE REDUNDANT CHECKS & ALLOW CONSTRUCTION OF AN INVALID DATE 

CLASS	dbDate
Method	isEmpty
		- added to check that year etc. ==0		
		
Method	isValid
		- added to check that internal ulong != ULONG_MAX
		
Method	istream2ymd(both versions)
		- don't return bool, just set ymd=0 if fail to read
		
Method	str2Long
		- always set values		
		
Method	ymd2Long
		- don't output error message, just return ULONG_MAX				

Method	istream2month		
		- check for bad stream

Method	checkDate(const char*)
		- added this overload for easy external checking of strings
				

CLASS	dbDateTime
Method	isEmpty
		- added to check that year etc. ==0		
		
Method	isValid
		- added to check that internal ulong != ULONG_MAX

Method	ymdhms2ulong
		- remove warning if bad datetime & return ULONG_MAX
		
Method	ymdhms2stream
		- change message from INVALID to INVALID DATE-TIME

Method	checkTime(const char*)
		- added this overload for easy external checking of strings
				
		
CLASS	dbTime
Method	dhmsm2long		
		- remove warning if bad time & return ULONG_MAX

Method	istream2dhmsm
		- set all to 0 so if fail get null date

Method	long2dhmsm
		- remove warning



CLASS	OOF_MacString
Method	ctor
		- take Str255 instead of Str63

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d6 released to Liam to rewrite backend for shared records
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/05
FIX BUG IN DATE-TIME PARSING, HAS PROBLEMS WHEN IMPORT A FIELD/REC DELIMITED 

FUNCTION	skipTillDigitAmPm
		- change to behave like skipTillDigit - returns false for separator
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/06
FIX GUI LISTS SO TYPING KEYS DOESN'T CARE ABOUT TYPE OF DB OR INDEX FIELD
(mainly removing development assertions to catch cases in use in KIDMAP)

CLASS	OOF_ctreeBackend
Method	recordNumberMatching
		- if can't use index, call OOF_simpleRecordBackend version
		
CLASS	OOF_simpleRecordBackend
Method	recordNumberMatching		
		- remove assert, just return 0
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/06
SUPPORT CLICKING LIST TO GET RECORD NUMBER

CLASS	dbTable
Method	recordNumber(const dbQueryClause& qClause)		
		- added simple forwarder like ...(const dbQueryClause*)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/07
MINOR BUGFIXES

CLASS	OOF_ctreeBackend
Method	RecordNumberOfKey		
		- subtract 1 from NbrOfKeys call, want 0-based offset NOT count

Method	CompleteMoveToRecForAllRecs
		- when move off end of selection, set mCurrLoadedRecOffset = 0
				

CLASS	OOF_recordSelection
Method	deleteItem		
		- pass in the index param to mRep->DeleteItem. Was copy-and-paste bug
		  from deleteCurrent, where we pass in mInternalIter
		  

CLASS	OOF_FieldSegOwner
Method	fieldNumber
		- renamed to fieldNumberOfSegment to reduce ambiguities
		

CLASS	OOF_String
Method	operator+=(char)
		- rewrote to be more efficient and allow null chars to be appended,
		 don't just pass a string into operator+=(const char*)
		 
		 
		OOF_simpleRecordBackend::sortSelectionNow(fieldNumT sortFieldNo)
		sortSelectionNow(const dbSorter* theSorter)
		comment out warnings for undefined sorts 


		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/07
ADD COLUMN ALIGNMENT SETTINGS

CLASS	oofColSizer
- added enum colAlignT { alignLeft, alignCentre, alignRight, alignJust,
   alignNatural }
- added mColAlignments

Method	ctor
		- init mColAlignments with alignNatural as default field value
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/07
MINOR BUGFIXES

CLASS	dbDateTime
Method	ymdhms2ulong
		- cope with null dates
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d7 put on CW12 as demo
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/09-11
LOCKING & EXCEPTIONS

CLASSES ADDED
- oofE_Base
- oofE_Table (does all the work)
- oofE_RecordLocked
- oofE_DuplicateRecord
- oofE_CtreeError
- stLockRecord
- oofE_Connection
- oofE_CtreeConnectionError


CLASS	dbTable
- mLockedCurrentRecord added
- made oofE_Table a friend

Method	lockRecord, unlockRecord
		- added simple forwarders that set mLockedCurrentRecord
		

CLASS	OOF_tableBackend
Method	lockRecord, unlockRecord
		- added pure virtual
		

CLASS	OOF_SimpleRecordBackend
Method	lockRecord, unlockRecord
		- added empty methods
		

CLASS	OOF_ctreeBackend
Method	SaveContext
		- throw a oofE_DuplicateRecord
		- remove old enterWriteLocking, exitLocking calls
		- if not locking record, unlock the auto-lock immediately after
		   AddRecord (later will depend on locking model)

Method	lockRecord, unlockRecord
		- added calls to ctree locking
		
		
MACRO	WITH_LOCK_WAIT
		- conditionally define based on OOF_UsingExecptions as nothing				
		
MACRO	END_LOCK_WAIT
		- conditionally define based on OOF_UsingExecptions to throw an
		  oofE_RecordLocked, or oofE_CtreeError		



throw exceptions instead of calling raise in :
- dbConnect_ctree::activateConnection
- dbConnect_ctree::close
- dbConnect_ctree::CreateMySpecialTables
- dbConnect_ctree::FinishNewConnection


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/13
DEBUGGING LOCKING

CLASS	dbTable
Method	newRecord
		- set mLockedCurrentRecord - is presumed locked until explicitly unlock
		
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/13
FIX BUG IN ADDING/DISPLAYING RECORDS

CLASS	OOF_ctreeBackend
Method	GotoRecordForAllIndexed
		- for trivial jumps like 0, 1 or -1 check that we haven't already set
		 startFromFirstKey (we don't know our state)


		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/14
FIX BUG IN KIDMAP "OUTCOMES" SCREEN - FAILING TO COPY A FIELD
(found sometimes mCurrentLink pointing at popup, not expected editfield)

CLASS	dbEditHelper
Method	maybeDirty
		- *always* set mCurrentLink, not just when 0
		
Method	LeaveRecord
		- only clear mCurrentLink if actually leaving, so know where we are if
		  user fails form validation	
		  	
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/14
DELETING LINK RECORDS
CLASS	OOF_RelMN
Method	removeSelection		  
		- add body (finally!) to remove link records by intersecting sets


OOF_dbaseBackend::LoadRecordAtOffset
- trim extra trailing space on char fields
- add hack for CRLF conversion to CR on Mac
		  	
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/15
VISUAL C++ COMPATABILITY & GENERAL CLEANUP
FILE		oof0.h
		- add test for Visual C++ to define OOF_EXCEPTIONS AVAILABLE
		
FILE		oofbool.h	
		- only undef false and true if not Visual C++ as it uses yvals.h which
		  is includes their defs		
		
CLASS	dbField
Method	ctor(FieldIsStandaloneT)
		- remove dbField:: from enum in declaration - VC5 chokes on it.		


Prefix all oofE_ classes with OOFILE_EXPORT macros

In all uses of single-parameter, inline temporary exception object, change from
				throw(oofE_DuplicateRecord(mTable));				
to
				oofE_DuplicateRecord stupidMS(mTable);
				throw(stupidMS); 

Visual C++ 4.2 gave bogus compiler errors with the temporary in the throw() statement.


CLASS	dbTable
Method	recordNumber(all)
		- made non-virtual, as these are all inline forwarders
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/15
FIX BUG IN COLUMN SIZING
reports copy column sizers and they weren't being copied

CLASS	oofViewFieldDefaultsColSizer
Method	copy ctor
		- added special variant that lets us specify the dbView
		
Method	clone
		- invoke the new copy ctor, not the normal ctor		
	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/15
SORTING SELECTION WITH COMPOUND FIELDS

CLASS	OOF_simpleRecordBackend
Method	sortSelectionNow(dbSorter*)
Method	sortSelectionNow(fieldNumT)
		- add case for compoundField that creates temporary compound sorter
		
		
CLASS	dbSorter
Method	copy ctor
		- add extra copy ctor that takes an OOF_FieldSorter (the parent class)		
		

	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/16
FIX BUGS IN LOCKING IF NEW RECORD

CLASS	OOF_ctreeBackend
Method	lockRecord
		- only call ctree locking if record loaded, NOT for new records
		
Method	unlockRecord	
		- only call ctree locking if have current rec offset & !new. This copes
		   with unloaded records which still have a valid rec offset	

Method	unloadRecord
		- remove call to resetLocks (isn't doing anything to unlock ISAM whilst
		   we are using LockCtData so skip the overhead)

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/16
ENSURE SORTS TRIGGERED
(after some searches, depending on what we are doing, sorting not triggered)

CLASS	dbSorter
Method	selectionChanged
		- don't check mSuspended - even if we are suspended we should still set
		  the flag to force a sort later

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/18
CORRECTLY TRIM dBase FIELDS OF LAST SPACE CHAR (empty fields)

CLASS	OOF_dbaseBackend
METHOD	LoadRecordAtOffset
		- change loop to handle last single char of one space
		
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/18
WINDOWS COMPATABILITY

CLASS	oofTextSizer
Method	CalculateWrapping
		- add James' #ifdef code for Windows measurement
		
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/18
UNIX (AND NO EXCEPTION) COMPATABILITY

CLASS	stLockRecord
- surrounded declaration and definition with #ifdef OOF_USING_EXCEPTIONS


wrap code in #ifdef OOF_USING_EXCEPTIONS  in:
- OOF_ctreeBackend::lockRecord
- OOF_ctreeBackend::unlockRecord
- OOF_ctreeBackend::SaveContext
		
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/21
WINDOWS COMPATABILITY

FILE	oofbool
- add case for Borland to define bool

FILE oof0
- add case for Borland same as VC for _CPPUNWIND to say we have exceptions

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/24
UNIX COMPATABILITY

CLASS	oofDirectory
Method	setDirFromPath
		- add case for Unix, strips filename off end and assigns mPath
		
Method	gotoDirectory
		- add case for Unix, using chdir


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/28
FIX BUG PREVENTING MULTIPLE OPENS IF ctNoGlobals NOT DEFINED
CLASS	dbConnect_ctree
Method	close
		- decrement sConnectionsOpened


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/29
FIX BUG WITH dBase IV MEMOS AND CRLF TRANSLATION

CLASS	OOF_dbaseBackend
Method	LoadRecordAtOffset
		- don't expect a 1A at end of blob
		- write a null to end of blob, not 1A
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/05/31
FIX BUG WITH SEQUENCE NUMBER ON FIRST ADDING RECORD TO DATABASE

CLASS	OOF_ctreeBackend
Method	sequenceNumber
		- remove assertion - contrary to documentation 0 is a valid return value
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/01-02
ENABLE CONVERSION OF DOS DBASE ON READ/WRITE WITH MAC

CLASS	OOF_String
Method	makeMacString
		makeUnixString
		makeDOSString
		- added to convert content of string to CR, LF or CRLF
		
Method	replaceChar
		- pass in optional startAt position
		

CLASS	OOF_dbaseBackend
Method	LoadRecordAtOffset		
		- use new OOF_String converters to convert line endings to CRLF
		  
Method	WriteNewBlob
		- take const char* buffer, not dbBlob*
		- only skip 8 bytes length, and don't write ANY terminator
		
Method	SaveBlob
		- use new OOF_String converters to convert line endings to CRLF
		- pass a converted buffer to WriteNewBlob
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/02
STOP TESTING INTERFERING WITH PRODUCTION

Moved the TEST_CONNECT and other definitions out from oofile.h to a separate ooftest.h which is then included instead in all the ooftst programs.

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/03
FIX BUGS WITH UNLOCKING - ALLOW UNLOCK IF NOT LOCKED

CLASS	OOF_ctreeBackend
Method	unlockRecord
		- check for not locked error and don't throw
		- move if() outside the #ifdef OOF_USING_EXCEPTIONS


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/04
WINDOWS COMPATABILITY
FILE		oof0.h
		#define STRICT
		(major problems if some files have defined and others don't, and some
		 Windows headers define STRICT)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/05
FIX BUG WITH MN RELATIONSHIPS IF ALSO DIRECTLY USE THE INTERMEDIATE FILE

CLASS	dbRelRefBase
Method	completeCloneOfInverse(dbTable*)
		- also set the inverse field to point at us and our table.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/06
FIX BUG WITH LOOPED SAVE OF CACHED RECORDS NOT INVOKING USER VIRTUAL saveRecord

CLASS	dbTable
- mInSaveLoop added

Method	ctor(all) & copy ctor
		- init mInSaveLoop(false)
		
Method	saveRecord
		- invoke SaveLoop depending on state
		
Method	SaveLoop
		- added to loop calling virtual saveRecord				


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/12
FIX MINOR BUGS WITH DIFFERENT CONFIGURATIONS & INTEGRATE MERCATOR MODS

CLASS	dbConnect_ctree
Method	close
		- only decrement sConnectionsOpened #ifndef ctNOGLOBALS, as we want this
		   number to continually ascend when we register new connections
		   

CLASS	oofDirectory
Method	delDirectory		   
		- take deleteParent flag
		

CLASS	dbRelRefBase
Method	completeCloneOfInverse(dbTable*		
		- remove assertion preventing us relating to a field which already has
		 an inverse (Mercator are using a 5-1 relationship in one case)


FILE		oof0.h
- add Elemir's new OOF* macros for DLL vs Library


CLASS	OOF_String
Method	lineEndingsMac
		- fixed loop converting from CRLF


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/12
FIX BUGS CAUSING ERR 42 WITH IMPORTING THOUSANDS OF RECORDS (WITH BLOBS)

CLASS	OOF_ctreeBackend
Method	SaveBlob
		- unlock the blob after WriteVNew
		
Method	SaveContext
		- set mCurrLoadedRecOffset before attempt to use it to unlock!
				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/21
FIX BUG WITH FPUTFGET CONFIG UNDER DOS (Robert Leftwich)

CLASS	dbConnect_ctree
Method	SetupConnection
		- remove incorrect mConnection in error message
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/22
CLEANUP COMPOUND INDICES
CLASS	OOF_ctreeBackend
Method	BuildIFIL
		- enable the logic that marks a compound index as usable for single
		 searches (on the 1st key in the index)
		 - change the original version to copy the keylen and index type, not
		  hardcode to kIndexNoDups


CLASS	OOF_ctreeIndexDictionary
Method	indexStartingWithField
		- return the compound field as well as the ctree index no
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/23-25
WINDOWS COMPATABILITY

FILE	oobool.h
		- suppress warnings about bool with #	pragma warning(disable: 4237)

GLOBAL REPLACE
- OOF_MUST_FLIP_TO_MS_BYTE_ORDER renamed to OOF_INTEL_BYTE_ORDER

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/06/25
FIX BUG IN STRING CONVERSIONS

CLASS	OOF_String
Method	lineEndingsDOS
		- fix off-by-one error when inserting LF's
		
Method	lineEndingsMac
		- cope with near-empty lines		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/07/17, 27
ODBC COMPLIANCE

CLASS	OOF_ctreeTableBackend
Method	BuildDODA
		- change leading 2 bytes filler type from CT_CHAR to CT_ARRAY
		- use OOF_DummyString to create persistent dummy names suitable for
		   c-tree DODA's use of pointers

CLASS	OOF_DummyString
- added subclass of OOF_String to auto-generate a sequence of strings


CLASS	OOF_DummyStorage
- added to support OOF_DummyString with cache of reusable names, so our dummy names are only generated once no matter how many dbTables created



		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/07/27
BETTER TEST DATA GENERATION


CLASS	OOF_CheckString
- added to generate strings such as "one four zero zero" for cheque printing & test data (end up with nicely non-monotonic strings from ascending ints)


CLASS	OOF_String
Method	makeRandomChars
		- added to generate totally random set of printable characters
		

CLASS	dbChar, dbText
Method	setString(const OOF_String&)
		- added for efficiency
		
		
CLASS	dbTable
Method	generateTestData
		- change params to take bool generateRandom and unsigned long seed
		- init random seed if specified


CLASS	dbConnect
Method	generateTestData
		- change params to take bool generateRandom and unsigned long seed


CLASS	dbField & descendants
Method	generateTestData
		- change params to take bool generateRandom and unsigned long seed
		- totally rewrite to use random data or convert long


CLASS	dbDateTime
Method	ymdhms2ulong
		- make hms params default to 0

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/07/17, 27
BETTER TEST DATA GENERATION

CLASS	OOF_ctreeBackend
Method	recordNumberMatching
		- change case for != to use LT search first (was bug - GTE first twice!)
		- handle partial matches with startsWith
		- check the selection status and use the index value retrieved
		   appropriately (was behaving as if always allRecs)
		   
		   
CLASS	dbField
Method	valueIsLT, valueIsLTE, valueIsEQ, valueIsNE, valueIsGT, valueIsGTE
		   
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/03
FIX DBASE & OTHER BYTE-FLIPPING BUGS


When MUST_FLIP_TO_INTEL_ORDER was renamed to OOF_INTEL_BYTE_ORDER, the sense of the flag was reversed but none of the #ifdef'd code in the dBase backend was reversed to match. All uses of OOF_INTEL_BYTE_ORDER have now been checked and most reversed.

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/11
VISUAL C++ V5 COMPATABILITY
to suppress warning about converting to true or false, use explicit expressions (numresult)!=0)
- dbField::fieldIndexIgnoresNulls
- dbField::fieldIndexIsCompressLeading
- dbField::fieldIndexIsCompressPadding
- dbField::caseSensitive
- dbField::fieldIsUniqueIndexed
- dbBool::operator bool
- oofWordParser::more

Add OOFILE_EXPORT to all dbCalculator concrete class declarations


FILE oofmsg.h
- added definitions:
typedef DWORD MessageT;
typedef __int32 Int32;
typedef __int16 Uint16;


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/19
MAKE WARNING-FREE WITH CODEWARRIOR 1.9.1 COMPILERS & VISUAL C++

FILE		oof1.h
- add OOFILE_EXPORT to the forward declaration of OOF_DummyStorage



CLASS	dbTable
Method	selectJustOID
		- add an assertion on the oid - can't be zero
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/20
COMPILE UNDER SOLARIS g++
Makefile
- don't need memmove
- don't need -ldl (dynamic linking libs)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/20
FIX OCCASIONAL ERR 4 (KDEL_ERR) WITH C-TREE DELETES & ADDS
Problem is race condition
- another clone of table sets current record to X
- when loading a record, we check if current record is X and don't bother calling ReReadRecord
- our Save or Delete has the wrong info in the buffer therefore can't find old keys to delete


CLASS	OOF_ctreeBackend
Method	EnsureOurContextMatchesISAM
		- remove the call to CurrentFileOffset - always call SetISAMtoContext
		
Method	SetISAMtoContext
		- if offset doesn't match file, call SetRecord
		- always ReReadRecord instead of just exiting if offset matches file
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/22
ADD USER-DEFINED ERROR REPORTING


CLASS	oofErrorReporter
- added default class that uses Singleton pattern to manage a sole instance of reporter


CLASS	oofCGIErrorReporter
- added sample subclass


CLASS	dbConnect
- added mErrorReporter

Method	raise(allversions)
		- move guts to oofErrorReporter

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/25
FIX BUG IN REUSE OF COMPOUND KEYS

CLASS	OOF_ctreeBackend
Method	BuildIFIL
		- don't reuse compound indices
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/08/25
ODBC COMPATABILITY

CLASS	OOF_ctreeBackend
Method	BuildDODA
		- use CT_FSTRING for dummies, not CT_ARRAY, as the latter is disliked by
		   ODBC and causes utter failure to access the file.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/01
FIX REPORT WRAPPING BUGS
CLASS	oofTextSizer
Method	CalculateWrapping
		- set null values for empty input string, don't leave arrays unitialised
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/02
CLONING AND DELETING RECORDS

GENERAL RENAME
postCloneCleanup to postCloneTableCleanup

CLASS	dbTable
Method	postCloneRecordCleanup
		- added virtual to iterate all relationship fields and clear them
		
Method	cloneRecord
		- call postCloneRecordCleanup
		

Added clear() method to
- dbField (default empty)
- dbText
-  dbChar
-  dbNumericField

Added setNumber(int) method to
- dbField (default empty)
- dbText
- dbChar
- dbLong
- dbUlong
- dbShort
- dbUshort
- dbReal
- dbDate
- dbDateTime

Moved inline virtual setString(const char*) into non-inline
- dbDateTime
- dbChar
- dbText
- dbFixedBinary


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/08
CHANGE SHIELDING

Conditionally on OOF_DISALLOW_CHANGE_SHIELDING not being defined


CLASS	dbTable
- mChangeShielded added

Method	ctor
		- init mChangeShielded(false)
		
Method	copy ctor(both)
		- copy mChangeShielded		
		
Method	markDirty
		- return if mChangeShielded set, without propagating dirtiness
		
Method	changeShielded
		- added setter and getter		
		

CLASS	stChangeShielded
		- added		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/16-23
INTEGRATION OF NEW STREAMS

FILE		oofios.h
- test and define OOF_USE_NEW_STREAMS

CLASS	OOF_String
- defined typedef oofString more in keeping with other public classes
- made class OOF_MacString just a typedef, moving its ctor into OOF_String

Method	setStr255, getStr255, operator=Str255, operatorStr255
		- conditionally added Mac Str255 type setters & getters

Method	operator string, operator=(const string&)
		- conditionally added for ANSI strings
				

CLASS	dbField, dbChar, dbText
Method	copyAsChars
		- renamed to copyString
		- return oofString, not just char*



oofErrorReporter::raise
		- cope with new streams, don't use freeze
		
dbField::getChars
		- cope with new streams, can't use passed-in buffer
		- use pcount for the old streams, don't have to call strlen


use copyString, not old copyAsChars
- dbDate::asStr255
- dbDateTime::asStr255
- dbRep::extract
- dbRepChar::drawColumnar
- dbRepChar::drawPageWise
- dbRepHTML::drawColumnar
- dbRepHTML::drawPageWise
- dbRepHTMLTable::drawColumnar
- dbRepHTMLTable::drawPageWise
- OOF_simpleRecordBackend::SearchEqualNonIndexedWildcard
- OOF_simpleRecordBackend::SearchNotEqualNonIndexedWildcard
- OOF_simpleRecordBackend::searchSelContainsAllOf
- OOF_simpleRecordBackend::searchSelContainsAnyOf
- OOF_simpleRecordBackend::SubSort

GLOBAL REPLACE
use stringstream not ostringstream in all local situations where need to get the buffer, ie: dbconnect::raise()  & OOF_DEBUG_LOG calls,
- dbField::copyString


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/25
FIX SELECTION BUG - NOT SETTING CORRECT RECORD 

CLASS	OOF_simpleRecordBackend
Method	setSelection
		- gotoRecord after setting the selection, so we are at the current
		  record that we think we're at!

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/25
FIX DBVIEW BUG - NOT CORRECTING FIELDS IF CLONE TABLE (DEFAULT) 

CLASS	dbView
Method	copy ctor
		- loop through all fields, storing pointers to the fields in the newly
		 cloned table (bug was that the fields pointed to the old table, so as
		 it iterated the new table the view showed only the old one - the same
		 record each time
		 

CLASS	dbField
Method	fieldFromBaseTable
		- renamed to more meaningful equivalentFieldFromTable		 
		
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/25
ADD ASSERTS TO PREVENT BUGS LIKE RECENT REPORT BUG

CLASS	dbReceiver, dbSingleListener:
Method	subscribeTo
		- assert the input broadcaster
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/25-26
FIX USE OF STREAMS THROUGHOUT
centralise the stream conversion logic in OOF_String

CLASS	OOF_String
Method	ctor(ostream&
		- added to contain the logic previously existing in multiple copied
		
Method	ctor(stringstream&)
		- added conditionally for ANSI streams only

Method	FinishConstruction(char*, long)
		- added to contain subset of initialisation
		
Method	ctor(const char*), ctor(const char*, long), ctor(string), ctor(Str255)
		- use FinishConstruction				

Use OOF_STRING for stream conversion
- oofErrorReporter::raise(ostream&...
- dbField::copyString
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/29
FIX PROBLEMS WITH AUTO-INVOKING OF TEMPLATED OPERATORS

PROBLEM
An expression with dbUshort's like
PS->searchSelection( PS->L_ID <= mSelectedOutcomes->L_ID );

seems to invoke the following from utility.h
template <class T>
inline bool
operator<= (const T& x, const T& y)
{
    return ! (y < x);
}

The workaround for now is to encourage people to use value() on the RHS of such expressions. The apparent problem is that CodeWarrior doesn't support namespaces in the CW12 release.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/09/30
BUG IN SET SELECTION IF SAVED SELECTION AFTER ITERATED OFF END

CLASS	OOF_simpleRecordBackend
Method	setSelection
		- when setting the record number, if it's iterated after the last record
		  just start()
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/08
BUG IN DELETION OF TABLE IF NEVER OPEN/CREATE DATABASE


CLASS	OOF_SimpleRecordBackend
Method	dtor
		- check if mFieldBufMapRefCount is nil before dereferencing
		

CLASS	OOF_ctreeBackend
Method	dtor
		- check if mFieldCtreeMapRefCount is nil before dereferencing


CLASS	dbTable
Method	ctor
		- if no connection, set mConnection to 0
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/11
FINAL RELEASE TESTING - DIRE BUG FIXES

CLASS	OOF_String
Method	ctor(ostream&
		- didn't null vars so empty stream caused bad string
		- subtract 1 from pcount() so we don't include the null in the length
		
		
CLASS	dbField
Method	index
		- remove assertion that prevents you changing the existing index type.
		   It is perfectly valid for a subclass of a table to have a different
		   index type on a parent's field(eg: allow duplicates)		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d11 public release
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/13
FIX DATE IMPORT BUG

CLASS	dbDateTime
Method	istream2ymdhms
		- remove the default arguments

Method	insert
		checkTime
		str2ulong
		str2ymdhms
		- pass in dbDate::sDefaultDateOrder as param rather than leaving to
		  default. ANSI standard has changed binding of global variables in
		  default arguments from ARM standard of compile-time checking.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/21
CODEWARRIOR 13 (PRO 2) COMPATABILITY

CLASS	oofGraphWindow
Method	RegisterClasses
		- conditionally rename the creator funcs - they dropped the 'Stream'
		 suffix and LPlaceHolder doesn't need one.


CLASS	oofRepWindow
Method	RegisterClasses
		- conditionally rename the creator funcs - they dropped the 'Stream'
		 suffix and LStdControl subclasses don't appear to need one.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/23
FIX DATE IMPORT BUG

CLASS	dbDateTime
Method	ymdhms2stream(year, month, day,  hour,  minute,  second, ostream&)
		- check dbDate::sDefaultDateOrder (was just always dmy)
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/29
CODEWARRIOR 13 (PRO 2) COMPATABILITY

FILE		oofios.h
- check if __MWERKS__ > 0x2000 as namespace std still not implemented in CW Pro2


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/10/29
VISUAL C++ COMPATABILITY & CODE SIMPLIFICATION

FILE		oo0.h
- check if _MSC_VER >= 1100 as ANSI streams not available in earlier compilers
  (mistakenly thought 4.0 onward was OK)

FILE		oobool.h
- check if _MSC_VER >= 1100 for yvals.h used to define bool constants
  
  
Moved classes out into oofstr.h/cpp and oofarray.h/cpp  so people can use these utilities without the rest of OOFILE.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/11/10
MINOR CLEANUPS FOR CODEWARRIOR PRO 2 COMPATABILITY

FILE		oofios.h
- don't use namespace std for compiler ver 0x2000 as MSL not yet compliant - namespaces are supported but std not yet defined. Check MSIPL_USING_NAMESPACE


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/11/12
SORTING BUG FIXES - SORT COMPOUNDS FOR NON-INDEXED SELECTIONS

CLASS	OOF_SimpleRecordBackend
Method	SortSelectionInverseNow(const dbField*, unsigned long 
		SortSelectionNow(const dbField*, unsigned long 
		- added to sort arbitrary binary contents

Method	sortSelectionInverseNow(fieldNumT
		- cope with compound and fixed binary fields of >3 bytes		
		
		
Method	sortSelectionNow(fieldNumT
		- cope with fixed binary fields of >3 bytes,
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/11/12
MINOR FIXES AND CODE MERGE

CLASS	dbNumericField
Method	CheckRange(all params
		- rename params min,max to minL, maxL to avoid clashes with Visual C++
		   macros in standard headers


CLASS	OOF_ramBackend
Method	gotoRecord
		- copy fix from Elemir, return true for allRecs case


CLASS	oofViewFieldDefaultsColSizer
- mark as OOFILE_EXPORT



CLASS	dbBroadcaster
Method	broadcast, askAllStoppingAtFirst & askAllReturningAny
		- change dbReceiver* skipping to const dbReceiver*
		
		
where we use members or functions as loop terminators, and there is no chance of change, copy into local constant
- dbTable::postCloneTableCleanup
- dbTable::insert
- dbTable::postCloneRecordCleanup
- OOF_ExpandableLongArray::contains
- OOF_ExpandableLongArray::find
- OOF_ExpandableLongArray::countOccurrences
- OOF_ExpandableLongArray::ExpandToInclude

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/11/23
MERGE ELEMIR'S CODE, COMPILE UNDER CW PRO2 & VC4.1

FILE		oof0.h
- check for Visual C++ 4.2 or higher to default to ANSI streams


FILE		oofbool.h
- check for Visual C++ 4.2 or higher has bool, change test so copes for 4.1


CLASS	OOF_DummyString
- moved out of oofstr.h into oof2.h so we can use oofstr.cpp without needing oofarray.cpp and also without having to include oofarray.h in oofstr.h. The 4.1 compiler required OOF_DummyStorage to be externally visible due to being a static in an exported class, to compile a DLL.



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/11/26
CHANGE FIELD WIDTHS TO MATCH OPENED FILE

CLASS	OOF_dbaseBackend
Method	openTableInConnection
		- make the warning about more fields in file than schema just a warning,
		  not a crash, and wrap in OOF_Debug
		 - improved warning using raise() for unknown type
		 - changed mismatched type warnings to say what expected
		 - for dbChar types, change width if necessary
		 - if change any widths, recalc schema
		 - can add fields if necessary

Method	BuildBackendtables
		- add rebuilding param, and be able to recalc without allocation		  
		  
CLASS	dbChar
- made OOF_dbaseBackend a friend so it can directly set the length
		  

CLASS	dbTable
Method	openTableInConnection
		-  set sCurrentlyConstructing so fields added by backend point to
		    current table
							

CLASS	OOF_ctreeBackend
Method	buildSchema
		- add param, but don't yet support rebuild
		
		
CLASS	OOF_simpleRecordBackend
Method	buildSchema		
		- moved here from ram & dbase identical methods
		- made virtual
		- delete mBuffer
		
Method	BuildBackendTables
		- added pure virtual
				


CLASS	OOF_dirtyFieldMap
Method	finishMap
		- delete existing map
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/03
SIMPLIFY USING INTERSECTION AND ASSIGNMENT OPERATIONS
make it easier to assign from a relationship ref to a table pointer

FILE		oofmacro.h
- add an operator db& to REF_BODY so rel ref will cast directly to dbUserTable&

CLASS	dbView
Method	ctor(dbView...
		- take optional second param, default false, to avoid ambiguities from
		   above change to relationship casting to tables


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/03
FIX BUGS WHERE TABLES NOT FORCED TO BE VALID WHEN GETTING SELECTION OR USING
SET OPERATIONS

IF USE RELATED TABLES WITHOUT AN EXPLICIT start() CALL
eg: loop expressions like:
		dbD* strandsOfLAEssentials = mData->D->cloneWithoutSelection();
		dbS* essentials = mData->Q->Essentials;	
		for (essentials->start(); essentials->more(); essentials->next()) {
			strandsOfLAEssentials->union_with(essentials->Strands);
		}


CLASS	dbTable
Method	difference_with, union_with, intersection_with
		- make rhs valid also
		
change param to non-const
	operator-=
	operator%=
	operator&=
	operator+=
	operator|=
	difference_with
	union_with
	intersection_with

Method	currentSelection		
		- conditionally call MakeTableValid, as often people use this without
		   first accessing a field, or  method that would guarantee validity
		- made non-const
		
CLASS	dbSelection
change param to non-const
	difference_with
	union_with
	intersection_with
		

CLASS	dbRelRefBase
Method	CountAllRelatedIn		
		- change param to remove constness - calls dbTable methods above


FILE		oofmacro.h
- change all macros that front the dbTable methods above to remove constness

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/03
ENABLE SHARED MAC/WIN FILES (C-TREE PLUS 6.7A2)

CLASS	OOF_ctreeBackend
Method	SetupConnection
		- don't create ooflock.dat
		Note: requires c-tree Plus 6.7a2 or higher, or use the "alternate
		locking strategy" documented in earlier manuals, involving minor c-tree
		source change


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/07
MINOR FIXES

CLASS	OOF_String
Method	operator==(const char*), operator!=(const char*)
		- added these variants to save construction of temporary OOF_String rhs
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/11
AVOID COMPILER WARNINGS - VISUAL C++ V4

file		oofbool.h
- include oof0.h so the platform definitions are picked up and the Visual C++ 4.1 warning for us redefining 'bool' is turned off. (They reserve the word, but don't implement 'bool' yet!)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d13 public release
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/30
FIX BUGS IN REPORTS & HIERARCHY TREES IF EMPTY FIELDS

CLASS	OOF_String
Method	orphan
		- if string is empty, makes a pointer to a null string rather than
		   returning mBody which is 0. Programmers can now safely assume that
		   orphan() always returns a non-nil pointer. Has param which can be
		   passed false to give the old behaviour. (OOPS fixed embarrassing
		    nested if bug later)

Method	adopt(OOF_String&)
		- pass in false to orphan so doesn't waste time with the above
		
				   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/30
INTEGRATE ELEMIR'S CHANGES TO ALLOW STATIC COMPILATION OF MFC APPS

FILE		oof0.h
- add test for OOFMFC_STATIC

		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
97/12/31
INTEGRATE SCOTT BERTIN'S CHANGES FOR 16-BIT WINDOWS

FILE		ooffiles.cpp
- added functions SetCurrentDirectory, GetCurrentDirectory & CreateDirectory

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d16 public release
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/01/04
CHANGES FOR OOFILE POWERPLANT COMPATABILITY KIT
FILE		oof0.h
		- removed platform definition code -> oofplat.h
		
FILE		oofbool.h
		- include oofplat.h rather than oof0.h
				
change #ifdef _Macintosh to also check OOF_PP2MFC
- OOF_String::OOF_String(const Str255)
- OOF_String::setStr255(const Str255& s);
- OOF_String::OOF_String& operator=(const Str255&);
- OOF_String::getStr255(Str255 s) const;
- typedef OOF_String OOF_MacString;
	
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/01/06
dBase SEQUENCE NUMBER

CLASS	OOF_dbaseBackend
Method	sequenceNumber
		- use mNumRecords as until we have deleted record reuse this will always
		   be ascending
		   
		   

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/01/10
CHANGES FOR OOFILE POWERPLANT COMPATABILITY KIT
FILE		oof0.h
		- also check _AFXDLL to avoid including windows.h when using MFC

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/01/19
FIX JOEL BIERLING'S BUG WITH MN RELATIONSHIPS

CLASS	dbTable
Method	search
		- don't MakeTableValid if invalid related table, we may not have any
		  current record on the lhs from which to relate, and we're about to
		  change that selection anyway so it's a waste of time

	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/01/19
FIX SCOTT BERTIN'S BUG WITH dBase (FAILS TO WRITE LEGAL FILES UNDER WINDOWS)
CLASS	OOF_dbaseBackend
Method	createTableInConnection
		- fwrite((&fieldPos)+2,2,1,mDBfp);   should be
		-fwrite(&fieldPos,2,1,mDBfp);


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/01/31
FIXES FOR POWERPLANT->MFC COMPATABILITY KIT & MFC COMPILE WITH CODEWARRIOR

WinTypes.h
- change #ifdef _Windows to #if defined(_Windows) && !defined(OOF_PP2MFC)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/02/02
ELEMIR'S FIX FOR DELETING LAST RECORD IN RAM DATABASE

CLASS	OOF_ramBackend
Method	deleteRecord
		- for someRecs case, don't try to LoadRecord for saved recordNumber()


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/02/04-05
ELIMINATION OF OOF_PP2MFC CONDITIONAL LOGIC
(too much chance of error with libraries)

FILE		oofmsg.h
- change typedef of MessageT to a #define so can check if already defined 

FILE	oofstr.cpp
		- always have typdef of OOF_MacString equated to OOF_String		

FILE	oof0.h
		- remove conditional inclusion of mactypes.h



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/02/08
IMPROVE SEARCH BY TYPING IN GUI LISTS

CLASS	OOF_ctreeBackend
Method	recordNumberMatching
		- take optional pointer to bool flag to return found status, as we
		   return 0 if don't find or if find match on first record (ambiguous)

CLASS	OOF_simpleRecordBackend
Method	recordNumberMatching
		- take optional pointer to bool flag to return found status
		
		
CLASS	dbTable
Method	recordNumber(query
		- take optional pointer to bool flag to return found status

		  -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/02/08
INTEGRATE ELEMIR'S CHANGES TO LAUNCH FILES UNDER WINDOWS

CLASS	oofDirectory
Method	fillInExecInfo
		- added (conditionally for Windows)
		
Method	openFile		
		- added variant for Windows, takes HWND 2nd param


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/02/09
FIX BUG IF TRY INDEXED SEARCH WITH VALUE LONGER THAN KEY

CLASS	OOF_ctreeBackend
Method	BuildKey(both string variants
		- only copy up to keyLen chars

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/02/16
MINOR PORTABILITY ISSUES

FILE		oof0.h
- added #define MacLiteral to use portable string literals between Mac & others instead of the Mac standard embedded \p to indicate Pascal strings


FILE		oofstr.h
- Alex Curylo's fix, need conditional #include <Types.h> if not using a Mac precompiled header.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/09
PREVENT STUPID VC4.1 WARNINGS
(worked out need to disable warnings after all Windows #includes)

add #pragmas after windows and afx includes in
- oof0.h


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/09-10
SUPPORT GUI "FIND BY TYPING" FOR NON-INDEXED COLLECTIONS

CLASS	OOF_simpleRecordBackend
Method	recordNumberMatching
		- added partial implementation for >=string
		
FILE		oofrec1.cpp
		- add #include "oofwords.h"
		

CLASS	OOF_ctreeBackend
Method	recordNumberMatching				
		- call simple case if fail to find indexed value in current selection
				
				


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/15
NON-SORTED KEYPRESS FIND

CLASS	dbView
- mSpecifiedFindFieldNum added
Method	defaultFindField
		- added to return either mSpecifiedFindFieldNum or the first sort field

Method	copy ctor
		- copy mSpecifiedFindFieldNum
		
Method	ctor (all)
		- init mSpecifiedFindFieldNum(USHRT_MAX)		

Added simple setter/getters:
	bool defaultFindFieldSpecified() const;
	fieldNumT defaultFindFieldNo() const;
	void defaultFindFieldNo(fieldNumT);
		  		 

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/20
MERGE ELEMIR'S LATEST

FILE	ooffiles.cp
convertMac2WinPath
- added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/27
MERGE ELEMIR'S LATEST - DBASE ON WIN FIX

CLASS	OOF_dbaseBackend
Method	createTableInConnection
		- don't offset fieldPos when writing record length
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/29
FIX DATE PARSING BUGS IF NIL STRING
(MSVC libraries can't create stream from const char*==nil)

if incoming string is nil pointer, return false and set any io parameters to 0
- dbDate::str2ymd
- dbDate::str2Long
- dbTime::str2Long
- dbTime::str2dhmsm
- dbDateTime::str2ulong
- dbDateTime::str2ymdhms

		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/30 
COMPILE UNDER BORLAND 4.52 (16-BIT)

FILE		oofstr.h
- #include oofbool.h

FILE		oofbool.h
- don't assume all Borland compilers have bool, check for BCPLUSPLUS > 0x340


CLASS	oofDirectory
Method	fillInExecInfo
		- only define for WINVER >= 0x4000 (ie: not Win3.1)
		
Method	openFile
		- return false for Win3.1 (for now)		

		
CLASS	dbDate
- structure dbDate::tokenMap, add dbDate:: prefix to the enum NUMDATETOKENS
- made dbDate public, as can't access in the structure decl

		
CLASS	dbDateTime
- structure dbDateTime::tokenMap, add dbDateTime:: prefix to the enum NUMDATETIMETOKENS
- made NUMDATETIMETOKENS public, as can't access in the structure decl

		
FILE		oofDraw.h
- moved from utils folder to core as it is used by oofSize.cpp in core and is
   therefore needed by (Windows) users who just buy OOFILE Pro
   
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/03/31
COMPILE UNDER CODEWARRIOR PRO2

FILE	dbView.h
- add conditional #include of limits.h (if not using precompiled header)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/04/16-17
REMOVE (INCORRECT) AMBIGUITIES UNDER MSVC


CLASS	dbNumericField
conditionally for _MSC_VER added extra operator <, <=, ==, >=, > !=
for parameters
- unsigned long
- short
- unsigned short
- int
- unsigned int


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/04/30
(SUPPORT FOR) SHOW MULTIPLE COLUMNS IN TREE CONTROLS

CLASS	OOF_String
Method	padTo
		- added to provide padding with default space character, left-aligned


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/04/30
SUPPORT DLL BUILD OF OOFILE UNDER VC4&5
		
CLASS	OOF_RelMN
- made OOFILE_EXPORT so we can build DLL


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/04
CROSS-PLATFORM LOCKING FIXES

FILE	oofctrex.h
- check to see if ctLOCK_DIRECT and the other defines from c-tree v6.7a
  are defined and if not, define them so the code below can work in the assumption 
  they are consistently defined regardless of c-tree Plus version
  

CLASS	dbConnect_ctree
Method	SetupConnection  
		- only create the OOFLOCK.DAT file if using mode ctLOCK_DUMMY - used to do it all the time
		  for MS-DOS in FPUTFGET
		  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/04
CLEANUP DATE PARSING ROUTINES

CLASS	dbDateTime
Method	istream2ymdhms(istream& is, unsigned short& year, unsigned short& month, unsigned short& day,
		unsigned short& hour, unsigned short& minute, unsigned short& second, dbDate::dateFieldOrder theOrder)
		- call the variant which takes separators, using the dbTable defaults
		

CLASS	dbDate
Method	istream2ymd(istream& is, unsigned short& year, unsigned short& month, unsigned short& day, dateFieldOrder theOrder)		
		- call the variant which takes separators, using the dbTable defaults


CLASS	dbTime
Method	istream2dhmsm(istream& is, short& day, unsigned short& hour, unsigned short& minute, unsigned short& second, unsigned short& millisecond)
		- call the variant which takes separators, using the dbTable defaults


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/04
ADD Y2K THRESHOLD FOR 2-DIGIT DATE PARSING

CLASS	dbDate
- sNextCenturyThreshold added, default 0

Method	nextCenturyThreshold
		- added setter/getter pair
		
Method	adjustShortYear
		- added utility to encapsulate the algorithm in one place
				
Method	istream2ymd, ymd2Long
		- call adjustShortYear
				

CLASS	dbDateTime
Method	istream2ymdhms
		- call adjustShortYear
		- change test against sBaseYear to call adjustShortYear first, but still allow for sBaseYear
		  being in the next century (may cutover to earl 2000's but base say 2020)
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/07-09
CROSS-PLATFORM LINE ENDINGS

CLASS	dbText
- sConvertsLineEndingsOnLoad added

Method	convertsLineEndingsOnLoad
		- added setter/getter
		
CLASS	dbBLOB
- mIsTextField added

Method	ctor(all)
		- init mIsTextField(false)
		
Method	copy ctor
		- copy mIsTextField
		
Method	LoadField
		- if mIsTextField, call convertLineEndings
		
		
CLASS	dbText
Method	ctor(all)
		- init mIsTextField(true)	
									
		
CLASS	dbBLOBstorage
Method	convertLineEndings
		- added with #ifdefs to call various methods of oofString
				
				
CLASS	OOF_String
Method	lineEndingsDOS, Mac, Unix
		- moved guts of routine to static versions that operate on params				
		

CLASS	oofTextSizer
- generally replace unsigned short with unsigned long in interfaces

Method	CalculateWrapping
		- totally rewrote algorithm
		- don't store null pair (was as terminator) because numrows used by clients
		- add test for nil pointer on inValue string
		- add up front test for empty line, with just CR or CRLF etc.
		- properly ignore embedded LF, CRLF etc. (was including them, which didn't
		  matter on Mac as they had 0 width and didn't print)
		  
		  
use unsigned longs because of changes in oofTextSizer
- oofSizedTextArray::GetLineStarts		  
- oofSizedTextArray::GetLineLengths


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 
98/05/17
FIX ELEMIR'S NEW WINDOWS DRAWING - DON'T USE ENHANCED METAFILE
FILE		oofDraw.h
- moved from core folder back to utils as it is not needed by oofSize.cpp

FILE		oofsize.cpp
- removed #include oofdraw.h


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 
98/05/17
FIX OCCASIONAL DIVIDE-BY-ZERO CRASH IN REPORTS
only occur if have data in dbView as standalone fields and zero 
length data

CLASS	dbField
Method	fieldMinWrapWidth
		- if field returns 0 for storageLen, ret = 1
		
CLASS	dbChar
Method	fieldUsualWrapWidth		
		- if field returns 0 for mMaxLength, ret = 1


CLASS	oofTextSizer
Method	TruncateTrailingWord
		- set nextWordStart when truncating part way through last word
		  on line


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/31
REMOVE (INCORRECT) AMBIGUITIES UNDER MSVC

CLASS	dbDate, dbDateTime, dbTime
conditionally for _MSC_VER added extra operator -=, +=, -, +
for parameters
- unsigned long
- short
- unsigned short
- int
- unsigned int


CLASS		dbDateTime
Method	operator-= (unsigned long)  operator+=(unsigned long)
		- changed original to take long, so like the other date classes
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/31
FIX DATE INPUT BUG - LEADING ZERO READ AS OCTAL
(so 08 and 09 cause errors, appears to be bug in VC4.1)

OR ios::dec into the flags as the library has not defaulted to this setting
 - dbDate::istream2month
- dbDate::istream2ymd
- dbDateTime::istream2ymdhms
- dbTime::istream2dhmsm
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/05/31, 06/04
IMPROVE LINE ENDING CONVERSION
(see ooftst42)

CLASS	OOF_String
Method	lineEndingsCurrentPlatform		
		- added to provide single call that calls appropriate conversion

Method	lineEndingsDOS, lineEndingsUnix, lineEndingsMac
		- rewritten to cope with mixed line endings in string
		
		
CLASS	dbBLOB
Method	LoadField		
		- test dbText::convertsLineEndingsOnLoad, was always doing it!
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/06/08
COMPILE WITH CODEWARRIOR/WINDOWS

FILE	oofplat.h
- #undef min and max to avoid conflict with MFC macros
   defined in typical CW precompiled header
	#ifdef __MWERKS__
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/06/18
CLEANUP SELECTION SYNTAX

ClASS	dbSelection
Method	copy ctor, DeleteContents
		- cope with no contents

Method	ctor
		- added default, just zeroes everything
	
general change 
- add lots of assert(mSelection) in case create null dbSelection
- make our interface and dbTable identical for operators
  += -= %= |= &=


CLASS	dbTable
Method	relateSelection(dbTable*)
		- renamed to relateSelectionFrom

Method	selectAllRelated
		- added so related tables can pass on to their dbRelRefBase

general change
- add extra operators taking dbTable* where we only have dbTable&


CLASS	dbRelRefBase
Method	relateSelection
		- renamed to selectAllRelated


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/06/18
LOSING CHANGES TO RELATED SELECTIONS

CLASS	dbRelRefBase
Method	selectAllRelated
		- after forcing the RHS selection, set mActualRelatedTable to be
		  valid.
**** later removed this change - inadequate, see analysis in design diary ****


Method	relateFromRecord
		- mark mTable as valid after the traversal


CLASS	dbTable
Method	MakeTableValid
		- don't mark the related table as valid, but assert that it
		  should be so after relateRecord



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/06/22
LOSING CHANGES TO RELATED SELECTIONS

CLASS	dbTable
Method	MakeTableValid
		- undo change of 18th. In the circumstance where we are
		  supplying a join value on the RHS, we must be marked valid for
		  the relateFromRecord to avoid an endless recursive death
		  spiral where the RHS is repeatedly made valid.

		  This only showed up in adding several related records and
		  triggering a save of them, in the RepTestApp, NOT in the
		  standard samples or KIDMAP.



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/06/25
PROPAGATE SORT SUSPENSION

FILE	oofmsg.h
- added OOFmsg_SuspendSorting, OOFmsg_ResumeSorting


CLASS	dbTable
Method	resumeSorting
		- broadcast OOFmsg_ResumeSorting
		
Method	suspendSorting
		- broadcast OOFmsg_SuspendSorting
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/05
BORLAND COMPATABILITY

FILE		oofplat.h
- add test for __WIN32__ inside #else _Windows


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/10
DIRECTORY ITERATION

CLASS	oofDirectory
- mIterateDeep added

Method	ctor
		- init mIterateDeep(false)
		
Method	start(iterateDeep=true), more, next 
		- added to iterate
		
		
CLASS	oofE_AliasNotResolved
- added for Mac only


FILE		oofexcep.cpp
- added #include "ooffiles.h"


FILE		ooffiles.cpp
- added #include "oofexcep.h"
				


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/13
IMPROVE STRING PROCESSING - ABLE TO STRIP CHARACTERS

CLASS	OOF_String
Method	replaceChar
		- use constant upper bound in loop
		
Method	stripChar
		- added similar to replaceChar, leaving original allocation untouched but moving some
		  chars to the left and adding a new null at the end
		  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
INDEXING CALCULATED FIELDS
98/07/13

CLASS	dbField
- mStoreCalculatedValues added

Method	ctor
		- init mStoreCalculatedValues(false)
		
Method	copy ctor
		- copy mStoreCalculatedValues

Method	storesCalculatedValues,  storeCalculatedValues
		- added inline getter, setter

Method	hasDefaultCalculator
		- simplify to just return mCalculateOnlyDefaults - assume mCalculator
				
Method	saveStoredCalculatedValue
		- added near copy of saveDefaultCalculatedValue
		

CLASS	OOF_tableBackend
- mHasStoredCalculators added

Method	ctor
		- init mHasStoredCalculators(false)
		
Method	copy ctor
		- copy mHasStoredCalculators		

Method	fieldHasStoredCalculator
		- inline setter added	
		
			  		
CLASS	OOF_simpleRecordBackend
Method	saveRecord
		- expand loop for saving default calculated fields to call dbField::saveStoredCalculatedValue
		

CLASS	OOF_ctreeBackend
Method	FieldHasStorage
		- added to check not only if virtual but if indexed 
		
Method	BuildBackendTables
		- test FieldHasStorage instead of fieldIsVirtual
		
Method	BuildDODA
		- test FieldHasStorage instead of fieldIsVirtual
		- for fields that store calculated values, call fieldHasStoredCalculator
		

CLASS	dbCharStripperCalculator		
- added concrete dbCharCalculator which defaults to stripping spaces


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/17-19
DIRECTORY ITERATION - BACKOUT & USE VISITOR MODEL

CLASS	oofDirectory
- mIterateDeep REMOVED

Method	GetCurrentLocation
		- removed unneeded call to GetWDInfo
		
Method	visitFiles
		- added

Method	extract
		- added using oofDirectoryList

FUNC		operator<<(ostream& os, oofDirectory&)
		- added to call extract
		
		
CLASS	oofDirectoryVisitor
- added
				

CLASS	oofDirectoryList
- added to dump dir to stream


CLASS	oofRuntimeEnv
Method	termForLink
		- added to return compile-time string for alias/shortcut/link


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/21
FINISH INDEXING CALCULATED FIELDS

CLASS	OOF_ctreeBackend
Method	BuildBackendtables
		- call dbField::storeCalculatedValues and fieldStoresCalculatedValues so both the field
		   and backend state flags are set.

CLASS	OOF_simpleRecordBackend
Method	getFieldWriteDest
		- check if virtual fields store a calculator, before returning 0


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/21
IMPROVE CALCULATORS & THEIR CLONING WHEN CREATING NEW TABLE

CLASS	dbCharStripperCalculator
- added to strip spaces from one dbChar field


CLASS	dbCalculator
Method	clone(dbField*)
		- added new virtual method so existing calculators don't need to
		  override
		
		
CLASS	dbField
Method	copy ctor
		- pass this into the calculator clone method, so calculators that wish
		  can adjust internal field pointers to the new table		


CLASS	dbTable
Method	insert
		- fix check for last field being relationship to check if isVirtual,
		  in case we have a calc field as last field in table.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
CW11 COMPATABILITY OF RELEASE
98/07/23

CLASS	dbCalculator
Method	clone(dbField*)
		- renamed to cloneOwned so don't get hidden virtual override warnings
		  if fail to override
		  

CLASS	oofFileRef
- make container of an FSSpec rather than descendant as earlier compilers don't cope with a class being a public descendant from a struct		  


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/23
MINOR DEBUGGING - DIRECTORY VISITORS

CLASS	oofDirectoryList
- make all private data & functions protected so we can use in subclasses
   (silly to think we wouldn't subclass this!)
   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/24-27
STRING PORTION HANDLING AND COMPARISON - see ooftst43

CLASS	OOF_String
added methods
- replaceString(const char*, const char*)
- replaceBetween(const char*, const char*, const char*)
- replaceAt(unsigned long at, unsigned long numChars, constChar*)
- subString(unsigned long fromChars, unsigned long numChars)
- long find(const char*)
- findEnd(const char*)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/28
DIRECTORY ITERATION - CONTROLLING DEPTH

CLASS	oofDirectory
Method	visitFiles
		- 2nd param changed to indicate depth to which we iterate, not a simple boolean
		    to implement this, simply decrement the depth each recursion
		    
CLASS	oofDirectoryVisitor
- mIndentLevel added

Method	ctor
		- init mIndentLevel(0)
		
Method	enterDir, leaveDir
		- inc/dec mIndentLevel


CLASS	oofDirectoryList
- mIndentLevel removed


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/28
REMOVE AMBIGUOUS DATE-TIME OPERATORS
(cause compiler errors when try to use them!)

FUNC		operator-(dbTime&, dbTime&)
		- removed as there's an operator- on the class 


FUNC		operator-(dbDateTime&, dbDateTime&)
		- removed as there's an operator- on the class 



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/29
READING TEXT FILES

CLASS	oofFileRef
Method	readTextFile
		- Mac only version added, other platforms later
		
		
CLASS	OOF_String
Method	ctor(char*, long, bool)
		- add with extra param to indicate adopting buffer		
		
Method	subStringBetween(const char*, const char*)		
		- added
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/29
MAKE INTERFACE CONSISTENT FOR STRING VS FIELD TYPES

CLASS	dbChar, dbDate, dbDateTime
Method	asStr255
		- renamed to getStr255 so is same as OOF_String and complement of setStr255
	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
SIMPLE WAY TO SET MAC BASE YEAR
98/07/29

CLASS	dbDateTime
Method	setMacCompatibleBaseYear		
		- added to set base year to 1904, rather than user having to remember what year the Mac
		  uses.
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/07/31
CW Pro3 COMPATABILITY OF RELEASE - PP vs MSL

FILE		OOFPP_ClassHeaders.pch++, OOFPP_DebugHeaders.pch++, OOFPP_MacHeaders.pch++
		- #include fp.h before cmath to avoid clashes with #defines.
		
Note, this may have had other side-effects, not yet fully tested with our PP tests.		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/02
MAKE DIRECTORY LISTER FEATURES MORE EASILY REUSED


CLASS	oofDirectoryVisitor
- mIndentLevel renamed as mDirDepth to reflect the fact we are descending into directories, rather than
   the original name which was based on drawing an indented tree


CLASS	oofDirectoryList
Method	WriteIndent
		- added, for use by subclasses
		
Method	WriteIndentedName
		- use WriteIndent
		


CLASS	oofFileRef
Method	ctor()
		- added default so oofFileRef members can be used without initialisation and later set

Method	writeTextFile
		- added
										
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/02-04
CLEANUP STRING SEMANTICS

CLASS	OOF_String
- renamed oofString (and added typedef for OOF_String, the opposite of previous situation)

Method	replaceString
		- renamed replaceFirstString because only replaces one instance
		
Method	replaceString
		- added to replace in loop

Method	chars
		- added simple accessor to save using ugly (const char*)string everywhere
		
Method	operator char* 
		- converted to operator const char* for type safety		

Method	charsForOldInterfacesNotWriting
		- added for use in older interaces like c-tree Plus to avoid const conversion warnings
		

CLASS	OOF_simpleRecordBackend
Method	SearchEqualNonIndexedWildcard, SearchNotEqualNonIndexedWildcard
		- don't write a null to a local oofString's iterator (which is now const char*) but
		   change the pointer to point to a literal null string.


CLASS	dbRepLineHTML, dbRepLine
Method	drawNCharsAt
		- change param to take const char*,  not char*
		
FUNC		operator<<(ostream& os, const OOF_String& str)		
		- use chars() rather than casting as char*
		
		
FUNC		copyStr (in old oofrw.h)
		- change param to const char*


CLASS	dbField
Method	operator oofString
		- added inline call to virtual copyString, so any field can cast to a string
		

use OOF_String::charsForOldInterfacesNotWriting() instead of implicit or explicit char* casts that get warnings		
- dbConnect_ctree::CreateMySpecialTables
- dbConnect_ctree::OpenMySpecialTables
- OOF_ctreeBackend::BuildDODA
- OOF_ctreeBackend::createTableInConnection
- OOF_ctreeBackend::open
- OOF_ctreeBackend::openTableInConnection
- OOF_ctreeBackend::rebuild
- OOF_ctreeBackend::suppressIndices		


CLASS	OOF_CheckString
- renamed oofCheckString (and added typedef for OOF_CheckString, the opposite of previous situation)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/04
AVOID UNNECESSARY DIR INFO RETRIEVAL

CLASS	oofDirectory
Method	visitFiles
		- for aliased folders, only lookup parent info if we are recursing into the folder


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/04
ADD (FROM LOCAL APP) MASKING CLASSES FOR WEB PAGE CONSTRUCTION

FILE		oofmask.cpp, .h
- added with class oofMaskMultiStrings



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/05
GIVE BACKGROUND TIME WHEN ITERATING DIRECTORIES

CLASS	oofRuntimeEnv
Method	spendBackgroundTime
		- added
		
CLASS	oofDirectory
Method	visitFiles
		- call spendBackgroundTime once in file loop


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/07
FIX VC COMPILE ERRORS WITH RELEASE

CLASS	OOF_NavigableList
Method	FindRowforString
		- change local from BOOL to bool as can't use as writable param to recordNumber in VC5
		
FILE		oofstr.cpp
- change typedef of OOF_String to a #define as couldn't link libs that used the typedef'd OOF_String
   in VC4.1
   
   		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d18 public release
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/09
MERGE DEBUGGING CHANGES FOR FILE REFS & FIX WRITING ERROR

CLASS	oofFileRef
Method	extract
		- added so can dump a spec to a stream

Method	readTextFile
		- throw OSErr's rather than just returning

Method	writeTextFile
		- throw OSErr's rather than just returning
		- set the EOF in case are rewriting a file


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/09
(MERGE FROM ELEMIR'S 98/07/31 RELEASE)
A bug on getting the previous record immediately after a new record
has been saved fixed.

CLASS	OOF_simpleRecordBackend
Method	prev

If 'currentIter ' is ULONG_MAX, the first record is selected as a result
of the 'prev' function.
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/09
FIX BUG INTRODUCED IN 1.3b4d18 COMPOUND INDEX BREAKS RECORD LENGTH

CLASS	OOF_ctreeBackend
Method	FieldHasStorage
		- don't declare as having storage for indexed compound fields as c-tree Plus
		   is used to create the key, where in other virtual field cases we allocate storage
		   (eg: stored calculators)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/13
IMPROVE DIRECTORY TRAVERSAL

CLASS	oofDirectory
- use protected instead of private for hidden members

Method	visitFiles	
		- made virtual so can override if want variant behaviour when visiting
		- for Mac, save the FSSpec before translating aliases, and if fail pass the OLD spec into handlers		
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/13
FIX BUG IN STRING REPLACE - SMALL CHAR BY LARGER

CLASS	oofString
Method	replaceAt
		- fix bad alloc - failed to add one to new char[mLen]
		- fix copy error, was copying from new buffer onto itself
		
Method	encodeURL
		- added early version to replace space with %20, lots left to do!!!
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/17
FIX BUG IN STRING IF INIT WITH 0 BODY (eg: left(3) on an empty string)

CLASS	oofString
Method	FinishConstruction
		- always set mLen and mBody


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/17
FIX MAC BUG IN SETTING DIRECTORIES FROM PATHS
(path() call if set with relative dir will return incorrect value)

CLASS	oofDirectory
Method	PathToDirID
		- if pass in a path, append it to the current path or set current path, depending if relative
		
Method	CreateSubdirsAndWorkingDirID
		- update mPath after creating the directories
		
				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/17
FIX WEAK INTERFACES

CLASS	oofDirectory
Method	ctor(FSSpec&
		- change to take const FSSpec&
		
PathToDirID
CreateWorkingDirID
CreateSubdirsAndWorkingDirID		
(path() call if set with relative dir will return incorrect value)


				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/17
FIX LEAKS IN OOFSTRING

CLASS	oofString
Method	operator+=(both versions)
		- delete old mBody even if mLen 0
		
Method	replaceAt
		- wasn't deleting old body
		
				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/20
COMPILE LATEST ON PC

CLASS	oofFileRef
Method	extract
		- make non-mac implementation const
		
FILE		ooftst43.cpp
- remove some non-printing chars in the 2nd line of the webString example
- change the target string from "IndexSub" to add the " = " so our price replacement example 
   shows realistic result


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/02
TPS MERGE

FILE		oof0.h
		- add #include afxwin.h (inside _AFXDLL)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/20
ADD ABILITY TO CANCEL RECURSION INTO A DIRECTORY

CLASS	oofDirectoryVisitor
Method	enterDir
		- change return type to bool (was void) and return true by default


CLASS	oofDirectory
Method	visitFiles
		- check the return from enterDir and don't recurse if false


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/20
FIX HANG IF DELETING DIRECTORY CONTAINING SUBDIRECTORY
CLASS	oofDirectory
Method	delDirectory
		- create an oofDirectory for the subdir and recurse
		- closeWDDirectory before deleting parent as MacOS won't allow even
		  empty dir to be removed if there is a WD pointing at it


CLASS	oofString
Method	contains
		- added inline to test value of find

Method	find(char)
		- added optimal version as we often search for chars


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/24,25
IMPROVE MACINTOSH WORKING DIRECTORY HANDLING
CLASS	oofDirectory
Method	dtor
		- call CloseWDDirectory for Mac

Method	CloseWDDirectory
		- check mWorkingDirID non zero, and zero after closing

Method	CreateWorkingDirID
		- set mValidDir to true if succeeded, don't assume caller sets it


CLASS	oofFileRef
Method	deleteFile
		- added

Method	isValid
		- add actual test to see if file exists and is not a dir.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/25
DELETING FILES WHILE ITERATING A DIRECTORY

FILE		ooffiles.cpp
- add #include "oofarray.h"


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/08/31
BUG IN DELETING FILES WHILE ITERATING
CLASS	oofDirectory
Method	ctor (short vRefNum, long dirID) & (short vRefNum, long dirID, const char*
		- set mPath after creating the working dir

(short vRefNum, long dirID)

CLASS	oofFileList
- added

CLASS	oofDirectory
Method	makeFileList
		- added
		
Method	visitFiles
		- use makeFileList to make list to iterate rather than relying on Mac index order
		   so not vulnerable to files being deleted 
		   		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/03
MERGE ELEMIR'S CHANGES TO OPTIONALLY USE EXCEPTIONS THROUGHOUT

CLASS	dbConnect
Method	raiseException
		- added
		
dbConnect::raise() replaced with use of dbConnect::raiseException() with various exception objects, in:
- dbTable::ensureRecordLoaded
- dbTable::MakeTableValid
- dbGUIFactory::dbGUIFactory
- dbGUIFactory::makeGUI
- dbField::CalculateWith
- dbNumericField::CheckRange(double d, long minL, long maxL, const char* file, int line)
- dbNumericField::CheckRange(long l, long minL, long maxL, const char* file, int line)
- dbNumericField::CheckRange(unsigned long l, unsigned long maxL, const char* file, int line)
- dbDateTime::ymdhms2stream
- OOF_ctreeBackend::SetISAMtoContext
- OOF_ctreeBackend::SaveBlob
- OOF_ctreeBackend::SaveContext
- OOF_ctreeBackend::SaveExistingMainRecord
- OOF_ctreeBackend::deleteRecord
- OOF_ctreeBackend::addIndices
- OOF_ctreeBackend::suppressIndices
- OOF_ctreeBackend::rebuild
- OOF_ctreeBackend::createTableInConnection
- OOF_ctreeBackend::open
- OOF_ctreeBackend::close
- OOF_ctreeBackend::loadBlob
- OOF_ctreeBackend::LoadRecordAtOffset
- OOF_ctreeBackend::lockRecord
- OOF_ctreeBackend::invert
- OOF_ctreeBackend::RecordNumberOfKey
- OOF_ctreeBackend::GotoRecordForAllIndexed
- OOF_ctreeBackend::CompleteMoveToRecForAllRecs
- OOF_ctreeBackend::SearchBetween(const dbField* schField, const char* strFrom, const char* strTo)
- OOF_ctreeBackend::SearchBetween(const dbField* schField, const VOID* addressFrom, const VOID* addressTo)
- OOF_ctreeBackend::SearchComparative(const dbField* schField, const VOID* schAddress, ctComparativeKeySearch firstSchFun, ctComparativeKeySearch otherSchFun, LONG possibleSuffix)
- dbConnect_ctree::~dbConnect_ctree
- dbConnect_ctree::close
- dbConnect_ctree::newConnection
- dbConnect_ctree::openConnection
- dbConnect_ctree::FinishNewConnection
- dbConnect_ctree::FinishOpenConnection
- dbConnect_ctree::SetupConnection
- dbConnect_ctree::CreateMySpecialTables
- dbConnect_ctree::OpenMySpecialTables
- dbConnect_ctree::enterWriteLocking
- dbConnect_ctree::enterReadLocking
- dbConnect_ctree::resetLocks
- dbConnect_ctree::activateConnection
- oofDirectory::delDirectory
- dbConnect_ramp::~dbConnect_ramp
- dbConnect_ramp::newConnection
- dbConnect_ramp::newConnection
- dbConnect_ramp::openConnection
- dbConnect_ramp::openConnection
- dbConnect_ramp::newConnection
- dbConnect_ramp::openConnection
- dbConnect_ramp::FinishNewConnection
- dbConnect_ramp::FinishOpenConnection
- OOF_rampBackend::openTableInConnection
- OOF_rampBackend::close
- OOF_simpleRecordBackend::sortSelectionNow(const dbSorter*
- OOF_recordSelection::deleteItem
- dbRelRefBase::updateRelValue
- dbRelRefBase::breakRelLink
- dbRelRefBase::describe
- 

throw replaced with use of dbConnect::raiseException() with various exception objects, in:
- oofDirectory::visitFiles
- oofFileRef::writeTextFile
- oofFileRef::readTextFile


add #include "oofexcep.h" to files
- oof3.cpp
- oof4.cpp
- oof5.cpp
- oofram.cpp
- ooframp.cpp
- oofrec2.cpp
- oofrec4.cpp
- oofrel.cpp

CLASS	oofE_Base
Method	extract
		- added empty virtual & real virtual to all existing subclasses

New exception classes added:
- oofE_Field
- oofE_FieldError
- oofE_RangeError
- oofE_GUI
- oofE_GUIError
- oofE_MFCGUIError
- oofE_Selection
- oofE_General ( was oofE_NotImplemented)
- oofE_CtreeISAMError
- oofE_CtreeISAMErrorAtOffset
- oofE_CtreeKeyError
- oofE_CtreeBlobError
- oofE_TableError
- oofE_RamError
- oofE_RampError
- oofE_MacOSErr		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/03
MERGE ELEMIR'S FIXES TO RECORD TRAVERSAL AFTER GUI ADDS RECORDS

CLASS	OOF_ctreeBackend, OOF_dbaseBackend, OOF_ramBackend
Method	next		
		- if current iter==ULONG_MAX just start (inconsistent state, maybe due to adding record)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/03
COMPILE WITH CW PRO4

change overriden function extract to be const to match parent
- oofE_FieldError
- oofE_RangeError
- oofE_GUIError
- oofE_MFCGUIError
- oofE_CtreeISAMError
- oofE_CtreeISAMErrorAtOffset

FILE		oofexcep.h, .cpp
- change all LONG to long


FILE		oofrec3.cpp
- moved definitions of wctype & WC inside class OOF_simpleRecordBackend

ENUM	wctype
- renamed to OOF_wctype



CLASS	oofE_FieldError
Method	extract
		- add body to output the string
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/03
FIX BUG IN OOFTST38 WITH INDEXED COMPOUND FIELDS, INTRODUCED IN 1.3b4d18

CLASS	OOF_ctreeBackend
Method	BuildBackendtables
		- also check fieldtype like FieldHasStorage as well as fieldIsVirtual to check if should mark as 
		   storing calculated values

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/08
IMPROVE STRING AND DIRECTORY ROBUSTNESS - AVOID STUPID BUGS

CLASS	oofString
Method	adopt
		- add assertion to check incoming string length matches length given
		
CLASS	oofDirectory		
Method	ctor(FSSpec), ctor(vRefNum, dirID,...
		- for all the Mac ones that take a vol ref & dir ID, check they are non-zero
		
		
FILE		ooffiles.cpp
- replace a $else with #else 

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/08
MERGE MERCATOR FIX TO LAUNCH FILE UNDER WIN32S

CLASS	oofDirectory
Method	openFile
		- use ShellExecute for win32s as ShellExecuteEx not supported

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/10
COMPATABILITY BACK TO CW11
FILE		oofstr.cpp
- move #include "oofios.h" to oofstr.h to prevent ambiguities with operator<<(ostream&, oofString&)


		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/10
COMPATABILITY WITH g++

CLASS	oofDirectory
Method	dtor
		- made virtual, now that we have some virtual methods


CLASS	oofFileRef
- in non-Mac version, add public: to class decl


Makefile
- add oofexcep, oofmask
		
		
CLASS	oofMaskMultiStrings
Method	appendTarget
		- use dbConnect::raiseException instead of throw
		
		
CLASS	oofMaskMultiStrings
Method	loadFile
		- hide some try and catch calls within #ifdef OOF_USING_EXCEPTIONS


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/09/11
FIX PROBLEM WITH INTERSECTIONS IF LOTS OF DUPLICATES

CLASS	OOF_List
Method	sortedInsertNoDups
		- add comparison to last element - had bug if incoming element was duplicate of last
		  it was still appended


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/04
FIX CRASH WITH SOME STRINGS CONSTRUCTED FROM STREAMS

CLASS	oofString:
Method	FinishConstruction
		- cope with all cases - if input chars null also set mLen=0		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/07
AVOID PROBLEMS WITH MAC USING MANY oofDirectory IN SAME DIR

CLASS	oofDirectory
Method	gotoDirectory			
		- if working directory fails in SetVol, try HSetVol
		
Method	CloseWDDirectory
		- don't close the WD if it is the current volume no
		
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/13
GIULIANO'S FIX FOR ANSI STREAMS

FILE	oof0.h
- fix copy-and-paste bug where wrong test applied to guarantee
  that ANSI strings enabled if using ANSI streams, now
  	#if OOF_USE_ANSI_STREAMS && !OOF_HAS_ANSI_STRINGS
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/20
CW PRO4 RUN WITH DEBUGNEW

CLASS	OOF_dirtyFieldMap
Method	dtor
		- change delete to delete[]

operator<<(ostream& os, const oofE_Base& E)
- added to make it easier to construct expressions in catch


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/20
TRAP FAILURE TO FIND MAC DIRECTORIES FROM INVALID PATHS

CLASS	oofDirectory
Method	setDirFromPath
		- if don't get valid dir, and not creating, throw an exception


CLASS	oofE_General
Method	ctor
		- take const oofString& instead of const char* so can use expressions
		  like oofStringVariable + "some literal string"


CLASS	oofE_Base
Method	extract
		- made pure virtual


CLASS	oofE_RecordLocked
Method	extract
		- added



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/20
FIX NEW EXCEPTION HANDLING

FILE	oofexcep.h
- define RAISE_EXCEPTION macro


GENERAL CHANGE
- replace dbConnect::raiseException with RAISE_EXCEPTION macro


CLASS	dbConnect
Method	raiseException
		- renamed raise
		- only implement if exceptions not defined
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/21
NEW EXCEPTION HANDLING (FIXED) UNDER VC4.1

CLASS	OOF_ctreeBackend
Method	lockRecord
		- replace single-param constructed temporary exception object
		  with local variable, to work around VC bug which doesn't allow
		  single-param temporaries in throw()


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/21
QUICK WAY TO SET KEY LENGTH

CLASS	dbField
- mPartialKeyLength added
- kKeyLengthAutoCalculated added

Method	ctor(all)
		- init mKeyLength(kKeyLengthAutoCalculated)
		
Method	fieldKeyLen
		- added getter that checks state of field and may return 0
		
Method	indexPartialKeyLen
		- added setter, named to fit in with the index() method
		
Method	fieldIsPartiallyIndexed
		- added state query
		
		
CLASS	OOF_ctreeBackend
Method	CompleteIIDX
		- use fieldKeyLen instead of fieldStorageLen for key length
		
Method	FieldHasStorage
		- check for 0-length keys
		
Method	BuildBackendtables
		- check for 0-length keys on calc fields
	
	
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/10/30-11/01
ELIMINATE REPORT MEMORY & RESOURCE LEAKS

CLASS	OOF_ramContext
- added subclass of OOF_recordBufferedContext with methods
Method	dtor
		- delete any blob bodies pointed to 
		
Method	copyFrom
		- if blob bodies pointed to delete them before
		  copying the new buffer.
		  

CLASS	OOF_recordBufferedContext
- made OOF_ramContext a friend so can access protected members
  in overloaded copyFrom


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/11/02
INCLUDE CAMERON'S FIX FOR EMPTY PATHS

CLASS	oofDirectory
Method	PathToDirID
		- set mValidDir to true if empty path
		  after get a WD ID
		  

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/11/17
OOF29 - FIX BUG WITH DATES IN NEXT CENTURY

CLASS	dbDate
Method	nextCenturyThreshold(short)
		- if year<100 add current century, reversing old logic of
		  trimming the century
		  
Method	adjustShortYear
		- add assertion that nextCenturyThreshold>100


FILE		ooftst05.cpp
- add testY2K function to test nextCenturyThreshold logic


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/11/30
FIX WINDOWS PRECOMPILED HEADER GENERATION

FILE		oofpch_c.h, .cpp created

Add #include "oofpch_c.h" at top of all files in directories:
- core
- dbase
- ctree
- rep_chars


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/03
ADD ABILITY TO COPE WITH VOLUMES MOUNTED IN DIFF ORDER MAC VOL/DIR ID'S

CLASS	oofDirectory
Method	ctor(vRefNum, dirID)
		- add param searchForDirAllVols=false and pass to CreateWorkingDirID


Method	CreateWorkingDirID
		- add param searchForDirAllVols=false and if true don't give up on failed attemp



CLASS	oofFileRef
Method	scanVolsUntilFound
		- added
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/03
NEW PICTURE HANDLING
		
CLASS	oofFileRef
Method	path
		- added for non Mac platforms to retrieve the path

Method	ctor(const char*)
		- added so can get implicit construction of oofFileRef args to oofPict
		  from an input string literal				


		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/05
VC6 COMPATABILITY

CLASS	reversed (file oof1.h)
- move the OOFILE_EXPORT after the friend verb in the declarations
   - dbSorter& operator<<(dbSorter&, const reversed&);
   - OOF_FieldSegOwner& operator<<(OOF_FieldSegOwner&, const reversed&);

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/07
MAC COMPARABLE FEATURES WITH WIN - ABLE TO CREATE FILE REF FROM STRING

CLASS	oofFileRef
Method	path
		- added
		
Method	ctor(const oofString&		
		- added
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/18
AVOID EXCEPTION ON MAC WHEN CREATE INVALID DIR FROM PATH STRING

CLASS	oofDirectory
Method	setDirFromPath
		- don't throw exception - it is legal to create an invalid dir as the status can be tested


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/21
ADD ABILITY TO RETRIEVE FILENAME FROM REF, dir

CLASS	oofFileRef
Method	filename
		- added Mac implementation
		
		
CLASS	oofDirectory
Method	filename
		- added Mac implementation
		
		
FILE		ooffiles.cpp
- moved definitions around so apart from some very trivial cases in ctors,
we don't have methods with big blocks of platform-specific code any more, but
have entire methods within a _Macintosh or _Window#ifdef



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/21
COPE WITH POINTER RELATIONSHIPS IN dBase BACKEND

CLASS	OOF_dbaseBackend
Method	createTableInConnection, openTableInConnection, WriteBuffer
		- handle relationshipField types as uLongField
		
		
CLASS	dbRelRefBase
- mRelated renamed to mRelToLHS to better match meaning

		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/23
OOF28 - CRASH GUI ON ADD NEW RECORD THEN BACK OUT
(actually relationship bug)

CLASS	OOF_simpleRecordBackend
Method	unloadRecord
		- if new record, clear mCurrentLoadedRecOffset
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/26
OOF37 - VC5 COMPATABILITY - OOFSTRINGS AND DBCHARS

CLASS	dbField
Method	operator oofString
		- removed


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/27
MINOR DEBUGGING

CLASS	oofDirectoryList
Method	WriteIndentedName
		- now that we have filename() on all platforms, reimplement without dependency
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/28
HACK TO MAKE DELETE ALL WORK IN dBase (AND MORE ROBUST IN GENERAL)

CLASS	dbTable
Method	deleteAll
		- loop calling start() and deleteRecord() instead of using deleteSelection
		- suspendSorting for the duration of this loop (avoids resorts occurring)		

CLASS	PPF_dbaseBackend
Method	gotoRecord
		- case allRecs do simple-minded start() & loop forward to skip deleted recs


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/29
BUILD UNDER UNIX
CLASS	dbConnect_ctree
Method	SetupConnection
		- replace oofE_ConnectionError with oofE_CtreeConnectionError
		
CLASS	oofDirectory
Method	GetCurrentLocation
		- added empty stub
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
98/12/29
CLEANUP SINGLE RECORD SELECTION - FAILURE NEEDED IF CAN'T TRAVERSE RELATIONSHIP

rename the param from recNo to recordAddress because of the ability to confuse people with the
relative record numbers passed to gotoRecord, in:
- dbTable::selectJustRecordPointer
- OOF_tableBackend::selectJustRecordPointer
- OOF_simpleRecordBackend::selectJustRecordPointer

make selectJustRecordPointer able to return a bool (ie: in future it might fail),
so it is now comparable to selectJustOID
- dbTable::selectJustRecordPointer
- OOF_tableBackend::selectJustRecordPointer
- OOF_simpleRecordBackend::selectJustRecordPointer

CLASS	OOF_simpleRecordBackend
Method	selectJustOID
		- return the value from selectJustRecordPointer, not hardcoded true
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/01/21
PROVIDE BASE CLASS FOR USER ARRAYS

CLASS	oofArray
- added base a lot like OOF_ExpandableLongArray but for homogeneous arrays of user-supplied structures

		  
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/03/14
UNIFY BASE GUI CLASSES

GENERAL REPLACE
OOFMFC_EXT_CLASS renamed to OOFGUI_EXPORT
to match pattern of OOFILE_EXPORT, OOFREP_EXPORT etc.


FILE	oof0.h
	- add empty #define OOFGUI_EXPORT for non-Windows
	


		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/03/18
ADD VERSION DEFINES TO ALL OOFILE PACKAGES

FILE	oof0.h
- add OOFVERS_CORE


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/02
MOVE NON-INLINEABLE FUNCTIONS FROM INLINE (BASED ON CW PRO4 REPORTS)

change the following functions to no longer be inline:
- dbTable::currentSelection
- dbRelRefBase::relatedTable
- dbTable::makeEmptySelection
- oofString::operator+(const oofString&, const char*)		
- oofString::operator+(const oofString&, const oofString&)
- dbField::isDirty

		
						  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/03
COMPILE LIBRARIES, PRECOMPILED HEADERS

PROJECT	OOFHeaders.mcp
- change all precompiled header targets to have ++ at end to match recent PowerPlant
- add targets OOFPP_MacHeadersPPC+1.7Ed &  OOFPP_MacHeaders68K+1.7Ed

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/04
CHANGES FROM REFINING PP EXAMPLES

FILE		oofbool.h
- add typedef for Boolean on non-Mac platforms as it has been used
  in common GUI interfaces
  
 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/08
MERGE XML REPORTING WITH MAIN CODE BODY

CLASS	oofString
Method	encodeEntity
		- added to encode into HTML/XML PCDATA format (eg: encode < as &lt;)
		
Method	decodeEntity
		- added to decode HTML/XML entity format
		
Method	quoteString
		- added to put quotes around a string

Method	AppendSome
		- central logic to extend string
				
Method	operator+=(both versions)
		- rewrote to use AppendSome						
		
Method	append(const char*, unsigned long)
		- added to use if have buffer with known length, to avoid strlen call in op+=
		
Method	ctor(char)
		- added for optimal allocation
		
Method	ctor(char, const oofString&, char)
		- added for optimal alloc when quoting
		
								
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/13
FIX BUG WITH RAMP BACKEND - UNABLE TO REOPEN DATABASES AS THEY ARE LEFT EMPTY

CLASS	dbConnect_ramp
Method	save
		remove spurious openTableInConnection that appeared to have been copied from preceding method
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/13
FIX BUG CAUSING DATE-TIME FIELDS TO DISPLAY GARBAGE IN LISTS
(Thanks to Bruno at Mercator)

CLASS	dbField
Method	getChars
		- using new streams, return the accurate size of the buffer


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/14
FIX BUG CAUSING CRASHES WITH RECURSIVE RELATED OUTLINE SAMPLE
(failing to copy reference counted field dictionary in dbView, so cloning dbView
updated original)

CLASS	dbView
- mOwnedFields renamed to mOwnedFieldsInView & change type from OOF_Dictionary to OOF_ExpandableLongArray

Method	AdjustFieldsToNewTable	
		- added to centralise adjustment and copying of mRep
		
Method	ctor(const dbView&)	
		ctor(const dbView&, dbTable*)	
		- use AdjustFieldsToNewTable

Method	append(all variants)
		- store index of field in view for mOwnedFieldIndexes, not copy of pointer

Method	ctor(all)
		- don't call mOwnedFields.ownsContents()	
		
Method	dtor
		- add loop to delete owned fields		
	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/14
IMPROVE PROJECTS FOR PRECOMPILED HEADERS & CW PRO5

PROJ		OOFHeaders.mcp (IDE 4.0 version)
		- change access paths to MacOS only, no subdirs
		- turn optimisation on for all targets
		
FILE		OOF_DebugHeaders.pch++
		- added as copy of OOF_MacHeaders.pch++ with debugging, inline disabled, opt disabled

FILE		OOFPP_DebugHeaders.pch++
		- add pragmas to disable inline, optimisation
		- set debug on all targets
	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/20
COMPILE UNDER VC5

use fieldNumT instead of unsigned short or unsigned int for loop vars calling dbTable::field(i) in:
- dbTable::postCloneCleanup
- dbTable::extract
- dbTable::insert
- dbTaqble::postCloneRecordCleanup
- dbTable::generateTestData
- dbTable::relateAllDeletables
- OOF_ctreeIndexSegList::appendFieldNo


FILE	oofidfct.cpp
- add #include "oofpch_c.h" so VC precompiled headers work


PROJ		OOFFileLib
- add file oofidfct.cpp

		- set debug on all targets
	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/22
FIX RECENTLY INTRODUCED CRASH WITH CLONED VIEW USING STANDALONE FIELDS
		
CLASS	dbField
Method	equivalentFieldFromTable
		- clone a standalone field to return it
		

CLASS	dbView
Method	dtor
		- only delete owned fields if references fallen to 1
		  (otherwise they are still shared)
	
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/22
FIX MEMORY LEAKS WITH STANDALONE FIELDS DUE TO VIRTUAL CALL IN DTOR

CLASS	dbField
Method	deleteStandaloneStorage
		- removed empty virtual default method
		
Method	dtor
		- don't call deleteStandaloneStorage
		
		
remove deleteStandaloneStorage method and put its contents at end of dtor for classes:
- dbBLOB
- dbChar
- dbReal								
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/25
MAKE HIERARCHICAL TABLES SUBSCRIBE TO GUI

CLASS	dbSingleListener
Method	subscribeTo
		- unsubscribe from current broadcaster if already listening
		  (encountered if change hierarchical table views)

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/25
MINOR SUPPORT MODS

CLASS	oofString
Method	loadResorce
		- add3d Mac and Win implementations to take Res ID and load string

				  
CLASS	oofRuntimeEnv
Method	beep
		- added so have cross-platform beep


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/26-27
XML DATA OUTPUT WHEN SAVING REPORTS

CLASS	oofString
Method	singular  
		- added to return singular version of a string
		
Method	endsWith
		- added to ease comparisons

Method	legalName
		- create legal name using typical syntax				
		
		
CLASS	dbTable
Method	tableSingularName
		- added to return name used to refer to one record, eg: 'dbStudent' from a
		  'dbStudents' table. Can be overriden to use different algorithm.
		  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/28
CLEANUP PRAGMAS AND VC5 COMPILE

change check of MSC_VER to >=1010 so includes VC5 and
add disable of warning 4800 (bool conversion performance warning) in:
- oof0.h
- oof3.cpp
- oof5.cpp
- oofstr.h
- oofbool.h
- oofplat.h


cast a fieldNumT to unsigned short for searches== a dbUshort in
- OOF_ctreeKeywordIndex::searchField
- OOF_ctreeKeywordIndex::searchFieldAnyWords
- OOF_ctreeKeywordIndex::deleteWords

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/28
VC5 COMPATABILITY - AMBIGUITIES WITH CALLS TO FIELD

CLASS	oofString
Method	ctor(char)
		- add repeatCount param
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/04/28
FINISH XML DATA OUTPUT

FILE		oofidfct.*
- renamed to oofxml.*


CLASS	OOF_tagMaker
- renamed to oofTagMaker
- moved to oofxml from oofrpxml (so it is usable without report writer)
- made decl public in oofxml.h (was hidden in oofrpxml.cpp)

Method	mkCloseGraphTag
		- removed unused method (<graph tag is empty/>)

Method	mkCloseTableTag
		- removed		
		
Method	mkOpenGraphTag, mkOpenTableTag
		- removed, will compose attributes externally
		
Method	makeOpeningTag
		- add optional attributes param
		
Method	mk*
		- renamed to make* to be consistent with other methods		
						

CLASS	oofXMLwriter
- added to write data using code worked out in oofRepViewBand_XMLRender::draw


CLASS	oofRepViewBand_XMLRender
- mTableElement, mRecordElement moved to oofXMLwriter
- mWriter added

Method	startTableWrapper
		- moved most code into oofXMLwriter::startDatabase
		- create mWriter
		
Method	endTableWrapper
		- moved most code into oofXMLwriter::endDatabase
		- delete mWriter
		
Method	draw
		- moved most code into oofXMLwriter::writeRecord

Method	finishViewRender
		- don't use mkCloseTableTag, just mkClosingTag


CLASS	oofRepGraphBand_XMLRender
Method	draw
		- implemented using oofXMLwriter::writeDatabase 


CLASS	oofString
Method	encodeEntity
		- fix the incorrect output for a ", was &quote; and should be &quot;
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/02
MINOR BUGS AND CHANGE INTEGRATION

FUNC		operator<<(..., reversed&)
- take friend functions previously declared only inside class reversed and add declarations
  outside the class to see if this overcomes Visual C++ 6 errors.
  
  
  CLASS	dbTable
  Method	extract
  		- only output oid if OOF_EXTRACT_OIDS is defined, to simplify regression testing.
  		
CLASS	dbView
Method	AppendOwnedField
		- added to centralise some init logic
		- add setting invented name for un-named fields

Method	append(dbField*)
		append(const char*)
		- use AppendOwnedField
				  		
				  		
CLASS	oofString
Method	legalName
		- fix silly check for non-alpha, the digits were not quoted
		   so the legit range allowed integer 0 to 9, not '0' to '9'
		   
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/02
SUPPORT COMPILATION WITH CTREE 6.7A 'MULTITRD'

CLASS	dbConnect_ctree
Method	activateConnection
		close
		isam_err
		uerr_cod
		- change #ifndef ctNOGLOBALS to
		  #if defined ctNOGLOBALS && !defined MULTITRD
		  
Method	SetupConnection
		- put #ifndef MULTITRD around the whole #ifndef ctNOGLOBALS #else #endif
		   block		  
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/03
FINISH XML OUTPUT OF REPORTS & DATA

Write \r\n instead of endl so expat can parse XML files we produce, in:
- oofTagMaker::makeBreakTag
- oofTagMaker::makeLineTag
- oofTagMaker::makeSpaceTag
- oofTagMaker::makeClosingTag		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/04
OPENING REPORTS IN PREVIEW WINDOW & READING FROM XML

CLASS	oofFileRef
Method	directory
		- added to return the directory of the file ref
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/04
AVOID EXTRA SAVES OF PARENT RECORD WHEN ADD POINTER-RELATED CHILDREN

CLASS	dbRelRefBase
Method	receiveMsg		
		- case (OOFmsg_SaveRecord) only save parent if dirty and new 

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/04
SPEEDUP DIRECTORY TREE BUILDING IN SimpleOutline and ooftest46

CLASS	oofDirectory
Method	makeFileList
		- remove call to 	oofRuntimeEnv::spendBackgroundTime()
		
CLASS	dbSorter
Method	copy ctor
		- copy mSuspended flag (was setting false) so if create related
		  tables or others after cloning, will propagate suspension
		  		
		  				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/05
REGRESSION TESTING & MINOR FIXES UNDER VC5

CLASS	oofDirectory
Method	setDirFromPath
		- use strcat to create outFileName, not makepath as BoundsChecker
		  reported overwrite.
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/07
ALLOW DELETING OF TEMPORARY DATABASES & IMPROVED CLEANUP

CLASS	dbConnect
- mTempDatabase added

Method	ctor
		- add param isTemporary=false 


CLASS	dbConnect_ram
Method	ctor
		- pass isTemporary param to parent		


CLASS	dbConnect_dbase
Method	ctor
		- pass isTemporary param to parent		


CLASS	dbConnect_ramp
Method	ctor
		- pass isTemporary param to parent		


CLASS	dbConnect_ctree
Method	ctor
		- pass isTemporary param to parent		
		
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/07
MAKE OUR SCHEMAS CONFORM TO XML SCHEMA WORKING GROUP 6 May 1999 DRAFT

CLASS	oofXMLwriter
Method	schemaHeader
		- change namespace, explanation and define MS-like data types
		
Method	startSchema		
		- write data type as separate <datatypeRef name='...'/> tag
		- rename <ElementType> <elementType>
		- rename <element> <elementType>
		
Method	endSchema		
		- rename <ElementType> <elementType>
		
Method	dataType2Attributes
		- change from dt:dt='...' to name='...'
		- use single quotes not double to make literals easier to read
		- write 'double' instead of 'float' for dbReal fields
		- don't write 'char' for single char dbChar fields, handle like other 'strings'		
		
use single quotes not double to make literals easier to read in:
- oofCSS2RepTextStyle::findFontFamily		
- oofIDfactory::getQuotedIDstring
- oofRepGraphBand_XMLRender::oofRepGraphBand_XMLRender
- oofRepTextStyle2CSS::emitCSSstyle
- oofRepXMLEnv::makeRender
- oofTagMaker::makeLineTag
- oofTagMaker::makeOpeningTag
- oofTagMaker::makeSpaceTag
- OOF_repState2XMLelement::whereAmI


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/07
FIX RAM BACKEND BUGS WITH BLOBS BEING LOST ON 2ND SAVE OF RECORD

CLASS	OOF_ramBackend
Method	SaveContext
		- only orphan the blob if dirty, otherwise was replacing actual blob with null ptr
		

CLASS	OOF_ramContext
Method	copyFrom
		- don't call mBackend->deleteBlobBodies(mBuffer);


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/08
ADD ABILITY TO SEE IF DATABASE USES MULTIPLE FILES

CLASS	dbConnect
Method	usesSeparateFiles
		- added virtual default returning false
		
		
CLASS	dbConnect_dbase
Method	usesSeparateFiles
		- added to always return true
		
		
CLASS	dbConnect_ctree
Method	usesSeparateFiles
		- added to return depending on mSuperfile flag for local DB
		  and false if compiled as server lib				


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/09
DEBUG - ALLOW DELETING OF TEMPORARY DATABASES & IMPROVED CLEANUP

CLASS	dbConnect_ram
Method	ctor
		- make default for isTemporary=true (most use is declarative)
		
Method	dtor
		- only detach tables if mTempDatabase and mOpen
		
		
CLASS	dbConnect_ramp
Method	dtor
		- set 	mTempDatabase=false always to prevent above dbConnect_ram
		   dtor detaching tables			


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/08
UNTESTED MAC FIX TO HANGS IF CAN'T DELETE FILE IN DIRECTORY

CLASS	oofDirectory
Method	delDirectory
		- increment starting index if can't delete a file, so skipped in iterating 
		  remaining files in dir
		- don't attempt to delete parent if can't delete a file


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/10
XML PARSING INTO DATABASES

FILE	oof0.h
- if OOF_READ_REPORTS is defined, make sure OOF_READ_XML defined


CLASS	dbConnect
- removed friendship access for dbTable ctors (not needed given the following)

Method	currentlyConstructing
		- added public getter for sCurrentlyConstructing
		
		
CLASS	dbTable
Method	ctor(all)
		- use dbConnect::currentlyConstructing() instead of direct access
		  to dbConnect::sCurrentlyConstructing		
		  
		  
CLASS	dbTableOwningFields
- added light subclass of dbTable to ease creating dynamic dbFields		  


CLASS	oofXMLwriter
Method	dataType2Attributes
		- renamed to fieldtype2Attributes to match oofXMLschemaParser
		

CLASS	oofXMLschemaParser		
- added in oofXML.cpp
		

CLASS	oofXMLdataParser		
- added in oofXML.cpp
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/10
LOOKUP FIELDS, TABLES BY NAME

CLASS	OOF_Dictionary
- sMissingItem added

Method	missingItem
		- added inline getter for sMissingItem
		
Method	operator[](all versions)
		- made inline

Method	lookupByAttribute
		- added forwarder to OOF_DictRep
		
		
CLASS	OOF_DictRep
Method	operator[](const char* name)
		- implemented using lookupByAttribute
		
Method	lookupByAttribute
		- added using the new OOFILE_PublicBase::name() virtual
		
		
CLASS	OOFILE_PublicBase
Method	describe
		- added default implementation calling name()
		
Method	name
		- added virtual returning "unnamed OOFILE object"
		
		
CLASS	dbConnect
Method	name
		- added virtual returning connectionName()		
		
		
CLASS	dbTable
Method	name
		- added virtual returning tableName()		
		
		
CLASS	dbField
Method	name
		- added virtual returning fieldName()		
						
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/11
MAKE DEFAULT VIEWS FROM TABLES

CLASS	dbTable
Method	makeView
		- added factory so can get a view with all of table's fields


FILE		oof1.cpp
- add #include "oofview.h"


CLASS	dbTableOwningFields
Method	copy ctor
		- added to clone rhs fields
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/11
DEBUGGING READING AND WRITING XML REPORTS
CLASS	oofXMLwriter
Method	writeRecord
		- don't indent fields twice (so nested tables line up nicely)
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/12
SUPPORT USE OF OOF_DICTIONARY AS STACK

CLASS	OOF_Dictionary
Method	pop
		- added inline to call Pop
		
		
CLASS	OOF_DictRep
Method	Pop
		- added to return 0 or last item, zeroing storage
				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/12
ALLOW NAMING RELATIONSHIP FIELDS AND CLEANUP CONSTRUCTORS

remove default ctor and make ctor(const char*) allow null name for classes
- dbField
- dbBLOB
- dbText
- dbChar
- dbCompoundField
- dbFixedBinary
- dbNumericField
- dbBool
- dbDate
- dbDateTime
- dbTime
- dbLong
- dbShort
- dbReal


CLASS	dbNumericField
- make all ctors protected


CLASS	dbRelRefBase
Method	ctor(unsigned long maxLinks=0);
		- changed to (const char* fieldName=0, unsigned long maxLinks=0);


CLASS	dbRelRef
		dbRelSet
		- take fieldName default param & pass to base
		
				

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/12
READ NESTED SCHEMA FROM XML

CLASS	dbTable
Method	stillCurrentlyConstructing		
		- added 

Method	makeView
		- skip relationship fields
		

CLASS	oofXMLschemaParser	
- mNestedTables added
	
Method	startElement
		- cope with <elementType> nested within <elementType> indicating start of
		   nested table, creating related table and relationship fields

Method	endElement
		- pop mBuildingTable off mNestedTables rather than mBuildingTable=0;
		

CLASS	oofXMLdataParser
- mNestedLevel added

Method	endElement
		- use lhsTableInRelationshipSpec to return to table

FILE		oofxml.cpp
- add #include "oofrel.h"


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/16
PROTECT USE OF RTTI

FILE	oof0.h
- define OOF_RTTI_ENABLED depending on environment settings


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/17
SUPPORT REPORT VISITOR CHANGES

CLASS	oofString
Method	convertNumber
		- take optional 3rd param to indicate append number to content (default false)
		

CLASS	oofXMLwriter
Method	endSchema
		- call leaveLevel to outdent the ending tag
		
Method	writeSchema
		- don't call enterLevel or leaveLevel - that's in the start/endSchema methods
		
Method	ctor
		- moved the setting of mTableElement & mRecordElement into CalcNames
		
Method	CalcNames
		- added
		
Method	startDatabase
		startSchema
		- call CalcNames						
		

CLASS	dbView
Method	AdjustFieldsToNewTable
		- cope if not used in copy, with mRep->references==1
		
Method	cloneTable
		- added to clone current table & fixup fields


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/18
REPORTS ABLE TO RERUN XML REPORTS

CLASS	oofIDfactory
- mInDentString, mNumberLevels,  mScrapString removed
- mSeparator, mIndentSize made const member vars

Method	getIndentString
		- optimise using oofString ctor that creates string of width N*char
		- made inline

Method	reset
		- added
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/20
FIX BUG IN DELETING OWNED DATA - CRASH WHEN DESTROY TEMP DATABASE

CLASS	dbConnect
Method	dtor
		- if we are deleting tables, clear their mConnection first so they don't 
		  try to call close() back on what is now a dbConnect (and a pure virtual close())
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/20
PROBLEM WITH RAM DATABASE DELETION USING BLOBS AND RELATED RECORDS


CLASS	OOF_recordBufferedContext
Method	buffer
		- added inline getter for mBuffer
		

CLASS	OOF_ramContext
		- removed - use parent OOF_recordBufferedContext instead
		
		
CLASS	OOF_ramBackend
Method	dtor
		- add loop calling DeleteBlobBodies with the context buffers
		  instead of leaving it to their dtor to cleanup
		  
Method	deleteBlobBodies
		- renamed DeleteBlobBodies & made protected		  				
		  
		  
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/21
PARSE NESTED DATA

CLASS	oofXMLdataParser
- mNestedLevel removed

Method	ctor(..., dbTable*)
		- added to handle nested data when we've already got the dbTable from 
		   the relationship field
		   
Method	EnterNestedData
		- added to handle data updates, creation of new parser
		
Method	startElement
		- call EnterNestedData when rel field matches table, or 
		   hit nested table tag after our other fields
		   

CLASS	oofXMLschemaParser
Method	startElement
		- create dbRelRef for LHS of relationship, not dbRelSet (1:N not N:M)
		- stupid fix - Ref on RHS, Set on LHS of relationship!

Method	endElement
		- create i & ui types properly (cut & paste error, all dbText)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/21
FIX FAILURE TO SAVE RELATED RECORDS

CLASS	dbRelRefBase
Method	receiveMsg		
		- undo change of 99/05/04

		
CLASS	dbView
Method	ctor(dbTable&, bool )		
		- if table is related, set mCloneSource false 
		   (was defaulting true, but we didn't clone)
		   

CLASS	dbRelRefBase
Method	extract
		- write out "[]->" or "->[]" bracketing oid values to make it easier to 
		   see that we're a rel field

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/24
CLEANUP STRING SEARCHES & OPTIMISE SEARCHING FOR BRACKETED TEXT

CLASS	oofString
Method	findEnd
		- compare find result with kNotFound, rather than assuming >=0 is
		   same thing, to make clearer it's a failure comparison
		   
Method	findBetween(char, char)
		- added to optimise these searches
				   
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/26
FIX BUG READING XML INTO TEXT FIELDS WITH EMBEDDED LINEBREAKS

CLASS	oofXMLdataParser
- mFieldData added

Method	charData
		- append to mFieldData
		- don't set field string
		
Method	startElement
		- clear mFieldData				

Method	endElement
		- set field string
		
		
CLASS	oofString
Method	clear
		- added because I'm sick of assigning 0 which is not as clear
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/27-28
ADD READING/WRITING CUSTOM CODE

CLASS	oofSerializable
- added abstract base

CLASS	oofSerializableFactory
- added base can use as default or override


ALL CLASSES in oofxml.h
- added OOFILE_EXPORT to decl so can build Windows DLL's


CLASS	OOF_Dictionary
Method	ctor(int, int)
		- add param bool ownsContents to make it easier to use an OOF_Dictionary as singleton
		  managing a list of objects (previously had to separately call ownsContents()) to set.
		  
		  
CLASS	dbTableOwningFields
Method	ctor(all)
		- take advantage of new OOF_Dictionary ctor to avoid calling ownsContents		  

		
CLASS	OOF_FieldSegOwner
Method	ctor
		- take advantage of new OOF_Dictionary ctor to avoid calling ownsContents		  


CLASS	oofTagMaker
Method	makeSerializableElement
		- added to write any oofSerializable
		
CLASS	oofString
Method	quoteString
		- change default quoting character from " to ' for more consistent output of XML
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/28
MINOR DEBUGGING - WINDOWS FILE HANDLING

CLASS	oofFileRef
Method	filename
		- implemented for Windows
		
			
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/05/31
Y2K MINOR FIX - MORE REASONABLE 2-DIGIT YEAR HANDLING

CLASS	dbDate
- sPrevCenturyThreshold added, default 2070
- sNextCenturyThreshold default to 1970 (was 0)

Method	nextCenturyThreshold(int)
		- update sPrevCenturyThreshold 
			

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/04
FIX BUG WITH RAM RECORDS COLLIDING WITH SYNTHETIC NEW RELATED RECORD NUMBERS

CLASS	OOF_ctreeBackend
Method	EnsureOurContextMatchesISAM
		- check record offset < OOF_FIRST_SYNTHETIC_RECORD_OFFSET, was >1024
		
FILE		oofrecs.h
- define OOF_FIRST_SYNTHETIC_RECORD_OFFSET if not defined already


CLASS	OOF_recordSelection
Method	DropSelection
		- reset mNextFakeNewRecOffset to OOF_FIRST_SYNTHETIC_RECORD_OFFSET
		    was 0
		
Method	ctor(all)
		- init mNextFakeNewRecOffset(OOF_FIRST_SYNTHETIC_RECORD_OFFSET)
		   was 1 - interesting inconsistency with DropSelection!!
		   
Method	appendNewRecord
		- add an assert to guard against the rec offset wrapping round
		

CLASS	OOF_ramBackend
Method	SaveContext
		LoadRecordAtOffset
		- only set state variables mCurrLoadedRecOffset, mRecordState & mDirty
		   if don't load from cache
			
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.3b4d20 public release
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/06-07
BACKING STORE FOR MODIFIYING REPORTS

CLASS	dbTable
- enum saveOptions 
   - renamed to saveOptionsT to match convention
   - moved to top of class decl with other enums
   - bufferForever added

Method	tableSaveOption
		- added inline getter for mSaveOption
		   
Method	tableCachesDirtyRecords
		- added including test of bufferForever
		
Method	markDirty
		- call tableCachesDirtyRecords instead of just test requireExplicitAndBuffer
		
Method	ContextChange
		- add case for bufferForever as copy of requireExplicitAndBuffer			

Method	setSaveOption
		- if old option==bufferForever, call unloadCache
		- made non-inline
		
Method	dtor
		- call setSaveOption(requireExplicit		

CLASS	OOF_tableBackend
Method	tableCachesDirtyRecords
		- move logic to dbTable & call mTable->tableCachesDirtyRecords
		
		
CLASS	OOF_ramBackend
Method	newRecord
		- removed to OOF_simpleRecordBackend

Method	unloadRecord
		- removed overloaded version (which means mCurrRecOffset now zeroed
		   by default implementation)
		   		

CLASS	OOF_dbaseBackend
Method	newRecord
		- removed to OOF_simpleRecordBackend
		

CLASS	OOF_simpleRecordBackend
Metod	newRecord
		- added common implementation

Method	unloadCache
		 -  check tableSaveOption to only  call unloadCache() if in requireExplicitAndBuffer

Method	AdoptBuffer
		- use OOF_recordSelection::current instead of operator() so cope with allRecs state
		- check !mSelection.isAllRecs() and only do the updating of position if there is 
		   a selection there to scan (this situation didn't arise before because cached data
		   was only used on related tables and they never had an allRecs state)

Method	DonateBlobBodiesTo
		- only adopt body if blob field is dirty (like RAM fix on 99/05/07)
					   		

CLASS	OOF_ctreeBackend
Metod	newRecord
		- call common implementation after OOF_Debug check for readLocked
		
Method	SearchCombineSubclauses
		search
		CanUseIndex
		- check tableCachesDirtyRecords() when deciding if can't use index for searches


CLASS	OOF_recordSelection
Method	current
		- added to survive call if allRecs state on table (which can happen with bufferForever)

Method	operator=
		- don't assume mRep, allocate it with copy ctor if nil

				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/08
GENERAL CLEANUPS, IMPROVE COMPILING SAFETY & COMPILE WITHOUT PRECOMPILED HEADERS

insert "#pragma check_header_flags on" into MWERKS precompiled header files
- OOF_DebugHeaders.pch++
- OOF_MacHeaders.pch++
- OOFPP_ClassHeaders.pch++
- OOFPP_MacHeaders.pch++
- OOFPP_DebugHeaders.pch++

FILE		OOF_DebugHeaders.pch++
		OOFPP_DebugHeaders.pch++	
- add #define OOF_Debug before the oofile includes


FILE		oof1.cpp
- add	#include <Sound.h>
- move #include <Dialogs.h> so with other includes


FILE		oofstr.cpp
- add #include <resources.h>, <TextUtils.h>


CLASS	oofRuntimeEnv
Method	spendBackgroundTime
		- made inline as it's tiny & called frequently in tight loops


CLASS	dbDate
- sNextCenturyThreshold,  sPrevCenturyThreshold moved decls onto separate lines
   to be able to compile Win DLL


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/10
NEW BUG - ASSERT IF ADD MORE THAN 2048 RECORDS BEFORE SEARCHING

CLASS	OOF_recordSelection
Method	appendNewRecord
		- only inc mNextFakeNewRecOffset if appending


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/13
MAKE LINE ENDINGS CONVERSIONS RELIABLY RETURN 0 FOR NO CHANGE

CLASS	oofString
Method	lineEndingsMac(char*inChars, unsigned long& ioLen)
		lineEndingsUnix(char*inChars, unsigned long& ioLen)
		- return 0 if no substitutions (was always)
		- if shrink buffer, return a copy
		- if change buffer, return pointer to original
		- update ioLen
		
Method	lineEndingsDOS()
		lineEndingsMac()
		lineEndingsUnix()
		- return early if !mBody
		- check returned buffer!=mBody before replacing
		- return bool indicating if any changes

Method	lineEndingsCurrentPlatform		
		- return bool indicating if any changes

		
CLASS	dbBLOBstorage
Method	convertLineEndings
		- check returned buffer!=mBody before replacing
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/14
FIX SLOWDOWN FROM NEW CACHING LOGIC
(was avoiding indexed searches on MN link tables - catastrophic slowdown!)

CLASS	OOF_ctreeBackend
Method	CanUseIndex
		- only avoid using index if some records in cache, not just if caching enabled

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/14
COMPILE CLEANLY UNDER UNIX

CLASS	dbField
Method	ctor(all)
		- reorder init list to match declaration order
		

CLASS	oofFileRef
Method	filename
		- add Unix-specific version, not using Windows functions!
		
		
CLASS	oofString
Method	findLast(char)
		- added
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/15
FIX CRASH IN STRING REPLACEMENT \r\n\n with \r

CLASS	oofString
Method	replaceAt
		- cope with longer target than insert string and target at end of original
		
Method	find(const char*...
		- cope with partial match at string end
		- optimise single char string with call to find(char...		
		- add caseSensitive flag (default false)
		- optimise by pre-creating uppercased sch string
		
Method	find(char...
		findLast
		findEnd
		contains
		- add caseSensitive flag (default false)

Method	substring
		substringBetween
		- return oofString() instead of "" for slightly faster return arg construction

Method	decodeEntity
		- noticed still uses hand-calculated constants in case so switch to idiom of
		   making compiler do summation, that we used in the report parser

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/15-20
FINISH WINDOWS DIR ITERATION & FILE TOOLS

CLASS	oofFileRef
- unified declarations (was separate Mac decl as it did a lot more)
- enum isDirT added
- mIsDir added

Method	ctor (all)
		- take isDirT param, default eNotSet so making file lists can optimise this flag
		   to speedup later iteration (at the time of adding a fileRef we often know the file
		   exists)
		   
Method	ctor() - Macintosh
		- replaced with one that takes const char* path arg default 0
		
Method	ctor(const oofString&) 
		- added for Mac
		
Method	ctor(const oofDirectory& theDir, const oofString& name, isDirT)
		- added for other platforms
		
Method	isDirectory
		- added with partial implementation (Mac & Unix don't lookup if eNotSet)
		
Method	copyToDirectory
		- added empty stub for Mac		
		- added Win version	
		- added empty Unix stub		

Method	deleteFile
		- added Win  version
		- added empty Unix stub		

Method	readTextFile
		- added empty Unix stub		

Method	writeTextFile
		- added empty Unix stub		

Method	filename
		- added Unix version 

Method	makeRefToContainedFile
		- added common Unix & Windows implementation
		
				

CLASS	oofDirectory
Method	visitFiles  - Mac
		- use const local vars for saved dir & volume IDs

Method	visitFiles - Windows
		- added implementation
		
Method	makeFileList - Unix
		- added empty stub

Method	delDirectory
		- added for Windows and Unix (was Mac only)						


CLASS	oofE_AliasNotResolved
- mRef added
- made unconditional (was only def for Mac)
- moved to ooffiles.* from oofexcep.* because depends on oofFileRef

Method	fileRef
		- added simple inline getter
		
FILE		ooffiles.h
- add #include oofexcep.h
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/21-22
FINISH TEMPORARY DATABASE STORAGE CLEANUP
(see ooftst50 for example)

CLASS	dbConnect
Method	deleteStorage
		- added to call deleteStorage on all tables, after closing
		
		
CLASS	dbConnect_ctree
Method	dtor
		- call deleteStorage and close if applicable

Method	deleteStorage
		- added override that can delete superfile, or blobs and use parent
		   for each table

Method	SetupConnection		
		- don't init mDatabaseDir, assert that it's setup already!
		- mDatabaseDir->gotoDirectory() so we're there for the rest of
		    the FinishOpenConnection or FinishNewConnection logic

Method	newConnection
		openConnection
		- don't create temp local oofDirectory to create path to files
		   if necessary. Init mDatabaseDir because we want it to know
		   if it created disk directory


CLASS	dbConnect_dbase
Method	dtor
		- call deleteStorage and close if applicable

Method	MakeTableBackend
		- pass this into the OOF_dbaseBackend
		
Method	openConnection(all)
		newConnection(all)
		- init mDatabaseDir instead of using a local oofDirectory
		
Method	SetupConnection		
		- don't init mDatabaseDir, assert that it's setup already!
		- mDatabaseDir->gotoDirectory() so we're there for the rest of
		    the FinishOpenConnection or FinishNewConnection logic


CLASS	dbConnect_ramp
Method	dtor
		- call deleteStorage and close if applicable

Method	openConnection(all)
		newConnection(all)
		- init mDatabaseDir instead of using a local oofDirectory
		
Method	SetupConnection		
		- don't init mDatabaseDir, assert that it's setup already!
		- mDatabaseDir->gotoDirectory() so we're there for the rest of
		    the FinishOpenConnection or FinishNewConnection logic


CLASS	dbConnect_ram
Method	dtor
		- removed unnecesary mTables.start() and mTables.next() as iterating 0..N-1
		   calling mTables.value(i)


CLASS	OOF_tableBackend
Method	deleteStorage
		- added empty base implementation
		

CLASS	OOF_dbaseBackend
- mConnection added

Method	ctor
		- add dbConnect_dbase* param
		
Method	copy ctor
		- copy mConnection from rhs
				
Method	deleteStorage
		- added to always delete .dbf, delete .dbt if it exists

Method	dtor
		- change delete to delete [] for mDBBuf & mScanfFormat	because they're arrays
		   (and CodeWarrior debugNew picked up the mismatch!)
		   	

CLASS	OOF_ctreeBackend
Method	deleteStorage
		- added to always delete .dbf, delete .dbt if it exists


CLASS	OOF_ctreeKeywordIndex
Method	close
		deleteStorage		
		- added to forward calls to embedded table

		
CLASS	dbTable
Method	deleteStorage
		- added simple forwarder to backend		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/22
DETECTING IF TABLE CLOSED

CLASS	dbTable
- enum tableValidT added
- mTableValid changed from bool to tableValidT

Method	ctor(all)
		- init mTableValid(eInvalid) instead of (false)
		
Method	describeState
		- output new values
		
Method	isTableValid
		- now return (mTableValid==eValid)				
		
Method	MakeTableValid
		- set mTableValid = eValid instead of true
		- use isTableValid() in assert, not just mTableValid
		
Method	search				
		- set mTableValid = eValid instead of true

Method	setTableValid
		- set to eValid or eInvalid based on bool param

Method	close
		- set mTableValid = eClosed
		- only close if isOpen() - we have a safety net at last!
		
Method	isOpen
		- added to check mTableValid != eClosed
		
CLASS	oofDirectory
- mCreatedDiskDir added

Method	ctor(all)
		- init mCreatedDiskDir(false)

Method	isEmpty
		- added Mac & Windows (Unix not yet implemented)
		
Method	createdDiskDir
		- added to return mCreatedDiskDir				
		
Method	CreateSubdirsAndWorkingDirID   // _Macintosh
		CreateSubdirectories   // _Windows
		- set mCreatedDiskDir
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/22,25
DEBUG STRING REPLACES (tested in LineEnder utility)

CLASS	oofString
Method	lineEndingsMac
		replaceAt
		- use memmove instead of memcpy when copying sideways in same buffer

Method	find
		- fix stupid bug when pattern overlaps end of string. Now has robust check to 
		  see that search pattern is longer than remaining search space.

Method	lineEndingsDOS
		- for some weird reason the loop started at 1 rather than 0 so if file had
		   CR in first character it was left alone, so Mac->DOS would leave CR CR LF
		   and opening file in BBEdit would think it was a Mac file with a lot of 
		   scattered LF's (BBEdit uses first line ending encountered to determine style)
		   
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/22-23
DEBUG WINDOWS DIRECTORY ITERATION & PATH HANDLING 


CLASS	oofDirectory
Method	setDirFromPath	
		GetCurrentLocation
		- append backslash at end of setting or creating as the MS path doesn't end in
		  terminator
		  
Method	makeFileList
		- skip the "." and ".." directory entries
		- append the filename to the directory path
		  so oofFileRef created with absolute path				  
		  
Method	delDirectory
		- wrote cross-platform version using visitor
		- add params delTree & delSubdirs to control recursion & deletion of sub directories
		   vs just recursing to delete files, leaving dir structure untouched


Method	visitFiles (Mac & Windows implementations)
		- param visitDepth renamed remainingVisitDepth to better indicate meaning
		- pass this into visit, enterDir & leaveDir calls		
		
Method	isEmpty   _Windows
		- cope with empty dir still containing "." and ".." entries		
		

CLASS	oofDirectoryVisitor
CLASS	oofDirectoryList
Method	enterDir
		leaveDir
		visit
		- add oofDirectory* param for caller to pass in itself


CLASS	oofDelDirTreeVisitor
- added visitor using oofFileRef to do platform-specific file deletes
		
		
		
CLASS	oofFileRef
Method	deleteFile	  _Windows
		- cope with directories

				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/06/26-29
UNIX COMPILE & FILE UTILITIES

FILE		oof1.h
- reorder the inline implementations of OOF_tableBackend & dbTable to satisfy g++ 2.7.2 
   complaint that dbTable::tableCachesDirtyRecords() used before inline encountered


CLASS	oofDirectory
Method	setDirFromPath   // _Unix
		- create directories if missing
		- append '/' to end of path if missing

Method	parentDirPath,
		relativeRootPath,
		directoryTerminator
		- added little static constant utilities
		

Method	GetCurrentLocation,
		makeFileList
		isEmpty
		filename
		- added Unix version
		
Method	filename
		- added Windows version		

CLASS	oofFileRef
Method	deleteFile
		- add Unix version

Method	isDirectory
		- add test if mIsDir not set, for Unix

Method	ctor(const oofDirectory& theDir, const oofString& name, isDirT isDir)
		- add assertion that path ends in directory terminator
		
		
CLASS	dbField
Method	ctor(const char* fieldName)		
		- reorder init list to match decl order


CLASS	OOF_dbaseBackend
Method	openTableInConnection	
		- add asserts & casts so safely using %4c to scanf into unsigned long and
		   %2c into unsigned short
		   

CLASS	oofString
Method	subString		   
		- use unsigned long and rearrange asserts to remove warnings

Method	findLast
		- fix two bugs where unsigned long decremented down to & past 0
		   if character not found		
		   
		   
CLASS	oofArray
		oofE_MFCGUIError
		oofMaskMultiStrings
		oofE_CtreeConnectionError
Method	ctor
		- rearrange init list to match decl order
		
				   
FILE		oof4.h, oof5.cpp
- removed operator-(const dbDate&, const dbDate&) as this function collides with
   dbDate::operator-(const dbDate&) const.



CLASS	dbConnect_ramp
		dbConnect_ctree
Method	openConnection(const char* connectionName)
		newConnection(const char* connectionName)
		- fix stupid bug where strlen of newly allocated string was being tested
		   before oofDirectory created that will populate the string with the filename
		   (and Unix allocator obviously zeros string, so failed unlike others)


CLASS	OOF_dbaseBackend
Method	deleteStorage
		- throw exception if fail to delete files

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/04 Sun
LAST MODIFIED DATES OF FILES

GENERAL REPLACE
"struct tm" with just "tm"

FILE	oof4.h
- added #include <time.h> for _Windows, old streams


CLASS	oofDateTime
Method	ctor(const struct tm&)
		- added
		
Method	operator=(const struct tm&)
		- added simple forwarder to dbDateTime		


CLASS	oofDateTime
Method	operator=(const struct tm&)
		- added calling setDateTime


CLASS	oofFileRef
Method	lastModified
		- added Mac, Unix & Windows implementations	

Method	readCInfo
		- added Mac utility method

Method	isValid
		- rewrote using readCInfo
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/04
FINISH FILE STATUS CHECKS, READ/WRITE TEXT, COPY METHODS

CLASS	oofFileRef
Method	isDirectory
		- finished Mac implementation using readCInfo
		
Method	isValid _Macintosh
		- changed implementation to acknowledge refs to directories as valid		

Method	isValid  _Windows, _Unix
		- implemented using stat(), _stat()
		
Method	fopen 
		- added for all platforms, so people using our iterators can
		  still use traditional IO
		  
Method	gotoParentDirectory
		- added for all platforms
		
Method	makeRefToContainedFile  _Windows, _Unix
		- add assert(isDirectory())		

Method	renameFile
		- added stubs for all platforms	

Method	dirIsParent
		- added for all platforms	

Method	readTextFile
		- completed for Unix, Windows
		- replace oofE_MacOSErr with oofE_File

Method	writeTextFile
		- completed for Unix, Windows
		- replace oofE_MacOSErr with oofE_File
		
Method	deleteFile
		moveToDirectory
		copyToDirectory
		- change to throw exception rather than return bool
		
									

CLASS	oofDirectory
Method	gotoDirectory(short vRefNum, long dirID)
		- added static method for Mac
		
Method	gotoDirectory(const char*)
		- added static method for all platforms	(expensive on Mac)
		
Method	fillInFSSpec
		- cope with null filename	
		
Method	gotoDirectory()
		- throw oofE_InvalidDir if fails				
				

FILE	ooffile.cpp
- added #include <sys/types.h>, <sys/stat.h> for _Windows
- added MoreFiles utilities,  prefixing them with "MF_":
   - CopyFileMgrAttributes
   - FSpCopyFileMgrAttributes
   - CheckForForks
   - CopyFork
   - HCreateMinimum
   - HGetVolParms
   - HCopyFile


CLASS	oofE_InvalidDir
- added (in ooffiles.h)
											
		
CLASS	oofE_File
- added (in ooffiles.h) with oofE_MacOSErr as base if Mac


CLASS	OOF_dbaseBackend
Method	deleteStorage
		- don't check deleteFile for return values - let it throw by itself


CLASS	dbConnect_ctree
Method	deleteStorage
		- if deleting blobs file check it's there first otherwise it will throw exception 
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/11
DAVID'S FIXES TO DIRECTORY & FILES ON MAC

CLASS	oofDirectory
Method	CreateSubdirsAndWorkingDirID
		- changed	&cpb to &hpb in PBDirCreateSync((HParamBlockRec *)&hpb/*&cpb*/);
		   (Andy left wondering how the hell this was missed?)


CLASS	oofFileRef
Method	dirIsParent
		- destSpec.vRefNum==mSpec.vRefNum test wrongly repeated
		   should test parID as well
		   
Method	copyToDirectory
		moveToDirectory
		- change if (fileInfoErr==noErr) to (fileInfoErr!=noErr)
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/11
MAKE NEW DIRECTORY STUFF COMPILE UNDER WINDOWS

CLASS	oofFileRef
Method	dirIsParent // anything but _Macintosh
		- add missing oofString type

Method	writeTextFile // _Windows
		- fix params to WriteFile
		
Method	renameFile  //_Windows
		- implemented with MoveFile				

Method	copyToDirectory
		-  fix misnamed variable inDir
		
Method	moveToDirectory
		-  fix misnamed variable inDir
		- use MoveFileEx so can pass in COPY ALLOWED and REPLACE EXISTING flags
		
Method	directory()   // anything but _Macintosh
		- pass in a dummy file name so the directory being created drops the filename
		   from the path
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/13
FIX STRING BUG IF LAST TWO CHARACTERS MATCH SEARCH

CLASS	oofString
Method	find
		- test to see if search overlaps end of string was off by one
		
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/13
PRESERVE SPACES IN XML-SAVED DATABASE SCHEMAE

CLASS	oofString
Method	legalName
		- add extra param  spaceReplace='_' so callers can treat spaces differently


CLASS	oofXMLwriter
Method	legalName		
		- added inline forwarder to call oofString version but passing in our own defaults
		   using '_' for non-alpha and 'n' for leading digit as normal but using '.' for space
		
use oofXMLwriter::legalName in:
- OOF_repXMLlayoutVisitor::VisitViewBand
- oofRepGraphBand_XMLRender::describeLayout
- oofXMLwriter::CalcNames
- oofXMLwriter::startSchema
- oofXMLwriter::writeRecord

				
CLASS	oofXMLschemaParser
Method	startElement
		- add replaceChar('.', ' ') so spaces in field & table names recreated


FILE		oofrpXML.cpp
- add #include "oofxml.h"


CLASS	oofXMLdataParser
Method	startElement
		- add replaceChar('.', ' ') so spaces in field & table names recreated

Method	endElement
		- remove assertion that compares field or table names with element name


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/23 
ADD LOGGING AND INVARIANTS TO MAIN INTERNAL DATABASE STATE

CLASS	OOF_simpleRecordBackend
Method	Invariant
		- added (test shell for now)
		
Method	InvariantDump
		- added conditional on OOF_INVARIANT_DUMP_NAME


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/23 
IMPROVE SELECTIONS TO COPE WITH SELECT ALL STATE FOR ALL OPERATIONS

CLASS	dbTable
- mPrototypicalInstance removed
- mPrototype added
- sCloningSelSharing , sCloning, sCloningInDifferentConnection moved to OOF_dbTableStatics

Method	ctor(const char*), ctor(const dbTable& rhs, OOF_tableBackend* inBackend)
		- init mPrototype(this)
		
Method	copy ctor
		- copy mPrototype(rhs)		

Method	countAll
		- made const
		- don't call MakeTableValid - don't care if invalid
		
Method	cloneTableSharingSelection
		cloneTableWithoutSelection
		cloneTable
		- made const

Method	appendSelection
		- cut out some of the silly copying of selections and calling difference_with
		   before the union_with

Method	dtor
		- check if this==prototype() instead of if mPrototypicalInstance
		
Method	prototype
		- added getter for mPrototype		

added set operations taking const dbSelection&
- difference_with
- operator -=
- operator %=
- intersection_with
- operator &=
- union_with
- operator +=
- operator |=

CLASS	dbTableOwningFields
Method	clone
		- made const


CLASS	OOF_dbTableStatics
- added to contain statics from dbTable that need updating in const clone methods


CLASS	OOF_tableBackend
added pure virtual set operations taking const dbSelection&
- difference_with
- intersection_with
- union_with


CLASS	OOF_simpleRecordBackend
Method	ctor(all)
		- init mSelection(theTable->prototype())

Method	difference_with
		- don't pass 'this' to selection difference_with

Method	currentSelection
		makeEmptySelection
		sortSelectionNow
		SortSelectionNow(all)
		SortSelectionInverseNow(all)
		difference_with
		union_with
		SearchEqualNonIndexed(all)
		SearchNotEqualNonIndexed(all)
		SearchComparativeNonIndexed
		SearchBetweenNonIndexed
		SearchOutsideNoneIndexed
		searchSelContainsAllDelimited
		searchSelContainsAllOf
		searchSelContainsAnyOf
		searchSelContainsAnyDelimited
		SearchCombineSubclauses
		- pass mTable->prototype() into new selection
				
added set operations taking const dbSelection&
- difference_with
- intersection_with
- union_with



CLASS	OOF_Selection
Method	invert
		prototypicalTable
		- added pure virtual
		
		
CLASS	OOF_recordSelection
- mPrototypicalTable added
- made subclass of oofSingleListener #ifdef OOF_Debug

Method	receiveMsg
		- added conditional on OOF_Debug to clear mPrototypicalTable

Method	prototypicalTable
		- added simple getter		

Method	ctor(all)
		- init mPrototypicalTable
		- conditionally init oofSingleListener
		
Method	copy ctor
		- copy rhs.mPrototypicalTable
		- conditionally init oofSingleListener

Method	operator=
		- add assertion to guard same prototypicalTable						

Method	difference_with
		- don't take 'caller' param
		- use our own invert instead of optional caller's (which caused assert 
		   if selection not currently called from backend but from user code)
		- pass mPrototypicalTable to new selection

Method	union_with
		- pass mPrototypicalTable to new selection
		
Method	invert
		- added using clone of mPrototypicalTable
		
		
CLASS	dbSelection
Method	operator=
		- add assertion to guard same prototypicalTable				
		
Method	invert
		operator~
		operator!
		- added
		
Method	prototypicalTable
		- added simple getter calling mSelection's			
		
Method	count
		- added assert that if mReferences have both mSelection and mPrototypicalTable
		   (ie: fully inited)
		 - if all records state,  return mPrototypicalTable->countAll		
		 


FILE		oofmacro.h
changed all clone methods to be const
- cloneTableWithoutSelection
- cloneTableSharingSelection
- cloneWithoutSelection
- cloneSharingSelection
- cloneTable
- clone
- cloneEmptyInRAM
- cloneInRAM		 


CLASS	OOF_ctreeKeywordIndex
Method	FinishSearch
		FinishSearchAny
		searchFieldAnyWords
		searchTableAnyWords
		- pass schTable->prototype() into new selection



CLASS	OOF_ctreeBackend
Method	invert
		SearchCombineSubclauses
		- pass mTable->prototype() into new selection


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/24
MINOR FIXES FROM MERCATOR

CLASS	dbDateTime
CLASS	dbDate
CLASS	dbTime
Method	operator=(const char*)
		- make behave same way as setStr255 - empty string gives 0 date, not invalid date
		
		
CLASS	oofDirectory
Method	setDirFromPath
		- don't unconditionally append '\\' because if user terminated string was ending up with 
		   double backslashes at end
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/24
MERGE RELATIVE PATH LOGIC FROM DAVID

CLASS	oofString
- enum pathType added, renamed to pathTypeT and all enums within it renamed to eBlah format
- notRelative renamed to eAbsolute
- NOTE long enums like eMacRelFromParentPath crash the VC5 compiler!!!

Method	relativePathDOS
		relativePathMac
		relativePathUnix
		- added static & in-place conversion member

Method	isRelativePath
		- added static test		   
		
Method	relativePathPlatform
		- added method calling one of above conversions depending on compiled platform	

Method	getPathType
		- added static parser
		
FUNC		operator<<(ostream&, oofString::pathTypeT)
		- added
				   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/24
MAKE RELATIVE PATH LOGIC COPE WITH PLAIN FILENAMES & USE IN OPENING FILES

CLASS	oofString
enum		pathTypeT
		- added eMacAbsPath, eUnixAbsPath, eDOSAbsPath, eJustFile	
		- removed eAbsolute
		
Method	getPathType
		- renamed to pathType to reflect fact it's evaluating something, not getting a member
		- start with '.' and no '/' or '\' is likely filename
		- add test for starting with '\' or '/' which are absolutes
		- return eUnixRelPath for '..' alone as it's a valid relative path on both DOS
		   and Unix
		- return eUnixRelPath for '.' alone as it's a valid relative path on both DOS
		   and Unix

FUNC		operator<<(ostream& os, oofString::pathTypeT aPath)
		- write the new path types
		
Method	isRelativePath(pathTypeT)
		- added to prevent double call to pathType()
		
Method	isRelativePath(const char* 
		- use isRelativePath(pathTypeT)			
				
Method	relativePathMac
		relativePathDOS
		relativePathUnix
		- check for eJustFile value and return 0
						
						
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/07/25
PROBLEMS WITH RELATED DATA 'DEATH SPIRAL' SINCE ADDING CanUseIndex


CLASS	OOF_simpleRecordBackend
Method	CommonSimpleDelete
		- added to wrap updating selection and cache
		
CLASS	OOF_dbaseBackend
		OOF_ramBackend
		OOF_ctreeBackend
Method	deleteRecord
		- call CommonSimpleDelete		
		
CLASS	OOF_recordCache
Method	deleteRecord
		- test (*ctx==recOffset) changed to (ctx->currentOffset()==recOffset)	


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/03
MERGE DAVID'S INSTRUMENTATION OF OOFILE WITH INVARIANT DUMPS

CLASS	oofSorter
Method	state
		- added to return 4 char description of state
		
CLASS	dbTable
Method	validStatus
		- added getter for mValid


CLASS	OOF_simpleRecordBackend
Method	setSelection(const dbSelection&		
		- removed Invariants as it just forwards to another setSelection
		  with its own invariants
		  
Method	SortSelectionNow(field pointers)
		SortSelectionInverseNow(field pointers)
		- removed invariants as they are bracketed by sortSelectionNow etc.
		
Method	sortSelectionInverseNow(fieldNumT 
		- added Invariant on exit case for empty or oneRec selection
						  

NOTE: David wrongly had the calls to Invariant bracketed by 
#ifdef OOF_INVARIANT_DUMP_NAME

These should be unconditional

Added calls to OOF_simpleRecordBackend::Invariant in:
- OOF_ctreeBackend::newRecord
- OOF_ctreeBackend::saveRecord
- OOF_ctreeBackend::unloadRecord
- OOF_ctreeBackend::SaveContext
- OOF_ctreeBackend::SaveBlobs (moved one of them BEFORE return)
- OOF_ctreeBackend::HasDirtyUniqueIndices (added braces - invariant killed if() return!)
- OOF_ctreeBackend::deleteRecord
- OOF_ctreeBackend::BuildIFIL
- OOF_ctreeBackend::FieldHasStorage
- OOF_ctreeBackend::rebuild
- OOF_ctreeBackend::buildSchema
- OOF_ctreeBackend::createTableInConnection
- OOF_ctreeBackend::openTableInConnection
- OOF_ctreeBackend::close
- OOF_ctreeBackend::deleteStorage
- OOF_ctreeBackend::CompleteIIDX
- OOF_ctreeBackend::BuildBackendtables
- OOF_ctreeBackend::RebuildIndexMap
- OOF_ctreeBackend::loadBlob
- OOF_ctreeBackend::LoadRecordAtOffset
- OOF_ctreeBackend::CompleteLoadFromOffset
- OOF_ctreeBackend::invert
- OOF_ctreeBackend::recordNumberMatching


General change in oofrec*.cpp
- Invariant("OOF_ctreeBackend:: 
  replaced with correct backend
  Invariant("simpleB::
  
  
General change in oofctre*.cpp
- Invariant("OOF_ctreeBackend:: 
  replaced with shorter
  Invariant("ctB::
  
  
General change in oofram.cpp
- Invariant("OOF_ctreeBackend:: 
  replaced with shorter
  Invariant("ramB::
  
  
General change in oofram.pcpp
- Invariant("OOF_ctreeBackend:: 
  replaced with shorter
  Invariant("rampB::
  
   
General change in all core & ctree folders
- Invariant(.*) now wrapped in assert(...)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/08
GETTING FILE SIZE & USING MODIFICATION DATES

CLASS	oofFileRef
Method	fileSize
		- added Mac implementation, Windows & Unix skel

		
CLASS	dbDate
Method	ctor(const tm&)
		operator=(const tm&)
		setDate(const tm&)
		- added

		
CLASS	oofDate
Method	ctor(const tm&)
		operator=(const tm&)
						

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/08
VISITING DIRECTORY TREES - HANDLING THE ROOT

CLASS	oofDirectory
Method	visitFiles
		- add firstVisit param
		- check enterRoot


CLASS	oofDirectoryVisitor
Method	enterRoot
		- added default virtual imp, returning true	


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/08
FIX MAC FILE REF & DIR BUGS - CREATE DIRS ON OTHER VOLUMES, MAKE COPYING MORE USEFUL

CLASS	oofDirectory
Method	CreateSubdirsAndWorkingDirID
		- assign volRefNum to Working Dir parameter block, not just zero


CLASS	oofFileRef
Method	copyToDirectory
		- made const		
		
Method	lastModified (Mac)
		- subtract one from month in DateTimeRec passing to struct tm
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/08
FIX STRING BUG WITH SINGLE CHAR FIND, INSERT STRINGS

CLASS	oofString
Method	insertChars
		- add optimal case for insert at start
		- fix bug inserting in middle - copying wrong part of original for trailing portion
		

Method	find(char...
		- fix stupid bug for caseInsensitive test was effectively breaking insensitive searches
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/08
ALLOW DEFAULT DATE FORMATS

CLASS	dbDateTime
		dbDate
		dbTime
- sDefaultFormatMask added (each has own)
		
Method	defaultFormatMask
		- added inline getters/setters
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/15
FIX CRASH IN INVARIANT DUMPS

CLASS	OOF_simpleRecordBackend
Method	InvariantDump
		- replace call to mTable->isDirty() with mDirty by itself so we can be called before
		   the backend object has had mTable set.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/15
MERGE DAVID'S INSTRUMENTATION OF dBase BACKEND WITH INVARIANT DUMPS

GENERAL CHANGE - all incoming Invariant calls wrapped in assert(  )

add Invariant to
- OOF_dbaseBackend::BuildBackendtables
- OOF_dbaseBackend::createTableInConnection
- OOF_dbaseBackend::openTableInConnection
- OOF_dbaseBackend::start
- OOF_dbaseBackend::next
- OOF_dbaseBackend::deleteRecord
- OOF_dbaseBackend::gotoRecord
- OOF_dbaseBackend::LoadRecordAtOffset
- OOF_dbaseBackend::SaveContext
- OOF_dbaseBackend::CompleteLoadFromOffset
- OOF_dbaseBackend::BuildDeletedRecordList


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/15
FIX MAC DIR BUG INTRODUCED ON 08/08

CLASS	oofDirectory
Method	CreateSubdirsAndWorkingDirID
		- don't just assign volRefNum to Working Dir parameter block, but copy from other
		   param block (silly local reuse of theVRefNum to contain dirID OR vRefNum, in old
		   and messy code from someone else!)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/15
STORE ADDITIONAL FIELD LABELS IN XML SCHEMAE - FIX BUGS READING REPORTS

CLASS	oofXMLwriter
Method	startSchema
		- if legal version of  field/table name doesn't match, store additional 'label' attribute

Method	startElement
		- remove replaceChar('.', ' ') so spaces in field & table names recreated & use
		   matching with transformed legalName of schema. This can have hash-style collisions
		   but that is less likely than the current problems.
		

CLASS	oofXMLschemaParser
Method	startElement
		- look for 'label' attribute and set field or table name from that in preference to main name


CLASS	oofXMLdataParser
Method	startElement
		- add loops to search for fields and tables matching on converted names
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/15
SUPPORT USER-OVERRIDEN HEADINGS IN XML REPORTS WITH EMPTY STRINGS
(ie: user trying to hide heading)

CLASS	dbView
Method	getHeading
		- change 2nd param to optional bool* as it was a flag saying "returnOnlyCustom" but
		   we couldn't tell the difference between an empty custom return and an empty string
		   returned because it wasn't a custom heading


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/18
REVERT PARTIAL CHANGES FOR LOOKUPS IN XML PARSING - FIX BUGS READING REPORTS

CLASS	oofXMLdataParser
Method	startElement
		- REVERT add loops to search for fields and tables matching on converted names
		- use oofXMLwriter::decodeName on incoming name
		- use oofString == compares instead of strcmp for name comparisons

CLASS	oofXMLwriter
Method	startSchema
		- REVERT if legal version of  field/table name doesn't match, store additional 'label' attribute
		- use encodeName instead of legalName
		
Method	startElement
		- REVERT use matching with transformed legalName of schema. 
		- use encodeName instead of legalName
		
Method	CalcNames		
		writeRecord
		- use encodeName instead of legalName

Method	legalName
		- removed
		
Method	encodeName
		decodeName
		- added to encode in a totally reversible fashion using only XML element characters
						

CLASS	oofXMLschemaParser
Method	startElement
		- REVERT look for 'label' attribute and set field or table name from that in preference to main name
		- use oofXMLwriter::decodeName on incoming name
		

CLASS	oofString
Method	isAlphaNumeric	
		- added
		

CLASS	dbRelRefBase
Method	fieldName		
		- add assert to protect against relationships not fully declared
		   (encountered error using ooftst51.h on Mercator's KIDMAP console harness)
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/21
SET DIRECTORY PATH CORRECTLY WHEN GIVEN ABSOLUTE PATH TO EXISTING DIR ON MAC

CLASS	oofDirectory
Method	CreateSubdirsAndWorkingDirID
		- always set mPath

Method	GetCurrentLocation
		ctor(short vRefNum, long dirID, ...
		ctor(const FSSpec&
		- put catch all to make sure mPath ends in ':'
		

CLASS	oofFileRef
Method	copyToDirectory
		- test of source & dest server vol params was performed twice on dest server
		  so failed to tell if volumes on different servers.									
		  
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/27
SET MAC FILE TYPES

CLASS	oofFileRef
Method	setFileType
		- added



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/27
DAVID'S FIX TO DEBUGGING CRASH IN CONSOLE SAMPLES
(If OOF_Debug defined and using a library like DebugNew)

CLASS	OOF_recordSelection
Method	receiveMsg
		- add an mListensTo=0 so we don't try unsubscribing in the oofListener dtor
		   was only a bug if OOF_Debug defined because this entire method is conditionally compiled
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/08/31
FIX INCONSISTENT MAC DIRECTORY CONSTRUCTION 

CLASS	oofDirectory
Method	ctor(const FSSpec&)
		- if pass in FSSpec of file, don't leave the filename in the path,
		    was leaving in the path and (recently) appending a colon. Correct path excludes the file.
		    
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/02
MERGE DAVID FURTHER CORE INSTRUMENTATION

CLASS	OOF_ExpandableLongArray
Method	describe
		- added but rewrote to use value() instead of copying array to local temp array
		   also didn't make virtual as there are no virtual methods in this class


CLASS	OOF_recordSelection
Method	describeRecsRep
		- added (rename from describemRecsRep)
		

DID NOT COPY
oofBroadcaster instrumentation - was very quick hacks and too intrusive


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/02
MERGE DAVID (PARTIAL?) FIX FOR TABLES BEING INVALID IF NON-INDEXED RELATIONSHIP TRAVERSAL

CLASS	dbRelRefBase
Method	relateFromRecord
		- copy the setTableValid call to before we do the search so searches in the current table don't trigger
		   a further call to MakeTableValid
		   Note: David's original testing was with this line *moved* not just copied, and caused a further
		   problem with ooftst06 failing assert(isTableValid()) the 8th line of dbTable::MakeTableValid.

		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/02
COMPILE WITHOUT WARNINGS WITH OOF_Debug DEFINED

CLASS	OOF_recordSelection
- mPrototypicalTable changed from const dbTable* to dbTable*

Method	ctor(all)
		- change param prototypical table from const dbTable* to dbTable*
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/04
BETTER DEFAULT FOR SETTING MAC FILE TYPES - USE CURRENT APP

CLASS	oofFileRef
Method	setFileType
		- if user doesn't specify then obtain current process signature as creator type
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/05
FIX NON-INDEXED JOIN TRAVERSALS (WITH NEW RECORDS IN CACHE)

CLASS	OOF_simpleRecordBackend
Method	loadRelatedContextJoiningFromTo
		- test implementation of preserving a cache of just new records - doesn't work!
		
		
CLASS	dbRelRefBase
Method	relateRecord
		- don't broadcast selection change to mTable, only want to update RHS so use
		   mActualRelatedTable


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/26
COMPILE RELEASE UNDER UNIX
(without finishing implementation of some file handling routines)

CLASS	oofFileRef
Method	renameFile
		- made (stub) non-const
		
Method	copyToDirectory, moveToDirectory
		- name param inDir so the exception test compiles
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/30
COMPILE UNDER CODEWARRIOR PRO 5.2

CLASS	dbBLOB
Method	extract
		- conditionally use std::ios_base::fmtflags instead of long for flags variable
		
FILE		oofArray.h
- add #include oofios.h so can compile when haven't included oofios.h before		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/13
START OF MERGE DAVID INVARIANT AND DBASE MODS



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/08
MERGE DAVID MODS INTO LATEST 990906

CLASS OOF_simpleRecordBackend
Method	SearchEqualNonIndexed
		- added debug code
		
CLASS OOF_simpleRecordBackend
Method Invariant
		- added invar cases for sorter state, selection state and table state


CLASS	OOF_simpleRecordBackend
Method	state
		- added it

CLASS 	OOF_simpleRecordBackend
Method 	InvariantDump
		-added validatingDepth state dump


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/08 
ADDING VALID INVARIANT STATES
CLASS 	OOF_simpleRecordBackend
Method Invariant
	-added UCNA  & no sorter for ramp backend desstructor 

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/09
ADDING VALID INVARIANT STATES

CLASS 	OOF_simpleRecordBackend
Method Invariant
	- added 	'LVNS' & sorter state'ONsx' 
	     		'LIDE' no sorter
	 		'LVNA' & 'OnSx'
			UVNA  &  OnSx'
	   	 	NVNR  & 'Onsx'
	  		'NVDE &"Onsx"
	 		'LVDO' & 'ONsx'
	 		'LVNO'  & 'ONsx'
 	
 	 		'LVDO' & 'Onsx'
 		  	'NVNO' & 'Onsx'
 			'LVDS'  & 'ONsx'
 			'NVDO' &  'Onsx'
 	
 	 		'NVNS' & 'Onsx'
 	 		'LVDS' &  'Onsx'
 	 		'NVDS' &  'Onsx'
 	
 			'LVNE'  & 'ONsX'
 	
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/13
ADDING VALID INVARIANT STATES

CLASS 	OOF_simpleRecordBackend
Method 	Invariant
 		-added  	'UIDE'  'ONsX'
				'UVNO' &  ONsX	
				'UCNA' * 'ONsx'
				'LVNO' & 'ONsX
				'LVNS' & 'ONsX'


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/14
ADDING VALID INVARIANT STATES

CLASS 	OOF_simpleRecordBackend
Method 	Invariant
		-added  	'LVDO' & 'OnsX'
				'LVDA' & 'ONsX'
				UVDA' & 'ONsX'


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/17


CLASS 	OOF_simpleRecordBackend
Method 	getFieldWriteDest
		-added  	inavar asserts during debugging
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/21
MONITORING OF TABLE STATE
CLASS 	dbTable
Method 	state
		- added it

 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/21
MONITORING OF TABLE STATE
CLASS 	OOF_tableBackend
Method 	describe
		- added it

CLASS  	describe
Method    	OOF_simpleRecordBackend::
 		- added it
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/22
FIXING BLOB FAILURE WHEN DUMPING TABLE WITH BUFFER FORVER ON
CLASS 	OOF_ctreeBackend
Method 	LoadRecordAtOffset
		- added ResetBlobs()

 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

FIXING BLOB FAILURE WHEN DUMPING TABLE WITH BUFFER FOREVER ON

CLASS 	OOF_ctreeBackend
Method 	LoadRecordAtOffset
		- removed ResetBlobs()

CLASS	dbTable 
Method	ContextChange
		- changed  mBackend->ContextChange to  mBackend->CachingContextChange wraong wrong wrong i think 
		removed it
CLASS	OOF_ramBackend
Method	LoadRecordAtOffset
  		- ResetBlobs()
  		
 CLASS 	OOF_simpleRecordBackend
Method 	Invariant
		-added  	'LVDO' & 'OnsX'
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/26

FIXING BLOB FAILURE WHEN DUMPING TABLE WITH BUFFER FOREVER ON

	
CLASS 	OOF_simpleRecordBackend
Method 	describeBlobs
		- added it
dbBLOBstorage::blobState() const
	

CLASS 	dbBLOBstorage
Method 	blobState
		- added it
CLASS 	OOF_simpleRecordBackend
METHOD	CachingContextChange
		- Added a ResetBlobs call inside the  isDirty() if statement

 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/26

CLASS 	OOF_simpleRecordBackend
Method 	Invariant
		- Added early return (true) if table is closed
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/09/30

CLASS 	OOF_simpleRecordBackend
Method 	Invariant
		- Added 'LVDA' & 'ONsx'

		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/04
FIX FAILURE OF DBASE BACKEND WHEN RELOADING BLOBS

CLASS	OOF_dbaseBackend
Method 	loadBlob
		- implemeted it 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/10
DBASE III BACKEND IMPLEMANTION
 
CLASS  	OOF_dbaseBackend
Method 	WriteNewBlob		
		- implemented  DB3_MEMOS case
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

DBASE III BACKEND IMPLEMENTATION
 
CLASS  	OOF_dbaseBackend
Method 	SaveBlob		
		- implemented  DB3_MEMOS case

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

DBASE III BACKEND IMPLEMENTATION
 
CLASS  	OOF_dbaseBackend
Method 	SaveBlob		
		- IN db3_memo case 	removed + 4 offsett in 
		unsigned long seekPos = recNo*512 + 4;	 //DAVID DEBUG NOT OOFREC NUMBER BUT THE MEMO NUMBER POINTED TO BY DBF
		as this is a dbIV memo field requirment			

	
	
	
CLASS 	OOF_dbaseBackend 
METHOD	BuildBackendtables(bool rebuilding)
		- 	on oofdebug case changed  	"OOF_ramBackend::BuildBackendtables odd buffer size at field:" << fld->fieldName());
						to		"OOF_dbaseBackend::BuildBackendtables odd buffer size at field:" << fld->fieldName());

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/12
INSTRUMENTATION 

CLASS 	dbTable
Method	validatingDepth 
		- Added it to monitor recursive validations
Method 	
Member	mValidating 
		- added it	

		
CLASS 	OOF_tableBackend
Method	describe
Method	blobState
		- added them
						

CLASS 	dbTable
Method 	state
		-changed to invariantDump	
		
CLASS 	dbBLOBstorage
Method	blobState
		- wrapped in #ifdef OOF_DebugDumpBlobState
		
CLASS 	dbBLOB	
Method	blobState 		
		- wrapped in #ifdef OOF_DebugDumpBlobState
		
CLASS	OOF_ctreeBackend
Method	LoadRecordAtOffset
		-  wrapped  in #ifdef OOF_DebugDumpBlobState
CLASS   	dbTable
Method 	invariant dump		




-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/13
MERGE DAVID MODS (search backwards for)
"START OF MERGE DAVID INVARIANT AND DBASE MODS"

CLASS 	dbTable
- mValidating removed as it is not set anywhere

Method	validatingDepth
		- removed as mValidating is not used
		
Method	invariantDump
		- renamed to describeInvariant so matches backend
		
		
CLASS	OOF_tableRecordBackend
Method	describe
		- renamed to describeInvariant as it is not quite the same philosophy as 
		  the other describe's - they describe the definition of an object, not its state


CLASS	OOF_simpleRecordBackend
Method	InvariantDescription	
		- added with the guts of string construction from describe()
		  and InvariantDump() as they are identical
		- removed call to dbTable::validatingDepth

Method	state
		- fix like 99/08/15 FIX CRASH IN INVARIANT DUMPS, use mDirty, not via mTable				  

Method	describe
		- call InvariantDescription
		- renamed to describeInvariant
		- change decl so not pure virtual
		
Method	describeState
		- change decl so not pure virtual
		
Method	InvariantDump
		- call InvariantDescription


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/13-14
MAKE INVARIANTS LOWER OVERHEAD WHEN ASSERTS STILL ACTIVE


CLASS	OOF_simpleRecordBackend
Method	Invariant
		- make body returning true if OOF_Debug not defined
		- add UINA & ONsx case
		- fix the 'UVDA' test which directly OR'd it with ret, instead of comparing to curState
		  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/13
FIX BUG INTRODUCED IN DB3 IMPLEMENTATION - OOFTST47 failing

CLASS             OOF_dbaseBackend
Method            loadBlob
                        -removed bloboffset
                          changed all uses of bloboffset to blobOffset


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/13
DAVID MERRYWEATHER'S CHANGES TO COMPILE WITH C++Builder4

FILE		oof0.h
#if __BCPLUSPLUS__ >= 0x0540
#define OOF_USE_ANSI_STREAMS 1


FILE		ooffiles.cpp
- use sys/ prefix in front of types.h and stat.h for Windows compiles
- #if __BCPLUSPLUS__ >= 0x0540
      #define _stat stat
      
      

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/04
COMPLY WITH INSIDE MAC ADVICE TO FLUSH VOLUMES TO FORCE FILE UPDATES AND ALLOW UNMOUNTS

CLASS	oofFileRef
Method	flushVolume
		- added
		
Method	copyFileToDirectory, writeTextFile
		- call flushVolume after all FSClose's
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/15
FIX XML NAME ENCODING TO COPE WITH LOW NON-NUMERICS AND LEADING 'xml'

CLASS	oofXMLwriter
- kEncodedNameOptPrefix added

Method	encodeName
		- use "-%03ho" instead of "-%3ho" so numbers less than 3 digits octal have leading zero
		- add leading Z-_ instead of just 'Z' if non-alpha character at end, so have recognisable string
		   to drop on parsing (Z-_ in original would become Z---055)
		 - add leading Z-_ if original starts with "xml" in any case
		 
Method	decodeName
		- use oofString::startsWith to check for special prefix
		
				 
CLASS	oofString
Method	firstChar()
		- added test to have symmetry with lastChar()

Method	startsWith(char), startsWith(const char*)
		- added to have symmetry with endsWith(...)
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/16
COPE WITH NAME QUERIES ON UNUSED RELATIONSHIPS

CLASS	dbRelRefBase
Method	fieldName
		- allow for relationships which have not been completely specified and return a null name
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/16
ROLL IN DAVID FIX - UPDATE DBASE MODIFICATION DATES WHEN MODIFY RECORD

CLASS 	OOF_dbaseBackend
- added mModYear; mModMonth; mModDay;

Method	createTableInConnection
		- modified code to use above members instead of local variables
		
Method 	 openTableInConnection
		- added code to load above members from file header
		
Method	SaveContext
		- added functionality to conditionally  update last write access field of dbf file.   
			
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
****** 99/11/16 START ROLLING IN DAVID INVARIANT CHANGES

99/10/21
ADDING VALIDATING DEPTH CODE

CLASS	OOF_simpleRecordBackend
Method 	InvariantDescription
			- added validatingDepth state
			
CLASS 	dbTable
Member 	mValidating

CLASS	dbTable
Method	validatingDepth
			- added it
CLASS	dbTable
Method	MakeTableValid
			-added validating depth handling
			
CLASS 	dbTable
Method	dbTable
			- added validating depth initialisation						
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/10/21

FIXING ILLEGAL STATE LVNE
CLASS 	OOF_simpleRecordBackend
Method	selectNone
			- swapped order of calls:
		selectNone
		unloadRecord 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/06 
REWRTITE INVARIANT CODE 

CLASS 	OOF_simpleRecordBackend
Method	Invariant
		- rewitten to cleaner and moree logical

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/11

INVARIANT STATE LVNE

CLASS 	OOF_simpleRecordBackend
Method	Invariant
			- comment out LVNE handling code
			
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/11

IMPROVE SORTER STATE CODE

CLASS 	dbSorter
Method	state
		- rewrite to get rid of endian problems
					
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/11

IMPROVE BACKEND STATE STATE CODE

CLASS 	OOF_simpleRecordBackend
Method	state
		- rewrite to get rid of endian problems			
				
			

****** 99/11/16 END ROLLING IN DAVID INVARIANT CHANGES
CLASS	dbTable
- mValidating renamed to mValidatingDepth because it's not a flag it's a depth count

Method	validatingDepth
		- return type changed from unsigned char to int so won't wrap around if goes negative
		
CLASS	OOF_simpleRecordBackend
Method	InvariantDescription		
		- removed unnecessary cast of validatingDepth() to int
		
		
		
FILE	oof0.h
- change OOFVERS_CORE to 0x01305d01	// Version 1.3.0b5d01		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/21
SUPPORT FOR REPORT EDITING

CLASS	dbView
Method	clone
		- added virtual to call simple copy ctor


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/11/23
DAVID FIX FOR STRING FIND BUG

CLASS	oofString
Method	find(const char* inStr
		- first character comparison in caseInsensitive mode was case sensitive! 
		   Added toupper(mBody[i])
		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/07
ADD QUERYING OF ARRAY ITERATOR

CLASS	OOF_ExpandableLongArray
Method	index
		- added to return mInternalIter
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/07
ADD VIEW SUPPORT FOR EASY RETRIEVAL OF RECORD NUMBER COPING WITH NO TABLE

CLASS	dbView
Method	recordNumber
		- added simple inline forwarder to mTable that can return 0 if no table
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/14
ADD VIEW CLONING FOR INDEPENDENT CLONES OF RELATED VIEWS

CLASS	dbView
Method	FinishCopy
		- move the cloning of the table out because varies according to caller
		- compare mTable with the rhs table to determine if need to adjust fields
		
		
Method	ctor(const dbView& rhs, dbTable* newTable)
		- call FinishCopy alone, removing AdjustFieldsToNewTable
		
Method	clone
		- add bool param indicating want to clone table as well, default false
		- don't clone table from rhs unless mCloneSource set. Was setting up for a leak
		   or failure by always cloning the table.
		
Method	ctor(dbRelRefBase&  and dbRelRefBase*...
		- add assert(!cloneSource);  // don't support cloning related tables
		


CLASS	dbField
Method	equivalentFieldFromTable
		- add recursive search to cope with related fields
		
		
CLASS	dbRelRefBase
Method	OurInverse
		- renamed as inverse
		- made public

		
CLASS	dbTable
Method	cloneTableConst				
		- added pure virtual

Method	cloneTableSharingSelection
		- call cloneTableConst not cloneTable		

Method	cloneTableWithoutSelection
		- call cloneTableConst not cloneTable		
		

FILE		oofmacro.h
Macro	cloneTableConst
		- added same as old cloneTable
		
Macro	cloneTable
		- call ensureSelectionLoaded then cloneTableConst				

Macro	cloneTableSharingSelection
		- call cloneTableConst not cloneTable		

Macro	cloneTableWithoutSelection
		- call cloneTableConst not cloneTable		
		
		

CLASS	dbTableOwningFields
Method	cloneTable
		- removed (was copy of oofmacro version) so can't instantiate directly


FILE		oofxml.cpp
- add #include "oofmacro.h"
- add decl of dbTableOwningFieldsXML as trivial subclass of dbTableOwningFields

CLASS	oofXMLschemaParser
Method	startElement				
		- create instances of dbTableOwningFieldsXML


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/15-19
FIX CHANGE BUFFERING ON CURRENT RECORDS AND NESTED RELATED RECORDS

CLASS	dbTable
Method	setSaveOption
		- only do something if option actually changes!
		
Method	setSelection(const OOF_Selection* rhs)
		- if bufferForever & valid table, call mBackend->CachingContextChange to ensure
		   that modified current record flushed to cache.


CLASS	OOF_simpleRecordBackend
Method	MaybeLoadRecordFromCache
		- move mDirty change after the AdoptBuffer so we don't violate the Invariant

Method	loadRelatedContextJoiningFromTo
		- change assert(ctx && ctx->isNew()) to an if() as bufferForever mode means dirty
		   records will stay in the related cache even after the unload preceding this call
		- rename local tempNewRecCache to savedCache as it's not just about new records

Method	CacheDirtyCurrentRecord
		- added 
		
Method	CachingContextChange
		- moved most of body to CacheDirtyCurrentRecord	
		
Method	unloadRecord
		- for bufferForever mode, CacheDirtyCurrentRecord 		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/09
IMPROVE ENCODEENTITY PERFORMANCE
CLASS 	oofString:
Method	encodeEntity
		- added measuring code to measure and preallocate a buffer to hold the encoded string


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/09
CASE SENSITIVE REPLACE FUNCTIONS
		
CLASS  	oofString 
Method	replaceFirstString
		- added case sensitive option

Method	replaceString
		- added case sensitive option

Method	replaceBetween
		- added case sensitive option


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/20
ROLL IN BRUNO'S FIX FOR DOUBLE-DECODING XML
		
CLASS	oofXMLdataParser
Method	charData
		- remove call to oofString::decodeEntity as expat has already decoded so sometimes we
		   were mangling text by double-decoding.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/21
FIX INVARIANT CRASHES WHEN USING RELATED TABLES IN RAM

CLASS	OOF_simpleRecordBackend
Method	Invariant
		- comment out assert on depth>1 as seems to occur with non-indexed joins
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/24
DISABLE INVARIANT CRASHES ON WINDOWS

CLASS	OOF_SimpleRecordBackend
Method	Invariant
		- return true if not on Mac - the state evaluation is not endian-safe

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
99/12/24
FIX REPORT CRASHES DUE TO ARRAY BUG

CLASS	OOF_ExpandableLongArray
Method	ctor
		- init mInternalIter(0) so if anyone ever calls index() before iterating,
		   they get the first cell (not assert due to bad value)
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/06
MAKE IT POSSIBLE TO OUTPUT PICTURE FILENAMES

CLASS	oofPict
Method	describe
		- added to return filename or picture resource ID
		   
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/06
AVOID CLASHES BETWEEN OOFILE AND QUICKTIME/WINDOWS

FILE		oofbool.h
- change  Boolean from typedef bool to typedef unsigned char 
(had to reverse later because clashes with PP2MFC or something else)
- moved Boolean to oofgui.h instead and left as bool


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/07
GUARD USE OF SELF-DELETING REF COUNTED OBJECTS

CLASS	OOF_mixRefCount
Method	decRefs
		- added assert to guard against too many dec's


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/11
REGRESSION TESTING - FIX BUG TRIGGERING NEW ASSERT PROTECTION OF SELECTIONS
(was not causing user errors)


CLASS	OOF_ctreeKeywordIndex
Method	searchFieldAnyWords
		searchTableAnyWords
		- create newSelection using mTable->prototype(), not schTable->prototype()
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/11
FIX SEARCH ANY WORD BUG IN CTREE
	
CLASS 	OOF_ctreeKeywordIndex
Method 	searchFieldAnyWords
			- passed  mTable->prototype parametr to newSelection call instead of schTable->prototype

CLASS OOF_ctreeKeywordIndex:
Method	searchTableAnyWords
			- passed  mTable->prototype parametr to newSelection call instead of schTable->prototype

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/11
FIX RAMP SAVE BUG

CLASS 	dbConnect_ramp
Method	save
		changed close call to save
CLASS 	dbTable
		-Made OOF_rampBackend a friend

CLASS 	OOF_rampBackend
Method	save
		- added it and moved content of close into it
		
CLASS 	OOF_rampBackend
Method	close
		- changed to just a call to save
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/12
PREVENT ERROR IN RELEASE VERSION WHEN ASSIGN LARGE FIELDS

CLASS	dbChar
Method	setString
		- for content too large, make error report OOF_Debug mode only
		- truncate large content, don't ignore totally

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/17
FIX FAILURE TO PARSE UNKNOWN SERIALISED XML ELEMENTS

CLASS	oofSerializableFactory
Method	makeObjectMatching
		- return null if no match
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/17
MINOR MODS TO BUILD WINDOWS REPORT SAMPLE WITH ALL FILES INCLUDED, NO LIBS

FILE		ooffiles.cpp
- add extra test for _WIN32


FILE		oofmswin.cpp
- change #include "oofmswin.h" from .hpp

FILE		oofmswin.h
- change #include "oof4.h" from .hpp


FILE		oofplat.h
- define _Win32 also based on _Windows and _WIN32 for some VC scenarios


FILE		oofrepeditx.h
- fix mispelt (guarded) #include "oofPrnWn.h"


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/26
CORRECT INVARIANT NAME STRING
CLASS 	OOF_dbaseBackend
Method	next
	- changed "OOF_dbaseBackend::start"
			to  "OOF_dbaseBackend::next"

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/27
SUPPORT FOR REPORTS AUTO-DISABLING EDITING JOIN KEYS

CLASS	dbField
Method	fieldIsJoinKey
		- added

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/31
BUILD UNDER SOLARIS

FILE	oof4.h
	ooffiles.h
- remove conditionals prevent #include <time.h> as it caused failure to recognise "tm"


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/02/15
INCLUDE GARETH WHITE'S FIX TO COPE WITH SUSPECT DBASE FILES
FROM MS ACCESS AFTER Y2K

CLASS	OOF_dbaseBackend
Method	openTableInConnection
		- mod the year to cope with 100 or higher (standard says
		  only valid between 1-99 but MS didn't read)


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/02/15
COMPLETE RELATIVE PATH HANDLING AND USE FILE REFS IN OPENING DATABASES

CLASS	oofString
- enum pathTypeT moved to oofPathString

Method	pathType, isRelativePath(*), relativePath*(*)
		- all moved to oofPathString
		
		
CLASS	oofPathString
- added in ooffiles package

Method	pathType
		- added test for null char* so won't crash strlen
		
Method	isRelativePath()
		- added inline method to test self		


FILE	oof1.h
- added forward decl of oofFileRef


CLASS	oofFileRef
Method	operator=(const FSSpec&)  (Mac only)
		- added mainly to allow setting null refs
		
Method	operator=(const oofString&)
		- added mainly to allow setting null refs


CLASS	oofDirectory
Method	setDirFromPath - all 3 versions
		- add logic to convert incoming path string
		  to new platform
		  

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/02/17,27
USE XML STANDALONE READING AND WRITING WITHOUT OOFILE DATABASE 
		  
CLASS	dbTableOwningFieldsXML
		oofXMLwriter
		oofXMLschemaParser
		oofSerializableFactory
		oofSerializable
		oofSerializableParser
		oofDataParser
- moved to oofdbxml.cpp


CLASS	oofXMLwriter
- kEncodedNameOptPrefix,  kEncodedNameOptPrefixLen
  moved to oofTagMaker
  
Method	encodeName
		decodeName
		- moved to oofTagMaker  


CLASS	oofTagMaker
Method	makeSerializableElement
		- moved to oofXMLwriter
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/01/27
SUPPORT FOR REPORTS AUTO-DISABLING EDITING JOIN KEYS

CLASS	dbField
Method	fieldIsJoinKey
		- added
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/03/10
FIX CACHING ISSUES WITH SORTING SELECTIONS WITH DIRTY CACHES
(fixes some bugs with report editing)

CLASS	OOF_simpleRecordBackend
Method	SortSelectionNow(const dbChar*
		SortSelectionInverseNow(const dbChar*
		- rewritten to avoid cloning a table because that loses the dirty record cache
		- merged David's fix:
		   - renamed local var firstTimeIn to doneFirstSwap (and swapped sense of test)
		      to be clearer why we were testing this outside the loop
		    - use asChars() instead of copyString() for faster copying of dbChar field to the
		       oofString compareField
		       

Method	CachingContextChange
		- move ContextChange call after putting current dirty record into cache
				       

CLASS	OOF_ctreeBackend
Method	next
		- add CacheDirtyCurrentRecord() before replacing record with ::NextRecord

Method	start
		- add CacheDirtyCurrentRecord() before replacing record with ::FirstRecord
		
Method	LoadRecordAtOffset		
		- add CacheDirtyCurrentRecord() before replacing record with MaybeLoadRecordFromCache
				       

CLASS	OOF_dbaseBackend
CLASS	OOF_ramBackend
Method	LoadRecordAtOffset		
		- add CacheDirtyCurrentRecord() before replacing record with MaybeLoadRecordFromCache


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/03/21
HTML ENCODE DECODE METHODS IN OOFSTR TO HANDLE CHARS>128
	
CLASS	oofString	
Method	decodeEntity
		- Fixed &# decode and made a bit more efficient
		- Fixed hash switch by removing '&' and ';" chars they are not needed as hashing delimits on ';' and
		   previous code section removes the '&'
				
Method	encodeEntity
		-added missing code to handle ascii chars greater equal to 128 (ie &# sequences)

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/03/27
ADD DAVID'S FIX XML ENCODE DECODE METHODS IN OOFSTR

CLASS	oofString	
Method	decodeEntity
		- Fixed &# decode and made a bit more efficient
				
Method	encodeEntity
		- write hi values as hex, was writing decimal
		
Method	utf8To8BitAscii
		-added it (only one of David's methods)
		
		
CLASS 	oofXMLdataParser
Method	charData
		- added call to utf8To8BitAscii 

		
CLASS	OOF_XMLrepLayoutParser
Method	charData
		- added call to utf8To8BitAscii 	
		
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/04/13
DAVID's FIXES FOR  CORRECT ENCODING OF HI-ASCII

CLASS	oofString
Method	encodeEntity
		- added conditional numerical encode to handle decimal or hex digits

Method	decodeEntity
		- added conditional numerical decode to handle decimal or hex digits

Method	utf8To8BitAscii(const char*, length
		- added static conversion utility
		
Method	utf8To8BitAscii(const oofString&
		- added inline static
		

CLASS	oofXMLdataParser
Method	charData		
		- use oofString::utf8To8BitAscii				


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/08
UNIX BUILD AND FILE HANDLING IN UNIX

CLASS	oofDirectory
Method	extract
		- move temp oofDirectoryList out of call to visitFiles and make local
		   (also needed this for CW Pro6)
		
Method	delDirectory		
		- move temp oofDelDirTreeVisitor out of call to visitFiles and make local


CLASS	dbBLOBstorage
- mBody changed from void* to char*

Method	adoptBody
		- change param from void* to char*
		
Method	allocRoomFor
		orphanBody
		bodyAddress
		setBytes
		- return char* instead of void*


CLASS	dbBLOB
Method	adoptBody
		append
		setBytes
		- change param from void* to char*
		
Method	allocRoomFor
		orphanBody
		bodyAddress
		- return char* instead of void*
		

CLASS	dbText
Method	adoptBody
		append
		- change param from void* to char*


CLASS	oofArray
- mBits changed from void* to char*

Method	CloneBits
		AllocBits
		- return char* instead of void*

CLASS	OOF_simpleRecordBackend
Method	AdoptBuffer
		- changed local bodyPtr from void* to char* to call adoptBody

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/10
CARBONISING
CLASS 	oofDirectoryc
Method 	closeWDDirectory()
		- wrapped into #ifdef TARGET_API_MAC_CARBON
		
CLASS 	oofDirectory
Method	CreateSubdirs
		 - made it


CLASS	oofDirectory
Method 	gotoDirectory
		 - wrapped owrking directroy code into ifndef TARGET_API_MAC_CARBON
		 
CLASS 	oofDirectory
Method 	~oofDirectory()
		-wrapped closeWorkindDir in idndef TARGET_API_MAC_CARBON	
		
CLASS	oofDirectory
Method	delDirectory
		-wrapped closeWorkindDir in idndef TARGET_API_MAC_CARBON

CLASS	oofDirectory
Method	CreateWorkingDirID
		- wrapped closeWorkindDir in idndef TARGET_API_MAC_CARBON

CLASS	oofDirectory
METHOD	setDirFromPath
		- wrapped PathToDirID in idndef TARGET_API_MAC_CARBON
	



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/12
	SETTING STR255 WITH STR&$ PARAMS

CLASS	oofString
Method	setStr255
		- added a version with Str64 argument
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/12
	CARBONISING OOFILES


CLASS	oofDirectory
Method	CreateHardDirID
		renamed from crabon version of CreateWorkingDirID
		- cleaned up code
		- fixed ::: ... sequence handling

CLASS	oofDirectory
Method	createDirID
		-Added it

CLASS	oofDirectory
METHOD	oofDirectory
		- replaced CreateWorkingDirID with createDirID

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/22
BUG IN CARBON CreateSubdirsAndWorkingDirID

CLASS 	oofDirectory
Method	CreateSubdirsAndWorkingDirID
		- added anew local varible thDirID
		- added to code to mDirID after creation.
			

CLASS 	oofDirectory
Method	CreateSubDirs
		- added it
CLASS 	oofDirectory
Method	setDirFromPaths			
		- changed CreateSubdirsAndWorkingDirID to CreateSubDirs
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/23
CARBONISING CONSTRUCTOR
			
CLASS	oofDirectory
Method	oofDirectory
		- carbonised FSSpec version

			
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/05/24
CARBONISING OOFILES
CLASS	oofDirectory
Method	GetCurrentLocation
		-  made a carbonised version

CLASS	Directory
Method	PathToDirID
		- made second carbon version wrapped in ifdefs
			
CLASS	oofDirectory
METHOD	setDirFromPath
		- unwrapped PathToDirID in idndef TARGET_API_MAC_CARBON


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
CARBONISING COPYTODIRECTORY
2000/06/05
CLASS	oofFileRef
METHOD 	copyToDirectory
		added ifdef for carbon case to use NewPtr indtead of NewPtrSys


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
CARBONISING OOF_SetPath OOF_CheckPath
2000/06/05
		
FUNCTION OOF_CheckPath
		-Made carbon version with following changes
		  VolumeParam to HVolumeParam
		  then changed HVolumeParam to HParamBlockRec
		  PBGetVInfoSync to PBHGetVInfoSync
		  removed working dir code replaced with hsetvol call
		
FUNCTION OOF_CheckPath
		-Made carbon version with following changes
		  VolumeParam to HVolumeParam
		  PBGetVInfoSync to PBHGetVInfoSync
		  removed working dir code replaced with hsetvol call
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
FIX TO OOFILES fopen FUNCTION
2000/06/15
		
CLASS	oofFileRef		
Method	fopen
		- made a constant method
	
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/06/30
BUILD AS PART OF QUICKTIME COMPONENT ON WINDOWS
(reference to streams without using them causes link errors)

FILE		oof0.h
- #ifndef OOF_NO_STDLIB clear OOF_USE_ANSI_STREAMS & OOF_HAS_ANSI_STRINGS


FILE		oofarray.h
- make #includes of oofios  conditional on #ifndef OOF_NO_STDLIB


CLASS	OOF_ExpandableLongArray
Method	describe
		- only exists #ifndef OOF_NO_STDLIB
		
FILE		oofstr.h
- make #includes of sstream, string, fwd stream decls  conditional on #ifndef OOF_NO_STDLIB

			#include <sstream		


CLASS	oofString
Method	describe
		- only exists #ifndef OOF_NO_STDLIB

Func		operator<<(ostream& os, const oofString& str)
		- only exists #ifndef OOF_NO_STDLIB
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/07/04
MINOR REFACTORING OF BROADCASTERS TO BE EASIER TO UNDERSTAND & MORE ROBUST

CLASS	oofBroadcaster
- mBroadcasting renamed to mNestedBroadcastingDepth to better indicate its meaning

Method	isBroadcasting
		- added

Method	askAllReturningAny
		askAllStoppingAtFirst
		- check to see if a rcvr is NULL - may occur in nested broadcasts
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/09/14
UNIX DEBUGGING TEST 50 & OTHER ERRORS DELETING TEMP DATABASES

CLASS	oofErrorReporter
Method	raise(ostream& os...	
		- add an endl to make messages easier to read
		

CLASS	dbConnect_ctree
Method	deleteStorage		
		- don't blithely assume a "Blobs" file is one we can delete - check mHasBlobs
		

FILE		ooffiles.cpp
- add #include <errno.h> for Unix

		
CLASS	oofE_File
Method	ctor
		- made non-inline
		- for Unix, use strerror to supply extra message if not passed in
		   so error number is translated		

Method	deleteFile
		- added optional param ignoreMissingFile=true 
		- throw an oofE_FileNotFound depending on the above
		
				   
CLASS	oofE_FileNotFound
		- added trivial subclass of oofE_File 


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/09/14
USE OF DATABASE DIRECTORY WITH RELATIVE PATHS

CLASS	oofPathString
Method	pathType
		- add case for '~' as eUnixAbsPath


CLASS	oofDirectory
Method	ctor(const char*...
		- add optional bool param makeAbsolute=true
		
Method	setDirFromPath _Unix
		- add optional bool param makeAbsolute=true
		- set the dir to be an absolute path if requested
		
Method	setDirFromPath _Macintosh
		- add optional bool param makeAbsolute=true
		- make more efficient by using path type already calculated in relative conv.
		
TO DO
- similar for Windows
- ooftst51 which tests attempting to reference a relative directory and delete it		
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/09/22
MAKE MORE FILES COMPILABLE WITH OOF_NO_STDLIB DEFINED

FILE		oofios.h
- add wrapper of #ifndef OOF_NO_STDLIB for entire header file


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/10/20-22
MERGE DAVID CARBONISED  & SERVER-AWARE BRANCHES
(changes noted below may have related comments above from his CARBONISING notes)

CLASS	dbConnect
Method	setToStartState
		stateTransition
		- added

Method	writeOOFSchemaFile
		- added but renamed to writeSchemaFile (OOF seems a little redundant :-)



CLASS	dbTable
- IGNORED David's addition of friend class dbConnect_ramp
- enum connectionFileStateT added
- mFileState added

Method	ctor(all)
		- init mInTransaction(false), mTransactionDirty(false)

Method	openTableInConnection
		- add createIfMissing param, passed to backend

Method	cloneTbleWithCachNoSelection
		- added ******** RENAME THIS ********
		
Method	saveRecord
		- sets mTransactionDirty conditionally on mInTransaction
		
Method	generateTestData
		- add beginTransaction/commitRecord pair
		
Method	abortTransaction
		- added inline forwarder to the backend
		
Method	commitTransaction
		- added inline forwarder to the backend
		- moved clearing of mInTransaction inside the if(mInTransaction)
		
		
Method	beginTransaction
		- added inline forwarder to the backend
		- also set mTransactionDirty = false rather than relying on earlier
		   state transitions to leave it false
		- added assert that mInTransaction isn't true to start with
		   (may change with review of transactions)
		
		
CLASS	OOF_tableBackend
Method	abortTransaction
		beginTransaction
		commitTransaction
		- pure virtuals added
		

FILE		oof1.h
- IGNORED David's #include "dbUser.h"		
- IGNORED David's #define kschemaExt "osc"


oofMaskMultiStrings::appendTarget

		
						
						
FILE		dbBLOBStorage
Method	blobState
		- add an ostream& param instead of hardwired write to file

								
FILE		dbBLOB
Method	blobState
		- add an ostream& param instead of hardwired write to file
								
Method	extract
		- change comparison of __MWERKS__ == 0x2301 to >=
		   so compatible with Pro6
		   


FILE		oofMacro.h
Macro	ABSTRACT_BASE_METHODS
		- added cloneTbleWithCachNoSelection, cloneWithCachNoSelection
		
		
CLASS	oofMaskMultiStrings
Method	appendTarget				   								
		- added variation taking termination string
		
Method	finnishedParse
		- added and renamed to finishedParse		


DIR		Faircom server support
- renamed to fserv to match Unix-friendly naming of other dirs


FILE		dbUser.h, .cpp
- added these files to core directory


FILE		oof3.cpp
Func		operator<<(ostream& os, OOF_fieldTypes ft)
		- write fixedBinary, bool and compound with unique strings
		   (looked like stupid copy/paste bug)
		   

CLASS	OOF_ctreeBackend
Method	validFileMode		   
		- added

Method	BuildIFIL
		- add assert to check file mode

Method	addIndices
		- add validation assertion
		
Method	openTableInConnection
		- added createIfMissing param & error handling

Method	MapCtreeDODATypeToFieldType
		- added 				

Method	BuildConnectionSchemFromFile
		- added 						
		

CLASS	dbConnect_ctree
Method	openOrCreateConnection
		FinishOpenOrCreateConnection
		stateTransition
		setToStartState
		- added David's new methods

Method	OpenMySpecialTables
		- revised to allow createIfMissing param

Method	BuildConnectionSchemas
		- added to call buildSchemas						

Method	buildConnectionSchemaFromFile
		- added early version
				
		
FILE		oofctre4 .cpp
Func	OOF_CheckPath
		- carbonized
		

CLASS	dbConnect_dbase
Method	FinishOpenOrCreateConnection
		- added
		- fixed bug throwing a ctree error class (copy/paste error?)
		
Method	openOrCreateConnection
		- added
		
Method	createTableInConnection
		- Carbonized to use FspCreate

Method	openTableInConnection
		- added createIfMissing param

Method	openFile
		- return bool false instead of raising an error if file missing
		

CLASS	oofE_dBaseConnectionError
		oofE_dbUser
- added in oofexcep.h/.cpp

										
										
CLASS	oofDirectory
Method	dtor
		delDirectory
		- only closeWDDirectory if carbonized
												
Method	ctor(short vRefNum, long dirID, bool searchForDirAllVols) 
		ctor(FSSpec&)
		- replace createWorkingDirID with createDirID

Method	closeWDDirectory
		- comment out in total for Carbon builds														

Method	setDirFromPath
		- replace createSubDirsAndWorkingDirID with createSubDirs

Method	PathToDirID
		- Carbonized
		
Method	gotoDirectory
		- Carbonized to use HSetVol
		
CLASS	dbConnect_ram
Method	openOrCreateConnection						
		- added
		
Method	writeSchema
		- added empty method - nothing saved
		
		
CLASS	dbConnect_ramp
- mWritesOOFSchema added

Method	ctor
		- init mWritesOOFSchema(false)

Method	openOrCreateConnection
		- added

Method	FinishNewConnection
		- create a schema string

Method	save
		- downcast backend to OOF_rampBackend & call save instead of close
							
Method	writeOOFschema
		writeRampSchema
		- added 

Method	close
		- just does assert(???)						
		
		
CLASS	OOF_simpleRecordBackend
Method	describeBlobs		
		- change to create local debug stream and pass to blobState()

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/10/31
MERGE DAVID FINAL CORRECTIONS TO ABOVE

CLASS	dbConnect
- sSchemaFileExt added

Method	schemaFileExt
		- added setter


FILE		oofFsrv.h
- added forward decl of dbUser		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/01
CLEANUP WHILST RUNNING CODE THROUGH DOXYGEN FOR REF MANUAL

General search and replace
has_bool replaced with OOF_HAS_BOOL


CLASS	oofDirectoryVisitor
Method	enterDir, visit, leaveDir, enterRoot
		- make oofDirectory* caller param optional so old code will compile
		   and users don't have to pass in
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/03
FIX CARBONISATION BUG SO CODE BACKWARD COMPATIBLE TO PRE-CARBON PROJECTS
AS WELL AS NEW PRO6 POWERPLANT HEADERS FOR CLASSIC TARGETS
(which #define TARGET_API_MAC_CARBON  0)

GENERAL REPLACE
#ifndef TARGET_API_MAC_CARBON
with
#if !defined(TARGET_API_MAC_CARBON) || TARGET_API_MAC_CARBON==0

#ifdef TARGET_API_MAC_CARBON
with
	#if defined(TARGET_API_MAC_CARBON) && TARGET_API_MAC_CARBON!=0

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/07
MERGE DAVID SCHEMA READING

CLASS	dbConnect
- mSchemaFileName added

Method	MakeSchemaFileName
		MakeOOFSchemaString
		WriteOOFSchemaFile
		- added
		

FILE		oofctre4.cpp
- add 	#include "oofCTRes.h"


CLASS	dbConnect_ctree
Method	newConnection		
		- init mSchemaFileName

Method	SetupConnection		
		- init mBlobFilNo as 3 instead of 1	
		- inc numFiles to include schema file
		
Method	OpenMySpecialTables			
		- OpenMySpecialTables unconditionally mix in Shared for Blobs file mode

Method	writeOOFSchema
		- completed


CLASS	oofFileRef
Method	fileSize				
		- add param to indicate want physical or logical size


CLASS	dbConnect_ramp
Method	readOOFSchema
		makeOOFSchemaString
		- suppressed		

		
FILE		oofCTRes.h
		oofCTRes.cpp
		- added to ctree folder
		- removed #include "oofxmldb.h" & #define OOF_READ_XML as this doesn't use XML
		   (was hangover from early days when thought we'd store schema in XML)	
		
FILE		oofschema.h
		oofschema.cpp
		- added to core folder


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/08
CLEANUP WHILST DOXYGENING

CLASS	OOFILE_PublicBase
- renamed to OOF_PublicBase so has common prefix with othe internal classes

Method	hide
		- make param default to true so more sensible to call, no chance
		   of ambiguity as getter is hidden().
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/09
ENHANCE WORD SEARCHING TO MAKE EASIER TO INTERFACE TO GUI

CLASS	dbTable
Method	hasAnyWordsOf(oofWordParser*)
		hasAllWordsOf(oofWordParser*)
		hasAnyWordsStartsWithOf(oofWordParser*)
		hasAllWordsStartsWithOf(oofWordParser*)
		- added creating clauses with dbQueryLiteralStrArray
		
Method	searchSelContainsAnyOf(const dbField& schField, oofWordParser*);
		searchSelContainsAllOf(const dbField& schField, oofWordParser*);
		- added forwarding to backend methods taking
		   const dbField&, const char** schStrs, unsigned long count)		
		

FILE		oofQuery.h
- added forward decl of oofWordParser


FILE		oofQuery.cpp
- added #include "oofwords.h"

CLASS	oofWordParser
- mGeneratedStrings, mGeneratedCount, mIterStrings added

Method	ctor
		- init mGeneratedStrings, mGeneratedCount, mIterStrings all 0

Method	dtor
		- delete mGeneratedStrings
				
Method	generateSearchArray
		- added to update mGeneratedCount & create mGeneratedStrings		
		   with caching - does nothing if strings already complete
		   
Method	start(), next
		- if mGeneratedStrings use those instead of reparsing



CLASS	OOF_UniqueWordList
- renamed to OOF_WordList as it's not unique


CLASS	OOF_WordList
Method	orphanStringArray
		- added hacky method to get const char** back
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/13
HIDE KEYWORD DATA AND HIDDEN FIELDS FROM CASUAL DUMPS

CLASS	OOF_Dictionary
Method	startVisible
		moreVisible
		nextVisible
		countVisible
		- change bool param to default true
		
Method	iter
		- added so can see where xxVisible has iterated up to		


CLASS	dbTable
Method	dumpData
		- only output visible fields unless OOF_EXTRACT_HIDDEN defined		
		

CLASS	dbConnect
Method	dumpData
		- only output visible tables unless OOF_EXTRACT_HIDDEN defined		


CLASS	OOF_ctreeKeywordIndex
		OOF_FServKeywordIndex
Method	buildSchema
		- add "Words" onto table name so keyword table doesn't have same
		   name as owner
		   

CLASS	OOF_ctreeKeywordTable
Method	ctor
		- hide() itself	   


CLASS	dbRelRefBase
Method	extract
		- write out table name at end of relationships
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/13
FIX DEREFERENCE NULL IF ASSIGN EMPTY DATA

CLASS	dbChar
Method	setChars
		- only memcpy to field if incoming string non-null


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/13
FIX M:N RELATIONSHIP ISSUES

CLASS	OOF_recordCache
Method	dtor
		removed assertion as triggers in some exception handling, killing exception
		(debugging only - added if and raise later and reinstated assert)
		
		
CLASS	dbRelRef
- mCachedSearchTable added

Method	ctor
		- init mCachedSearchTable(0) and made non-inline
		
Method	dtor, copy ctor, op= added		 
		- added to delete and not propagate mCachedSearchTable
		
Method	setRelatedRecord(oidT)
		- added for symmetry

Method	setRelatedRecordMatching
		- added to take search clause and wrap using our mCachedSearchTable


CLASS	dbQueryField
Method	getSearchTables				
		- if called on different table to current, return null relatedTable
		
cope with getSearchTables returning diff table & null related table in		
- OOF_simpleRecordBackend::searchSelection
- OOF_simpleRecordBackend::search
- OOF_ctreeBackend::search
- OOF_FServBackend::search		


CLASS	dbQueryClause
Method	cloneReplacingTable
		- added virtual default returning null
		
CLASS	dbQueryBinary
Method	cloneReplacingTable
		- added possibly returning clone if LHS field expression cloned
		
CLASS	dbQueryTrinary
Method	cloneReplacingTable
		- added possibly returning clone if LHS field expression cloned

CLASS	dbQuery
Method	cloneReplacingTable				
		- added possibly returning clone if embedded cloned


CLASS	dbQueryField
Method	cloneReplacingTable
		- added possibly returning clone if fields match


CLASS	dbQueryBinaryCombo
Method	cloneReplacingTable
		- added possibly returning clone if LHS or RHS cloned
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/13
ALLOW EXTENDING TYPE-SAFE RELATIONSHIP FIELDS

FILE		oofmacro.h
Macro	REL_REF_BODY
		- remove opening & closing } so can be used by itself in a decl, like OOFILE_METHODS
		
Macro	DECLARE_REF
		DECLARE_SET
		- add opening & closing }		


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/14
DEBUGGING RELATIONSHIPS - CRASH WHEN EXCEPTION THROWN

CLASS	OOF_recordCacheCopier
Method	receiveMsg
		- also cope with OOFmsg_BroadcasterClosing as may get this when exceptions thrown

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/16
FIX CRASH IF NEVER USED RELATIONSHIP BEFORE selectAllRelated

CLASS	dbRelRefBase
Method	selectAllRelated
		- add conditional call to BuildRelatedTable


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/19
ADD EASIER STRING REMOVAL OF TRAILING & BUGFIX endsWith

CLASS	oofString
Method	endsWith(const char*,
		- copy if mBody null
		- take optional 2nd param of input len, to save calling strlen twice
		
Method	operator-
		- added to return substring
		
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/19
FIX BUG IN RELATIVE PATH CONVERSION - WAS ADDING COLON IF PARENT-RELATIVE

CLASS	oofDirectory
Method	setDirFromPath
		- check if generated path already has leading colon


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/19
ALLOW SIMPLE XML-DRIVEN REPORTS WITH EXISTING DATABASE

CLASS	dbTable
Method	makeView		
		- only dump visible fields, like 2000/11/13
		  HIDE KEYWORD DATA AND HIDDEN FIELDS FROM CASUAL DUMPS


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/23
INTEGRATE DAVID CHANGES FOR PRO6

CLASS	dbConnect_ctree
Method	SetupConnection
		- init mBlobFilNo as 2, not 3
		
CLASS	oofE_oofSchemaParser
		oofE_oofCTRes
		- added to oofexcep.*
		

CLASS	OOFCTResource
- renamed to ....

Method	openIFile
		openFile
		- remove ext & iExt params

Method	OOFCTResource::openFile
			- make Carbon-compliant						
			

FILE		oofios.h
- change #ifdef MSIPL_USING_NAMESPACE to
#if __MWERKS__ >= 0x2400 || MSIPL_USING_NAMESPACE


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/23
FINISH BUILDING WITH PRO6

CLASS	oofWordParser
Method	orphanStringArray
		- changed creation of return const char** from
		   new char*[...]
		   to
		   new const char*[...]


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/23
FINISH BUILDING WITH PRO6

CLASS	oofString
Method	setStr255(const Str255&
		oofString& operator=(const Str255&
		operator==(const Str255&
		- change params to const Str255		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/11/27
FIX TO CARBONISED OOFILE OOFDIR
FILE		ooffiles.cpp
changed	#if defined(TARGET_API_MAC_CARBON) || TARGET_API_MAC_CARBON==0
to #if not defined(TARGET_API_MAC_CARBON) || TARGET_API_MAC_CARBON==0

CLASS 	oofDirectory
METHOD	CreateHardDirID
		- In code which handles relative traverse up the directory (eg :::mydir), replaced 
		pos++ with theCount++ in the innerloop.
		-moved closing '}' for the outer loop to contain all the relative path code
	

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/12/11
SIMPLIFY SUBCLASSING oofDirectoryVisitor

CLASS	oofDirectoryVisitor
- mIgnoreBadAliases added

Method	ctor
		- take param, default false, to init mIgnoreBadAliases
		
Method	handleLinkUnresolved
		- return mIgnoreBadAliases instead of always false, so subclasses which
		   wish to trivially ignore can do so without overriding method
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/12/11
FIX DIRECTORY BUGS INTRODUCED IN 2000/09/14 FOR ABSOLUTE PATHS

CLASS	oofPathString
Method	isMacPath
		isDOSPath
		isUnixPath
		- added to test the range of path types
		

CLASS	oofDirectory
Method	setDirFromPath _Macintosh
		- modify prev change to make more efficient by using path type already calculated 
		by testing isMacPath(pathType) rather than just compare to macRelPath!
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/12/11
ALLOW POST-PROCESSING OF DIRECTORY SYMMETRIC WITH enterDir, EG: DELETING ON DEPARTURE

CLASS	oofDirectory
Method	visitFiles
		- pass file details into leaveDir, same as enterDir


CLASS	oofDirectoryVisitor
		oofDirectoryList
		oofDelDirTreeVisitor
Method	leaveDir		
		- take oofFileRef& same as enterDir
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2000/12/14
CLEANUP MIXED CASE MACROS
These have been an ongoing source of confusion as macros by tradition are all upper case

General search & replace
OOF_Debug -> OOF_DEBUG
OOF_SmartHeap -> OOF_DEBUG_WITH_SMARTHEAP

		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/01/07
ADD FAST ASSIGNMENT FOR QUICKLY ADDING RECORDS

CLASS	dbTableAssigner
- added little utility class to allow for insert operators use with table
   once we've started adding a record


CLASS	dbTable
Method	dbTableAssigner operator<<(const char*)
		- added to create record & set first field

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/01/07
STRICTER COMPILE WITH ANSI C++

CLASS	dbConnect_ctree
Method	FinishOpenOrCreateConnection
		- add extra braces in switch to provide scope for local decls
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/02/06
INCLUDE DAVID FIXES FOR CREATING MANY RELATED RECORDS

CLASS	OOF_simpleRecordBackend
Method	unloadRecord
		- call mSelection.resetFakeNewRecordOffSet so we reset, otherwise could only
		   ever add N related records in one run of a program (N user defined but default
		   to 2048).
		   
FILE		oofrecs.h
- adjust default OOF_FIRST_SYNTHETIC_RECORD_OFFSET to allow 9216 related 
   records for a single parent (default was 2048)
   
CLASS	OOF_recordSelection
Method	resetFakeNewRecordOffSet
		- added to allow resetting by any code


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/02/06,14
FIX BUG IN OOFSTRING IF REPLACE  STRING WITH ITSELF & IMPROVE PERFORMANCE

CLASS	oofString
Method	replaceString
		- add simple test using strcmp
		- note later added bracketing around indented "if"
		   (I wonder would CodeCheck have caught this?)
		- move strlen call from inside loop to once-off
		- call replaceAt with replacement string length
		- call find with replacement string length
		
Method	replaceAt
		- take optional replacement string length to save calling strlen
		- allow replacing with null string (typical user call to remove substrings)
		
Method	find
		- take optional search string length to save calling strlen
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/02/10
MAKE BLOB TESTS COMPILE ON ALL PLATFORMS

CLASS	dbBlob
Method	adoptBody
		append
		setBytes
		- revert back to void* and const void* params
		
				
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/05/24
CLEANUP WHILST ADDING LOTS MORE DOXYGEN COMMENTS FOR CLASSES & METHODS

FILE		oofrecs.h
- removed Mac-specific OOF_CheckPath and OOF_SetPath as they aren't used except by one
   of our samples and I don't like this functionality sitting out in platform-specific global functions
   when oofPathString or oofDirectory can be used.
   
FILE		oofSchema
CLASS	relationshipsToInstantiate   
- rename to OOF_RelationshipsToInstantiate to conform to naming standards


CLASS	dbView
Method	currentHeading
		- removed as there is no way to control the iterator which it uses and no OOFILE code uses it.



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/08/06
INCLUDE EXTRA STRING SEARCH FROM DAVID

CLASS	oofString
Method	replaceStringWholeWord
		- added

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/08/17 
MERGE DAVID'S OS/X AND PRO7 FIXES


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/08/17 
MERGE DAVID'S FILE FIXES

CLASS	oofDirectory
Method	CreateHardDirID
		- null terminate scrap path copied from Pascal string

Method	CreateSubdirsAndWorkingDirID
		- delete leaked temporary path variable

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/09/03
ADDING TRANSACTION METHODS TO CTREE BACKEND FOR SINGLE USER BUILDS

FILE 		oofctre4.cpp
CLASS	OOF_ctreeBackend::Added conditionally compiled code to initialise
CLASS	dbConnect_ctree
Member	sFileMode
		-Added conditionally compiled code to initialise sFileMode 
		for NOTFORCE TRANPROC code, (ie single user with transproc)
		
CLASS		OOF_ctreeBackend
METHOD		beginTransaction
METHOD		commitRecord
METHOD		abortTransaction
			- Added code from client server backend

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/09/07
FIXING TRANSACTIONS

CLASS	OOF_ctreeBackend
Method	commitRecord
		-changed to commitTransaction so it better matches beginTransaction & abortTransaction
		
CLASS	OOF_FServBackend
Method	commitRecord
		-changed to commitTransaction so it better matches begin Transaction & abortTransaction
		
CLASS	OOF_simpleRecordBackend
Method	commitRecord
		-changed to commitTransaction so it better matches begin Transaction & abortTransaction

CLASS	dbTable
Method	commitTransaction
		-changed to commitTransaction so it better matches begin Transaction & abortTransaction

CLASS	dbTable
Method	generateTestData
		- changed commitRecord to commitTransaction

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/09/03 
MERGE DAVID'S ADDITION OF TRANPROC TO CTREE BACKEND FOR SINGLE USER

FILE		oofctre4.cpp
include TRNLOG where appropriate into OOF_ctreeBackend::sFileMode & dbConnect_ctree::sFileMode

CLASS	OOF_ctreeBackend
Method	beginTransaction				
		- call Begin conditionally on TRANPROC being defined

Method	commitRecord				
		- call Commit conditionally on TRANPROC being defined

Method	abortTransaction
		- call AbortXtd conditionally on TRANPROC being defined
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
VERSION 1.4.0b1d02   LIMITED RELEASE FOLLOWING RELEASE TO CODEWARRIOR PRO7 CD
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/09/13
GENERALISE USE OF MEMORY DEBUGGERS, REMOVING SMART-HEAP SPECIFIC CODE
				
In all code, replace:
	#ifdef OOF_MEM_DEBUG
		#include "smrtheap.hpp"
	#endif

with
	#ifdef OOF_MEM_DEBUG_LAST_INCLUDE
		#include OOF_MEM_DEBUG_LAST_INCLUDE  
	#endif


replace
	#ifdef OOF_DEBUG_WITH_SMARTHEAP
		assert(MemPoolCheck(MemDefaultPool));
	#endif		

with
	#ifdef OOF_MEM_DEBUG_FORCE_POOL_CHECK
		OOF_MEM_DEBUG_FORCE_POOL_CHECK
	#endif		
				
				
FILE	OOF_Debug_prefix.h
- add #define OOF_MEM_DEBUG_LAST_INCLUDE "oofDebugNew.h"


FILE	core/oofDebugNew.h
	core/oofSmartheap.h
- added to do any defines and #includes necessary to use these memory debuggers


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/09/15
REMOVE LEAK WITH INDEXED C-TREE

CLASS	OOF_ctreeBackend
Method	DeleteIIDX	
		- enable cleanup depending on mFieldCtreeMapRefCount (was disabled always)
		
Method	BuildIFIL
		- replace delete[] mIFIL.ix; with an assert(!mIFIL.ix) to assert that DeleteIIDX
		   has now done its stuff
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/09/15
REMOVE LEAK REPORTS DUE TO STATIC DELAYED CLEANUP

CLASS	OOF_DummyStorage
Method	ReleaseAllStorage
		- added to totally clear dummy storage for static cleanups


CLASS	OOF_DummyString
Method	releaseAllStorage
		- added static to call OOF_DummyStorage::ReleaseAllStorage
		
		
CLASS	dbConnect_ctree
Method	close
		- decrement sConnectionsOpened unconditionally (was inside #ifdefs)
		- call releaseAllStorage when the last connection is closed
		
		
CLASS	OOF_ExpandableLongArray
Method	deleteAllCells
		- add optional param to indicate we want to force storage being deleted and
		   so invoke DeleteBits() 
		
Method	DeleteBits
		- also clear mNumSlots		

FILE		oofpch_c.h
for OOF_DEBUG mode in MSVC, #define _CRTDBG_MAP_ALLOC	 and  _DEBUG


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/01
BUILDING ALL TARGETS WITH MSVC 6

CLASS	reversed
- remove Friend declarations
- add public accessor Field()


operator<<(dbSorter& os, const reversed& r)
operator<<(OOF_FieldSegOwner& os, const reversed& r)
		- use reversed::Field rather than relying on friendship
				
				
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/02
FIX INTRODUCED BUG (2001/09/15) - CRASH WHEN CREATING RELATED DATA
(eg: AntFarm testContactDemoData).
"Assertion (mNextFreeEntry <= mNumSlots) failed in "oofarray.cpp" on line 214"

Diagnosis - mNumSlots now being cleared in DeleteBits but is expected to retain its value 
around a call to DeleteBits from CopyBits.
				
				
CLASS	oofArray
Method	Invariant 				
		- added inline to confirm state of essential members

Method	oofArray::operator=(const oofArray& rhs) 
		- assert(Invariant()) before exit

Method	ExpandToInclude
		- assert(Invariant()) before exit

		
CLASS	OOF_ExpandableLongArray
Method	Invariant 				
		- added inline to confirm state of essential members
		
Method	CopyBits
		- only call DeleteBits if mBits!=0
		- assert(Invariant()) before exit
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/07
ADD 'ONE LINE REPORT' CONSTRUCTION

CLASS	dbTable
Method	makeView
		- made virtual so can sensibly override in user tables


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/11
FIX BUG WITH NULL STRING ARGS UNDER CODEWARRIOR PRO7
						
CLASS	dbChar
Method	operator=(const char* str)
		- check for null arg & call clear()
		
Method	operator+=(const char* str)
		- check for null arg & don't append

Method	setStr255
		- change RHS cast from (char*) to (const char*)


CLASS	dbFixedBinary
Method	operator=(const char* str)	
		- check for null arg & call clear()

Method	clear
		- added
		

CLASS	dbBLOBstorage
Method	setBytes(const char* buf , unsigned long bufLen)
		- add case to cope with  zero buf & non-zero length		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/15 (merge code written 2001/09/08)
TRANSACTION MODES HANDLING

CLASS	OOF_ctreeBackend
Member	static  sTransMode
		- added it to the single user ctree and ctree server builds.
		 gave it the default state of ctKEEP_OUTserver builds and single user TRANPROC builds

Member	static  sTransReleaseMode
		- added it to the single user ctree and ctree server builds.
		 gave it the default state of ctKEEP_OUT server builds and single user TRANPROC builds

CLASS	OOF_ctreeBackend
Method	beginTransaction
		- Changed ::Begin parameter to use OOF_ctreeBackend::sTransMode instead of hard coded values

CLASS	OOF_ctreeBackend
Method	abortTransaction
		- changed ::AbortXtd parameter to use OOF_ctreeBackend::sTransReleaseMode instead of hard coded values

CLASS	OOF_ctreeBackend
Method	commitTransaction 
		-::AbortXtd parameter to use OOF_ctreeBackend::sTransReleaseMode instead of hard coded values

CLASS	OOF_ctreeBackend
Member	sTransReleaseMode	
long OOF_ctreeBackend::sTransReleaseMode = TRNLOG|ENABLE;
- added it to the single user ctree and ctree server builds.
		 gave it the default state of ctKEEP_OUT;	
 
=-=-=-=-=-=-=-=-=-

CLASS	OOF_FServBackend
Member	sTransMode
 CLASS	OOF_FServBackend
Member	static member OOF_ctreeBackend::sFileTransMode
		- added it to the single user ctree and ctree server builds.
		 gave it the default state of TRNLOG|ENABLE server builds and single user TRANPROC builds

Member	static  sTransReleaseMode
		- added it to the single user ctree and ctree server builds.
		 gave it the default state of ctKEEP_OUT server builds and single user TRANPROC builds

 
 CLASS	OOF_FServBackend
Method	beginTransaction
		- Changed ::Begin parameter to use OOF_ctreeBackend::sTransMode instead of hard coded values

i
CLASS	OOF_ctreeBackend
Method	abortTransaction
		- changed ::AbortXtd parameter to use OOF_ctreeBackend::sTransReleaseMode instead of hard coded values

CLASS	OOF_ctreeBackend
Method	commitTransaction 
		-::AbortXtd parameter to use OOF_ctreeBackend::sTransReleaseMode instead of hard coded values

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001 /09/19
MAKE TRANSACTION HANDLING MORE FLEXIBLE
CLASS	dbTable
Method	beginTransaction
		- added parameter tMode default = 0; to pass in transaction modes
		
Method	abortTransaction
Method	commitTransaction
		- added parameter rMode default = 0; to pass in transaction release modes
		
		
CLASS	OOF_ctreeBackend
Method	beginTransaction
		- added parameter tMode default = 0; to pass in transaction modes
		
Method	abortTransaction
Method	commitTransaction
		- added parameter rMode default = 0; to pass in transaction release modes

CLASS	OOF_simpleRecordBackend::

Method	abortTransaction
Method	commitTransaction
		- added parameter rMode default = 0; to pass in transaction release modes


CLASS	OOF_FServBackend
Method	abortTransaction
Method	commitTransaction
		- added parameter rMode default = 0; to pass in transaction release modes










-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

FIX BUG IN RELEASE OF TRANSACTION
2001/09/08
CLASS	OOF_ctreeBackend
Member	sTransReleaseMode	
		-Changed default state to FREE 
		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/15
INTEGRATE DAVID IMPROVEMENTS DBASE RELIABILITY WHEN ABORT DATABASE APPLICATION

CLASS	OOF_dbaseBackend
Method	deleteRecord
		- add fflush to guarantee writing delete flag, after fputc('*',mDBfp)

Method	SaveBlob
		- add fflush after fwrite
		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/15-17
FIX BUGS IN PROPAGATING DELETES AND DIFFERENT RELATIONSHIP CONNECTIVITY

CLASS	dbRelRefBase		
Method	ctor
		- init mPropagatesDeletes(false) instead of true

Method	relatesTo
		- set mPropagatesDeletes true only for LHS of 1:N relationship.

Method	isRef
		- added to check mMaxLinks (as David suggested)

use isRef instead of checking mMaxLinks in
- dbRelRefBase::changeRelationshipTo
- dbRelRefBase::breakRelLink
- dbRelRefBase::describe
- dbRelRefBase::extract
- dbRelRefBase::receiveMsg
- dbRelRefBase::relateFromRecord
- dbRelRefBase::relatesTo
- dbRelRefBase::SetCommonRelationshipFields
- dbRelRefBase::setOID
- dbRelRefBase::updateRelValue

Method	isOneToMany, isOneToOne, isManyToOne, isManyToMany
		- added to easily check kind of relationship in terms that make sense to user

Method	isJoin
		- added query that will stop relying on using joinField() to test if it's a join 
		   relationship
		   
Method	propagateRelatedDeletes
		- check state of table to guard against resetting once open
		
Method	SetCommonRelationshipFields
		- set mInverseField initially to the prototype field that was passed in,
		   so any checks that use mInverseField for lookups will work.
		   				   

CLASS	dbTable
Method	inDeclarativePhase
		- added		


CLASS	dbConnect
Method	isOpen
		- added for symmetry	
		
Method	inDeclarativePhase
		- added


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/17
ATTEMPT TO FIX STEVE'S BUG WITH CACHING UNTOUCHED NEW RECORDS AND COUNT
(new records are not included in count but dirty ones are - annoyingly inconsistent)

CLASS	OOF_simpleRecordBackend
Method	CachingContextChange		
		- also cache new records that aren't dirty (ie: untouched)

Method	count
		- inc the return count if isNew for someRecords case when we aren't 
		   caching dirty records (if we cache, they are already in the selection).
		   NOT happy about this distinction!

		
CLASS	OOF_dbaseBackend
Method	countAll
		- inc the return count if isNew

		
CLASS	OOF_ctreeBackend
Method	countAll
		- inc the return count if isNew


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/22
SUPPORT LOOKUP TABLES

CLASS	dbTable
Method	recordNumberOfOID
		- added simple forwarder

		
CLASS	OOF_tableBackend
Method	recordNumberOfOID
		- added simple forwarder
				
		
CLASS	OOF_simpleRecordBackend
Method	recordNumberOfOID
		- added version which just iterates comparing currentOID


CLASS	dbRelRef
Method	setRelatedRecord(dbTable* rhsTable)
		- added so can write GUI code that sets relationships not knowing rel type


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/22
CLEANUP WHILST WORKING ON CORE OOFILE

CLASS	OOF_tableBackend
Method	conditionally declared blobState
		- renamed as describeBlobs, to match implementation in OOF_simpleRecordBackend
		- made pure virtual const

CLASS	OOF_simpleRecordBackend
Method	describeBlobs
		- made pure virtual

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/23
CLEANUP OID-SELECTION AND REMOVE selectJustRecordPointer

CLASS	OOF_tableBackend
Method	selectJustRecordPointer
		- removed, replace all use by selectJustOID as they were identical methods!


CLASS	OOF_simpleRecordBackend
Method	selectJustRecordPointer
		- removed, replace all use by selectJustOID as they were identical methods!

Method	selectJustCurrent
		- use selectJustOID
		
Method	selectJustOID
		- implement using body from selectJustRecordPointer
		- return false if zero OID passed in and do selectNone
		   (in case called at lower level, dbTable::selectJustOID does same check)
		   
		   		
CLASS	dbTable
Method	selectJustOID
		- cope with zero OID by selectNone (was just asserting)
		- include new OID in broadcast of OOF_ChangeSel
		
Method	selectJustRecordPointer
		- removed, replace all use by selectJustOID as they were identical methods!
		   (originally different as we planned to support integer recordAddress in parallel
		    with the oidT but future expansion to 64bit pointers makes this too dangerous and
		    high chance of confusing users)
		    
		    
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/23
MAKE VIEW CONSTRUCTION EASIER WITH CLONED FIELDS & CENTRALISE LOGIC

CLASS	dbView
Method	append(const dbField&	, ...)
		- call append(dbField* instead of local casting append logic
		
Method	append(const dbField*, ...)
		- call append(dbField* instead of local casting append logic
		
Method	append(dbField*, ...
		- even when not mCloneSource, check if fields are on a clone of our table
		   and append the equivalent field, so users can't create subtle bugs by attaching fields
		   defined on another table (see dbFieldPickLink::copyFieldToLink)
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/10/26
ATTEMPT TO MAKE WINDOWS DLL BUILDS WORK WITH REPORT WRITER

FILE		oof0.h
- added definition of EXPATPP_EXPORT for using expatpp as DLL


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/13
FIX CRASH WHEN DUMP SOME EXCEPTIONS TO STREAM

CLASS	oofE_CtreeError
Method	extract
		- check if (mTable) before trying to write it
		
CLASS	oofE_CtreeBlobError
Method	extract
		- check if mTable exists before trying to get field from it


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/14
DAVID FIX FOR ORPHANING EMPTY STRING, CAUSING SOME MEM DEBUG LIBS TO COMPLAIN

CLASS	oofString
Method	orphan
		- whcn string is empty, use new[] to create temp string we return,
		   was just new char which didn't match the delete[] then used on the char*


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/14
FIX OLD COMMENTED-OUT TEST TO SEE IF RELATIONSHIPS POINT TO CORRECT TABLES

CLASS	dbRelRefBase
Method	relatesTo
		- restore test and add !wasLHS at beginning so test is only applied from RHS back
		    once both sides of relationship have been established.
		    
		    
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/15
AVOID NEED TO CAST SEARCH ARGUMENTS WITH CODEWARRIOR PRO6 OR ABOVE
(C++ standard uses same lame ambiguity matching as VC, so now CodeWarrior is dumber)

FILE	oof4.cpp
- make conditional casts allow MWERKS for Pro6 onwards for all the extra dbNumericField operators


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/15
FIX FAILURE OF MN RELATIONSHIPS IN OOFTST42 DUE TO OVERLY STRINGENT RELATIONSHIP CHECKING

CLASS	dbQueryField
Method	getSearchTables
		- change if (relatedTable && relatedTable==inSchTable)
		to
		if (relatedTable && 
		(relatedTable->baseTableOfRelationChain()==inSchTable)
		because it was being triggered by MN relationships where the relatedTable
		is the MN link table, not actually matching inSchTable.
		
		Would probably cause other failures as well with complex related queries.
		

CLASS	dbRelRefBase
Method	propagateRelatedDeletes		
		- remove the if (!mTable->inDeclarativePhase... test because it fails in some cases
		   when a table is being cloned, along with its related tables.
		   
		   

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/15
FIX CRASH IF NEVER OPEN DATABASE, BUG FROM 2001/09/15 CLEANUP ENHANCEMENTS

CLASS	OOF_DummyStorage
Method	DeleteAllStrings
		- add call to mStringCache.deleteAllCells(false) so we don't leave
		   the cache in an inconsistent state.

		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/15
ADD TEST TO SEE IF USER HAS CORRECT RELATIONSHIP TYPES 
(ie: dbVisitsSet is used to point at a dbVisits)

CLASS	dbRelRefBase
Method	pointsToCorrectTableType
		- added virtual default, always true
		
FILE		oofmacro.h
Macro	REL_REF_BODY		
		- add decl of overriding pointsToCorrectTableType that compares
		   the class name passed into the macro with that which was used
		   to declare the class to which we're pointed, using the generated
		   override of dbTable::defaultName
		   
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/15
FIX PROBLEMS WITH CODEWARRIOR PRO6/7 PARSING TEMPORARY STREAMS
	using a stringstream() temporary invokes 
	template <class charT, class traits>
	basic_ostream<charT, traits>&
	basic_ostream<charT, traits>::operator<< (const void* p)
	
	for the first inserter in an expression like
	testTakeStream(stringstream() << "first line\n" << "second\n");
	
	In Pro5 and Visual C++ it correctly invokes 
	template<class traits>
	basic_ostream<char, traits>&
	operator<< (basic_ostream<char, traits>& out, const char* s) 
	
	for both inserters.
	

SEARCH/REPLACE ALL SOURCE
replace stringstream() with stringstream() << flush



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/16
IMPROVE APPEARANCE OF MAC ALERT BOXES THAT REPORT OOFILE ERRORS

CLASS	oofErrorReporter
Method	raise(both
		- replace \n with \r in incoming string


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/19
ADD FILE CREATION DATE AND UTILITIES FOR EASIER FILE READING

CLASS	oofFileRef
Method	created
		- added for Mac, Windows and Unix, as slight modification of lastModified
		

CLASS	dbText
Method	adoptString(oofString&		
		- added to make it more efficient to copy strings we've built up into the database

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/20
ADD OPTIMAL UNION FOR HIGHWAY1
(massive, non-intersecting union_with calls are common in their accounting)


CLASS	dbTable
Method	union_with_no_overlap
		- added 3 copies of union_with for application author to guarantee no overlap

Method	appendSelection
		- use union_with_no_overlap


CLASS	OOF_tableBackend
Method	union_with_no_overlap
		- added  2  pure virtuals


CLASS	OOF_simpleRecordBackend
Method	union_with_no_overlap
		- added  2 copies of union_with calling selection to do the work
		
CLASS	OOF_selection
Method	union_with_no_overlap
		- added  pure virtual


CLASS	dbSelection
Method	union_with_no_overlap
		- added 3 copies of union_with for application author to guarantee no overlap


CLASS	OOF_selection
Method	union_with_no_overlap
		- added  pure virtual

		
CLASS	OOF_recordSelection
Method	union_with_no_overlap
		- added 2 copies of union_with including the one which is the REAL guts

Method	expandToInclude
		- added inline forwarder
		

CLASS	OOF_recordSelectionRep
Method	ExpandToInclude		
		- added



-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/20
MAKE DIRECTORY VISITING SMARTER AS TO VISITING FILES OR DIRECTORIES

CLASS	oofDirectory
Method	makeFileList
		- pass in oofFileRef::eDir or eFile to oofFileRef ctor
		   so it knows it is file or directory (makes Mac match Windows version)
		   
Method	visitFiles
		- create a temp oofFileRef for the enterDir & leaveDir calls so we can specify it is a directory,
		  rather than just passing the FSSpec.		   
		- create a temp oofFileRef for the visit calls so we can specify it is a file,
		  rather than just passing the FSSpec.		   


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/20
MAKE IT POSSIBLE TO ALLOCATE AND WRITE DIRECTLY TO A BUFFER IN A DBBLOB

CLASS	dbBLOB
Method	allocRoomFor
		- also call SetLength so a subsequent call to markDirty will cause the field to be written
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/21
CLEANUP OLD EXPERIMENTAL SCHEMA OUTPUT FOR RAMP BACKEND

CLASS	dbConnect_ramp
- mSchemaString removed

Method	FinishNewConnection
		- don't set mSchemaString
		
Method	writeRampSchema
		- use previously commented-out code to generate schema string 
		- add test for Visual C++ to avoid calling fprintf on null length string
		- remove writing out of mSchemaString		
		
		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2001/11/26
MAKE 1.4 BUILD WITH CODEWARRIOR X86 COMPILERS

FILE		ooffiles.cpp
- add conditional includes for stat.h and types.h instead of sys/*


CLASS	oofDirectory
Methodd	visitFiles
		- wrap the ::_makepath call to comment it out for CodeWarrior
		THIS IS A BUG - I NEED TO ADD LOGIC TO REPLACE MAKEPATH TO FIX THIS!
		
		
oofMaskMultiStrings::loadFile
		- comment out Mac-specific catch of OSErr
		
		
CLASS	dbWin3RGB		
Method	ctor 	dbWin3RGB(FieldIsStandalone
		change param to be real type 	dbWin3RGB(FieldIsStandaloneT
		assume this hasn't been compiled for a LONG time!
		
Method	operator=(dbWin3RGB&
		- change param to const...
		- replace stupid old form (operator=)((unsigned long)rhs);
		  with 	*this = ((unsigned long)rhs);

		
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2002/01/07
FIX TO ALLOW openOrCreateConnection WITH SIMPLE TABLES, NO BLOBS 
(and clarify transition code)

CLASS	dbConnect
- enum eCtreatedFile renamed to eCreatedFile
- enum eOpenInCreation renamed to eInvalidlyOpenInCreation
- enum eCreationInOpen renamed to eInvalidlyCreationInOpen

Method	stateTransition
		- renamed to OpenOrCreateStateTransition to be clearer of role and follow case conventions
		- param newState renamed to inCreatedOrOpened

Method	setToStartState
		- renamed to InitOpenOrCreateState to be clearer and follow case conventions		


CLASS	dbConnect_ctree
- mFileState removed
- enum connectionFileStateT removed

Method	OpenMySpecialTables
		- cope if no tables needed to be opened because no blobs
		
Method	stateTransition
		- removed, use renamed parent

Method	setToStartState
		- removed, use renamed parent		

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2002/01/07
ADD WARNINGS TO PREVENT PEOPLE USING NO_IDXENT AND BREAKING OOFILE IF KEYS DISALLOW NULLS
CLASS	OOF_ctreeBackend
Method	CompleteIIDX
		- check for NO_IDXENT if key defined that has no nulls

		
Method	countAll
		- check for NO_IDXENT if we find ourselves doing NbrOfKeyEntries


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
2002/01/16
DAVID'S LEAK FIXES


CLASS	OOF_ctreeKeywordIndex
Method	dtor
		- added to delete mTable
		

CLASS	OOF_simpleRecordBackend
Method	AdoptBuffer		
		- zero the buffer pointer after adoptBody called, so we don't retain a pointer
		
CLASS	OOF_recordBufferedContext
Method	dtor
		- delete any remaining mBlobFieldBodies. We were deleting the array but not
		   any bodies it still pointed to.		
		   
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
OOFILE 1.4 PUBLIC RELEASE
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
